

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Dec 02 13:16:54 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4431 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     _TMR0	set	4054
    58  0000                     _TXREG	set	4013
    59  0000                     _RCREG	set	4014
    60  0000                     _SPBRG	set	4015
    61  0000                     _PIE1bits	set	3997
    62  0000                     _RCSTAbits	set	4011
    63  0000                     _TXSTAbits	set	4012
    64  0000                     _T0CONbits	set	4053
    65  0000                     _TRISEbits	set	3990
    66  0000                     _TRISCbits	set	3988
    67  0000                     _TRISD	set	3989
    68  0000                     _TRISA	set	3986
    69  0000                     _TRISB	set	3987
    70  0000                     _PORTCbits	set	3970
    71  0000                     _PORTD	set	3971
    72  0000                     _PORTB	set	3969
    73  0000                     _INTCONbits	set	4082
    74  0000                     _TRMT	set	32097
    75  0000                     _ADON	set	32272
    76  0000                     _RCIF	set	31989
    77                           
    78                           ; #config settings
    79                           
    80                           	psect	cinit
    81  000384                     __pcinit:
    82                           	callstack 0
    83  000384                     start_initialization:
    84                           	callstack 0
    85  000384                     __initialization:
    86                           	callstack 0
    87                           
    88                           ; Clear objects allocated to COMRAM (26 bytes)
    89  000384  EE00  F01D         	lfsr	0,__pbssCOMRAM
    90  000388  0E1A               	movlw	26
    91  00038A                     clear_0:
    92  00038A  6AEE               	clrf	postinc0,c
    93  00038C  06E8               	decf	wreg,f,c
    94  00038E  E1FD               	bnz	clear_0
    95  000390                     end_of_initialization:
    96                           	callstack 0
    97  000390                     __end_of__initialization:
    98                           	callstack 0
    99  000390  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   100  000392  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   101  000394  0100               	movlb	0
   102  000396  EF96  F001         	goto	_main	;jump to C main() function
   103                           
   104                           	psect	bssCOMRAM
   105  00001D                     __pbssCOMRAM:
   106                           	callstack 0
   107  00001D                     _omegaInt:
   108                           	callstack 0
   109  00001D                     	ds	2
   110  00001F                     _count:
   111                           	callstack 0
   112  00001F                     	ds	2
   113  000021                     _omega:
   114                           	callstack 0
   115  000021                     	ds	1
   116  000022                     _vel:
   117                           	callstack 0
   118  000022                     	ds	1
   119  000023                     _stringBuffer:
   120                           	callstack 0
   121  000023                     	ds	20
   122                           
   123                           	psect	cstackCOMRAM
   124  000001                     __pcstackCOMRAM:
   125                           	callstack 0
   126  000001                     ?___lwdiv:
   127                           	callstack 0
   128  000001                     ?___lwmod:
   129                           	callstack 0
   130  000001                     tx_char@a:
   131                           	callstack 0
   132  000001                     ___lwdiv@dividend:
   133                           	callstack 0
   134  000001                     ___lwmod@dividend:
   135                           	callstack 0
   136                           
   137                           ; 2 bytes @ 0x0
   138  000001                     	ds	2
   139  000003                     ___lwdiv@divisor:
   140                           	callstack 0
   141  000003                     ___lwmod@divisor:
   142                           	callstack 0
   143                           
   144                           ; 2 bytes @ 0x2
   145  000003                     	ds	2
   146  000005                     ___lwmod@counter:
   147                           	callstack 0
   148  000005                     ___lwdiv@quotient:
   149                           	callstack 0
   150                           
   151                           ; 2 bytes @ 0x4
   152  000005                     	ds	2
   153  000007                     ___lwdiv@counter:
   154                           	callstack 0
   155                           
   156                           ; 1 bytes @ 0x6
   157  000007                     	ds	1
   158  000008                     utoa@buf:
   159                           	callstack 0
   160                           
   161                           ; 2 bytes @ 0x7
   162  000008                     	ds	2
   163  00000A                     utoa@val:
   164                           	callstack 0
   165                           
   166                           ; 2 bytes @ 0x9
   167  00000A                     	ds	2
   168  00000C                     utoa@base:
   169                           	callstack 0
   170                           
   171                           ; 2 bytes @ 0xB
   172  00000C                     	ds	2
   173  00000E                     utoa@v:
   174                           	callstack 0
   175                           
   176                           ; 2 bytes @ 0xD
   177  00000E                     	ds	2
   178  000010                     utoa@c:
   179                           	callstack 0
   180                           
   181                           ; 1 bytes @ 0xF
   182  000010                     	ds	1
   183  000011                     itoa@buf:
   184                           	callstack 0
   185                           
   186                           ; 2 bytes @ 0x10
   187  000011                     	ds	2
   188  000013                     itoa@val:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0x12
   192  000013                     	ds	2
   193  000015                     itoa@base:
   194                           	callstack 0
   195                           
   196                           ; 2 bytes @ 0x14
   197  000015                     	ds	2
   198  000017                     ??_ISR:
   199                           
   200                           ; 1 bytes @ 0x16
   201  000017                     	ds	4
   202  00001B                     ISR@i:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x1A
   206  00001B                     	ds	2
   207  00001D                     
   208                           ; 1 bytes @ 0x1C
   209 ;;
   210 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   211 ;;
   212 ;; *************** function _main *****************
   213 ;; Defined at:
   214 ;;		line 133 in file "masterSim.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;		None
   219 ;; Return value:  Size  Location     Type
   220 ;;                  1    wreg      void 
   221 ;; Registers used:
   222 ;;		wreg, status,2, cstack
   223 ;; Tracked objects:
   224 ;;		On entry : 0/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   228 ;;      Params:         0       0       0       0
   229 ;;      Locals:         0       0       0       0
   230 ;;      Temps:          0       0       0       0
   231 ;;      Totals:         0       0       0       0
   232 ;;Total ram usage:        0 bytes
   233 ;; Hardware stack levels required when called: 5
   234 ;; This function calls:
   235 ;;		_setupTimer0
   236 ;;		_setupUART
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242                           	psect	text0
   243  00032C                     __ptext0:
   244                           	callstack 0
   245  00032C                     _main:
   246                           	callstack 26
   247  00032C                     
   248                           ;masterSim.c: 134: TRISB = 0xFF;
   249  00032C  6893               	setf	147,c	;volatile
   250  00032E                     
   251                           ;masterSim.c: 135: TRISA = 0x03;
   252  00032E  0E03               	movlw	3
   253  000330  6E92               	movwf	146,c	;volatile
   254  000332                     
   255                           ;masterSim.c: 136: TRISD = 0xFF;
   256  000332  6895               	setf	149,c	;volatile
   257  000334                     
   258                           ;masterSim.c: 137: TRISCbits.RC0 = 1;
   259  000334  8094               	bsf	148,0,c	;volatile
   260  000336                     
   261                           ;masterSim.c: 138: ADON = 0;
   262  000336  90C2               	bcf	4034,0,c	;volatile
   263  000338                     
   264                           ;masterSim.c: 139: TRISEbits.RE0 = 1;
   265  000338  8096               	bsf	150,0,c	;volatile
   266  00033A                     
   267                           ;masterSim.c: 140: TRISEbits.RE1 = 1;
   268  00033A  8296               	bsf	150,1,c	;volatile
   269  00033C                     
   270                           ;masterSim.c: 141: TRISEbits.RE2 = 1;
   271  00033C  8496               	bsf	150,2,c	;volatile
   272  00033E                     
   273                           ;masterSim.c: 142: INTCONbits.GIE = 1; INTCONbits.PEIE = 1;
   274  00033E  8EF2               	bsf	242,7,c	;volatile
   275  000340  8CF2               	bsf	242,6,c	;volatile
   276  000342                     
   277                           ;masterSim.c: 143: setupUART();
   278  000342  ECB6  F001         	call	_setupUART	;wreg free
   279  000346                     
   280                           ;masterSim.c: 144: setupTimer0();
   281  000346  ECA9  F001         	call	_setupTimer0	;wreg free
   282  00034A                     l79:
   283  00034A  EFA5  F001         	goto	l79
   284  00034E  EFA5  F000         	goto	start
   285  000352                     __end_of_main:
   286                           	callstack 0
   287                           
   288 ;; *************** function _setupUART *****************
   289 ;; Defined at:
   290 ;;		line 165 in file "masterSim.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;		None
   293 ;; Auto vars:     Size  Location     Type
   294 ;;		None
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      void 
   297 ;; Registers used:
   298 ;;		wreg, status,2
   299 ;; Tracked objects:
   300 ;;		On entry : 0/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   304 ;;      Params:         0       0       0       0
   305 ;;      Locals:         0       0       0       0
   306 ;;      Temps:          0       0       0       0
   307 ;;      Totals:         0       0       0       0
   308 ;;Total ram usage:        0 bytes
   309 ;; Hardware stack levels used: 1
   310 ;; Hardware stack levels required when called: 4
   311 ;; This function calls:
   312 ;;		Nothing
   313 ;; This function is called by:
   314 ;;		_main
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text1
   319  00036C                     __ptext1:
   320                           	callstack 0
   321  00036C                     _setupUART:
   322                           	callstack 26
   323  00036C                     
   324                           ;masterSim.c: 166: TRISCbits.RC6 = 0;
   325  00036C  9C94               	bcf	148,6,c	;volatile
   326                           
   327                           ;masterSim.c: 167: TRISCbits.RC7 = 1;
   328  00036E  8E94               	bsf	148,7,c	;volatile
   329                           
   330                           ;masterSim.c: 168: TXSTAbits.BRGH = 0;
   331  000370  94AC               	bcf	172,2,c	;volatile
   332                           
   333                           ;masterSim.c: 169: TXSTAbits.SYNC = 0;
   334  000372  98AC               	bcf	172,4,c	;volatile
   335                           
   336                           ;masterSim.c: 170: TXSTAbits.TXEN = 1;
   337  000374  8AAC               	bsf	172,5,c	;volatile
   338                           
   339                           ;masterSim.c: 171: RCSTAbits.SPEN = 1;
   340  000376  8EAB               	bsf	171,7,c	;volatile
   341                           
   342                           ;masterSim.c: 172: RCSTAbits.CREN = 1;
   343  000378  88AB               	bsf	171,4,c	;volatile
   344                           
   345                           ;masterSim.c: 173: PIE1bits.RCIE = 1;
   346  00037A  8A9D               	bsf	157,5,c	;volatile
   347                           
   348                           ;masterSim.c: 174: PIE1bits.TXIE = 0;
   349  00037C  989D               	bcf	157,4,c	;volatile
   350  00037E                     
   351                           ;masterSim.c: 175: SPBRG = 31;
   352  00037E  0E1F               	movlw	31
   353  000380  6EAF               	movwf	175,c	;volatile
   354  000382  0012               	return		;funcret
   355  000384                     __end_of_setupUART:
   356                           	callstack 0
   357                           
   358 ;; *************** function _setupTimer0 *****************
   359 ;; Defined at:
   360 ;;		line 151 in file "masterSim.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		wreg, status,2
   369 ;; Tracked objects:
   370 ;;		On entry : 0/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   374 ;;      Params:         0       0       0       0
   375 ;;      Locals:         0       0       0       0
   376 ;;      Temps:          0       0       0       0
   377 ;;      Totals:         0       0       0       0
   378 ;;Total ram usage:        0 bytes
   379 ;; Hardware stack levels used: 1
   380 ;; Hardware stack levels required when called: 4
   381 ;; This function calls:
   382 ;;		Nothing
   383 ;; This function is called by:
   384 ;;		_main
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           	psect	text2
   389  000352                     __ptext2:
   390                           	callstack 0
   391  000352                     _setupTimer0:
   392                           	callstack 26
   393  000352                     
   394                           ;masterSim.c: 152: INTCONbits.TMR0IE = 1;
   395  000352  8AF2               	bsf	242,5,c	;volatile
   396                           
   397                           ;masterSim.c: 153: T0CONbits.T016BIT = 1;
   398  000354  8CD5               	bsf	213,6,c	;volatile
   399                           
   400                           ;masterSim.c: 154: T0CONbits.T0CS = 0;
   401  000356  9AD5               	bcf	213,5,c	;volatile
   402                           
   403                           ;masterSim.c: 157: T0CONbits.PSA = 0;
   404  000358  96D5               	bcf	213,3,c	;volatile
   405                           
   406                           ;masterSim.c: 158: T0CONbits.T0PS2 = 0;
   407  00035A  94D5               	bcf	213,2,c	;volatile
   408                           
   409                           ;masterSim.c: 159: T0CONbits.T0PS1 = 0;
   410  00035C  92D5               	bcf	213,1,c	;volatile
   411                           
   412                           ;masterSim.c: 160: T0CONbits.T0PS0 = 0;
   413  00035E  90D5               	bcf	213,0,c	;volatile
   414  000360                     
   415                           ;masterSim.c: 161: TMR0 = 250;
   416  000360  0E00               	movlw	0
   417  000362  6ED7               	movwf	215,c	;volatile
   418  000364  0EFA               	movlw	250
   419  000366  6ED6               	movwf	214,c	;volatile
   420  000368                     
   421                           ;masterSim.c: 162: T0CONbits.TMR0ON = 1;
   422  000368  8ED5               	bsf	213,7,c	;volatile
   423  00036A  0012               	return		;funcret
   424  00036C                     __end_of_setupTimer0:
   425                           	callstack 0
   426                           
   427 ;; *************** function _ISR *****************
   428 ;; Defined at:
   429 ;;		line 97 in file "masterSim.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;  i               2   26[COMRAM] int 
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   443 ;;      Params:         0       0       0       0
   444 ;;      Locals:         2       0       0       0
   445 ;;      Temps:          4       0       0       0
   446 ;;      Totals:         6       0       0       0
   447 ;;Total ram usage:        6 bytes
   448 ;; Hardware stack levels used: 1
   449 ;; Hardware stack levels required when called: 3
   450 ;; This function calls:
   451 ;;		_itoa
   452 ;;		_tx_char
   453 ;; This function is called by:
   454 ;;		Interrupt level 2
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           	psect	intcode
   459  000008                     __pintcode:
   460                           	callstack 0
   461  000008                     _ISR:
   462                           	callstack 26
   463                           
   464                           ;incstack = 0
   465  000008  8237               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   466  00000A  CFD9 F019          	movff	fsr2l,??_ISR+2
   467  00000E  CFDA F01A          	movff	fsr2h,??_ISR+3
   468  000012                     
   469                           ;masterSim.c: 98: if(INTCONbits.TMR0IF == 1) {
   470  000012  A4F2               	btfss	242,2,c	;volatile
   471  000014  EF0E  F000         	goto	i2u28_41
   472  000018  EF10  F000         	goto	i2u28_40
   473  00001C                     i2u28_41:
   474  00001C  EF9F  F000         	goto	i2l1142
   475  000020                     i2u28_40:
   476  000020                     
   477                           ;masterSim.c: 99: count++;
   478  000020  4A1F               	infsnz	_count^0,f,c
   479  000022  2A20               	incf	(_count+1)^0,f,c
   480  000024                     
   481                           ;masterSim.c: 100: if(count == 1) {
   482  000024  041F               	decf	_count^0,w,c
   483  000026  1020               	iorwf	(_count+1)^0,w,c
   484  000028  A4D8               	btfss	status,2,c
   485  00002A  EF19  F000         	goto	i2u29_41
   486  00002E  EF1B  F000         	goto	i2u29_40
   487  000032                     i2u29_41:
   488  000032  EF9F  F000         	goto	i2l1142
   489  000036                     i2u29_40:
   490  000036                     
   491                           ;masterSim.c: 101: vel = PORTB;
   492  000036  CF81 F022          	movff	3969,_vel	;volatile
   493                           
   494                           ;masterSim.c: 102: omega = PORTD;
   495  00003A  CF83 F021          	movff	3971,_omega	;volatile
   496                           
   497                           ;masterSim.c: 103: if(PORTCbits.RC0)
   498  00003E  A082               	btfss	130,0,c	;volatile
   499  000040  EF24  F000         	goto	i2u30_41
   500  000044  EF26  F000         	goto	i2u30_40
   501  000048                     i2u30_41:
   502  000048  EF33  F000         	goto	i2l65
   503  00004C                     i2u30_40:
   504  00004C                     
   505                           ;masterSim.c: 104: omegaInt = -(int)omega;
   506  00004C  5021               	movf	_omega^0,w,c
   507  00004E  6E17               	movwf	??_ISR^0,c
   508  000050  6A18               	clrf	(??_ISR+1)^0,c
   509  000052  1E17               	comf	??_ISR^0,f,c
   510  000054  1E18               	comf	(??_ISR+1)^0,f,c
   511  000056  4A17               	infsnz	??_ISR^0,f,c
   512  000058  2A18               	incf	(??_ISR+1)^0,f,c
   513  00005A  C017  F01D         	movff	??_ISR,_omegaInt
   514  00005E  C018  F01E         	movff	??_ISR+1,_omegaInt+1
   515  000062  EF36  F000         	goto	i2l1114
   516  000066                     i2l65:
   517                           
   518                           ;masterSim.c: 105: else;masterSim.c: 106: omegaInt = (int)omega;
   519  000066  C021  F01D         	movff	_omega,_omegaInt
   520  00006A  6A1E               	clrf	(_omegaInt+1)^0,c
   521  00006C                     i2l1114:
   522                           
   523                           ;masterSim.c: 107: tx_char(0x4F);
   524  00006C  0E4F               	movlw	79
   525  00006E  ECCD  F001         	call	_tx_char
   526  000072                     
   527                           ;masterSim.c: 108: itoa(stringBuffer,omegaInt,10);
   528  000072  0E23               	movlw	low _stringBuffer
   529  000074  6E11               	movwf	itoa@buf^0,c
   530  000076  0E00               	movlw	high _stringBuffer
   531  000078  6E12               	movwf	(itoa@buf+1)^0,c
   532  00007A  C01D  F013         	movff	_omegaInt,itoa@val
   533  00007E  C01E  F014         	movff	_omegaInt+1,itoa@val+1
   534  000082  0E00               	movlw	0
   535  000084  6E16               	movwf	(itoa@base+1)^0,c
   536  000086  0E0A               	movlw	10
   537  000088  6E15               	movwf	itoa@base^0,c
   538  00008A  EC74  F001         	call	_itoa	;wreg free
   539  00008E                     
   540                           ;masterSim.c: 109: int i = 0;
   541  00008E  0E00               	movlw	0
   542  000090  6E1C               	movwf	(ISR@i+1)^0,c
   543  000092  0E00               	movlw	0
   544  000094  6E1B               	movwf	ISR@i^0,c
   545                           
   546                           ;masterSim.c: 110: while (stringBuffer[i]) {
   547  000096  EF58  F000         	goto	i2l1124
   548  00009A                     i2l1120:
   549                           
   550                           ;masterSim.c: 111: tx_char(stringBuffer[i]);
   551  00009A  0E23               	movlw	low _stringBuffer
   552  00009C  241B               	addwf	ISR@i^0,w,c
   553  00009E  6ED9               	movwf	fsr2l,c
   554  0000A0  0E00               	movlw	high _stringBuffer
   555  0000A2  201C               	addwfc	(ISR@i+1)^0,w,c
   556  0000A4  6EDA               	movwf	fsr2h,c
   557  0000A6  50DF               	movf	indf2,w,c
   558  0000A8  ECCD  F001         	call	_tx_char
   559  0000AC                     
   560                           ;masterSim.c: 112: i++;
   561  0000AC  4A1B               	infsnz	ISR@i^0,f,c
   562  0000AE  2A1C               	incf	(ISR@i+1)^0,f,c
   563  0000B0                     i2l1124:
   564  0000B0  0E23               	movlw	low _stringBuffer
   565  0000B2  241B               	addwf	ISR@i^0,w,c
   566  0000B4  6ED9               	movwf	fsr2l,c
   567  0000B6  0E00               	movlw	high _stringBuffer
   568  0000B8  201C               	addwfc	(ISR@i+1)^0,w,c
   569  0000BA  6EDA               	movwf	fsr2h,c
   570  0000BC  50DF               	movf	indf2,w,c
   571  0000BE  A4D8               	btfss	status,2,c
   572  0000C0  EF64  F000         	goto	i2u31_41
   573  0000C4  EF66  F000         	goto	i2u31_40
   574  0000C8                     i2u31_41:
   575  0000C8  EF4D  F000         	goto	i2l1120
   576  0000CC                     i2u31_40:
   577  0000CC                     
   578                           ;masterSim.c: 113: };masterSim.c: 114: tx_char(0x0a);
   579  0000CC  0E0A               	movlw	10
   580  0000CE  ECCD  F001         	call	_tx_char
   581                           
   582                           ;masterSim.c: 116: tx_char(0x56);
   583  0000D2  0E56               	movlw	86
   584  0000D4  ECCD  F001         	call	_tx_char
   585  0000D8                     
   586                           ;masterSim.c: 117: itoa(stringBuffer,vel,10);
   587  0000D8  0E23               	movlw	low _stringBuffer
   588  0000DA  6E11               	movwf	itoa@buf^0,c
   589  0000DC  0E00               	movlw	high _stringBuffer
   590  0000DE  6E12               	movwf	(itoa@buf+1)^0,c
   591  0000E0  C022  F013         	movff	_vel,itoa@val
   592  0000E4  6A14               	clrf	(itoa@val+1)^0,c
   593  0000E6  0E00               	movlw	0
   594  0000E8  6E16               	movwf	(itoa@base+1)^0,c
   595  0000EA  0E0A               	movlw	10
   596  0000EC  6E15               	movwf	itoa@base^0,c
   597  0000EE  EC74  F001         	call	_itoa	;wreg free
   598  0000F2                     
   599                           ;masterSim.c: 118: int i = 0;
   600  0000F2  0E00               	movlw	0
   601  0000F4  6E1C               	movwf	(ISR@i+1)^0,c
   602  0000F6  0E00               	movlw	0
   603  0000F8  6E1B               	movwf	ISR@i^0,c
   604                           
   605                           ;masterSim.c: 119: while (stringBuffer[i]) {
   606  0000FA  EF8A  F000         	goto	i2l1136
   607  0000FE                     i2l1132:
   608                           
   609                           ;masterSim.c: 120: tx_char(stringBuffer[i]);
   610  0000FE  0E23               	movlw	low _stringBuffer
   611  000100  241B               	addwf	ISR@i^0,w,c
   612  000102  6ED9               	movwf	fsr2l,c
   613  000104  0E00               	movlw	high _stringBuffer
   614  000106  201C               	addwfc	(ISR@i+1)^0,w,c
   615  000108  6EDA               	movwf	fsr2h,c
   616  00010A  50DF               	movf	indf2,w,c
   617  00010C  ECCD  F001         	call	_tx_char
   618  000110                     
   619                           ;masterSim.c: 121: i++;
   620  000110  4A1B               	infsnz	ISR@i^0,f,c
   621  000112  2A1C               	incf	(ISR@i+1)^0,f,c
   622  000114                     i2l1136:
   623  000114  0E23               	movlw	low _stringBuffer
   624  000116  241B               	addwf	ISR@i^0,w,c
   625  000118  6ED9               	movwf	fsr2l,c
   626  00011A  0E00               	movlw	high _stringBuffer
   627  00011C  201C               	addwfc	(ISR@i+1)^0,w,c
   628  00011E  6EDA               	movwf	fsr2h,c
   629  000120  50DF               	movf	indf2,w,c
   630  000122  A4D8               	btfss	status,2,c
   631  000124  EF96  F000         	goto	i2u32_41
   632  000128  EF98  F000         	goto	i2u32_40
   633  00012C                     i2u32_41:
   634  00012C  EF7F  F000         	goto	i2l1132
   635  000130                     i2u32_40:
   636  000130                     
   637                           ;masterSim.c: 122: };masterSim.c: 123: tx_char(0x0a);
   638  000130  0E0A               	movlw	10
   639  000132  ECCD  F001         	call	_tx_char
   640  000136                     
   641                           ;masterSim.c: 125: count = 0;
   642  000136  0E00               	movlw	0
   643  000138  6E20               	movwf	(_count+1)^0,c
   644  00013A  0E00               	movlw	0
   645  00013C  6E1F               	movwf	_count^0,c
   646  00013E                     i2l1142:
   647  00013E  C01A  FFDA         	movff	??_ISR+3,fsr2h
   648  000142  C019  FFD9         	movff	??_ISR+2,fsr2l
   649  000146  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   650  000148  0011               	retfie		f
   651  00014A                     __end_of_ISR:
   652                           	callstack 0
   653                           
   654 ;; *************** function _tx_char *****************
   655 ;; Defined at:
   656 ;;		line 183 in file "masterSim.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;  a               1    wreg     unsigned char 
   659 ;; Auto vars:     Size  Location     Type
   660 ;;  a               1    0[COMRAM] unsigned char 
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   670 ;;      Params:         0       0       0       0
   671 ;;      Locals:         1       0       0       0
   672 ;;      Temps:          0       0       0       0
   673 ;;      Totals:         1       0       0       0
   674 ;;Total ram usage:        1 bytes
   675 ;; Hardware stack levels used: 1
   676 ;; This function calls:
   677 ;;		Nothing
   678 ;; This function is called by:
   679 ;;		_ISR
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           	psect	text4
   684  00039A                     __ptext4:
   685                           	callstack 0
   686  00039A                     _tx_char:
   687                           	callstack 28
   688                           
   689                           ;incstack = 0
   690                           ;tx_char@a stored from wreg
   691  00039A  6E01               	movwf	tx_char@a^0,c
   692  00039C                     
   693                           ;masterSim.c: 184: TXREG=a;
   694  00039C  C001  FFAD         	movff	tx_char@a,4013	;volatile
   695  0003A0                     i2l97:
   696  0003A0  A2AC               	btfss	4012,1,c	;volatile
   697  0003A2  EFD5  F001         	goto	i2u10_41
   698  0003A6  EFD7  F001         	goto	i2u10_40
   699  0003AA                     i2u10_41:
   700  0003AA  EFD0  F001         	goto	i2l97
   701  0003AE                     i2u10_40:
   702  0003AE  0012               	return		;funcret
   703  0003B0                     __end_of_tx_char:
   704                           	callstack 0
   705                           
   706 ;; *************** function _itoa *****************
   707 ;; Defined at:
   708 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;  buf             2   16[COMRAM] PTR unsigned char 
   711 ;;		 -> stringBuffer(20), 
   712 ;;  val             2   18[COMRAM] int 
   713 ;;  base            2   20[COMRAM] int 
   714 ;; Auto vars:     Size  Location     Type
   715 ;;  cp              2    0        PTR unsigned char 
   716 ;;		 -> stringBuffer(20), 
   717 ;; Return value:  Size  Location     Type
   718 ;;                  2   16[COMRAM] PTR unsigned char 
   719 ;; Registers used:
   720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   726 ;;      Params:         6       0       0       0
   727 ;;      Locals:         0       0       0       0
   728 ;;      Temps:          0       0       0       0
   729 ;;      Totals:         6       0       0       0
   730 ;;Total ram usage:        6 bytes
   731 ;; Hardware stack levels used: 1
   732 ;; Hardware stack levels required when called: 2
   733 ;; This function calls:
   734 ;;		_utoa
   735 ;; This function is called by:
   736 ;;		_ISR
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text5
   741  0002E8                     __ptext5:
   742                           	callstack 0
   743  0002E8                     _itoa:
   744                           	callstack 26
   745  0002E8  BE14               	btfsc	(itoa@val+1)^0,7,c
   746  0002EA  EF7B  F001         	goto	i2u27_40
   747  0002EE  EF79  F001         	goto	i2u27_41
   748  0002F2                     i2u27_41:
   749  0002F2  EF87  F001         	goto	i2l1100
   750  0002F6                     i2u27_40:
   751  0002F6  C011  FFD9         	movff	itoa@buf,fsr2l
   752  0002FA  C012  FFDA         	movff	itoa@buf+1,fsr2h
   753  0002FE  0E2D               	movlw	45
   754  000300  6EDF               	movwf	indf2,c
   755  000302  4A11               	infsnz	itoa@buf^0,f,c
   756  000304  2A12               	incf	(itoa@buf+1)^0,f,c
   757  000306  6C13               	negf	itoa@val^0,c
   758  000308  1E14               	comf	(itoa@val+1)^0,f,c
   759  00030A  B0D8               	btfsc	status,0,c
   760  00030C  2A14               	incf	(itoa@val+1)^0,f,c
   761  00030E                     i2l1100:
   762  00030E  C011  F008         	movff	itoa@buf,utoa@buf
   763  000312  C012  F009         	movff	itoa@buf+1,utoa@buf+1
   764  000316  C013  F00A         	movff	itoa@val,utoa@val
   765  00031A  C014  F00B         	movff	itoa@val+1,utoa@val+1
   766  00031E  C015  F00C         	movff	itoa@base,utoa@base
   767  000322  C016  F00D         	movff	itoa@base+1,utoa@base+1
   768  000326  ECA7  F000         	call	_utoa	;wreg free
   769  00032A  0012               	return		;funcret
   770  00032C                     __end_of_itoa:
   771                           	callstack 0
   772                           
   773 ;; *************** function _utoa *****************
   774 ;; Defined at:
   775 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  buf             2    7[COMRAM] PTR unsigned char 
   778 ;;		 -> stringBuffer(20), 
   779 ;;  val             2    9[COMRAM] unsigned int 
   780 ;;  base            2   11[COMRAM] int 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  v               2   13[COMRAM] unsigned int 
   783 ;;  c               1   15[COMRAM] unsigned char 
   784 ;; Return value:  Size  Location     Type
   785 ;;                  2    7[COMRAM] PTR unsigned char 
   786 ;; Registers used:
   787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   793 ;;      Params:         6       0       0       0
   794 ;;      Locals:         3       0       0       0
   795 ;;      Temps:          0       0       0       0
   796 ;;      Totals:         9       0       0       0
   797 ;;Total ram usage:        9 bytes
   798 ;; Hardware stack levels used: 1
   799 ;; Hardware stack levels required when called: 1
   800 ;; This function calls:
   801 ;;		___lwdiv
   802 ;;		___lwmod
   803 ;; This function is called by:
   804 ;;		_itoa
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text6
   809  00014E                     __ptext6:
   810                           	callstack 0
   811  00014E                     _utoa:
   812                           	callstack 26
   813  00014E  C00A  F00E         	movff	utoa@val,utoa@v
   814  000152  C00B  F00F         	movff	utoa@val+1,utoa@v+1
   815  000156                     i2l1064:
   816  000156  C00E  F001         	movff	utoa@v,___lwdiv@dividend
   817  00015A  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
   818  00015E  C00C  F003         	movff	utoa@base,___lwdiv@divisor
   819  000162  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
   820  000166  EC08  F001         	call	___lwdiv	;wreg free
   821  00016A  C001  F00E         	movff	?___lwdiv,utoa@v
   822  00016E  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
   823  000172  4A08               	infsnz	utoa@buf^0,f,c
   824  000174  2A09               	incf	(utoa@buf+1)^0,f,c
   825  000176  500E               	movf	utoa@v^0,w,c
   826  000178  100F               	iorwf	(utoa@v+1)^0,w,c
   827  00017A  A4D8               	btfss	status,2,c
   828  00017C  EFC2  F000         	goto	i2u24_41
   829  000180  EFC4  F000         	goto	i2u24_40
   830  000184                     i2u24_41:
   831  000184  EFAB  F000         	goto	i2l1064
   832  000188                     i2u24_40:
   833  000188  C008  FFD9         	movff	utoa@buf,fsr2l
   834  00018C  C009  FFDA         	movff	utoa@buf+1,fsr2h
   835  000190  0E00               	movlw	0
   836  000192  6EDF               	movwf	indf2,c
   837  000194  0608               	decf	utoa@buf^0,f,c
   838  000196  A0D8               	btfss	status,0,c
   839  000198  0609               	decf	(utoa@buf+1)^0,f,c
   840  00019A                     i2l1074:
   841  00019A  C00A  F001         	movff	utoa@val,___lwmod@dividend
   842  00019E  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
   843  0001A2  C00C  F003         	movff	utoa@base,___lwmod@divisor
   844  0001A6  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
   845  0001AA  EC42  F001         	call	___lwmod	;wreg free
   846  0001AE  5001               	movf	?___lwmod^0,w,c
   847  0001B0  6E10               	movwf	utoa@c^0,c
   848  0001B2  C00A  F001         	movff	utoa@val,___lwdiv@dividend
   849  0001B6  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
   850  0001BA  C00C  F003         	movff	utoa@base,___lwdiv@divisor
   851  0001BE  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
   852  0001C2  EC08  F001         	call	___lwdiv	;wreg free
   853  0001C6  C001  F00A         	movff	?___lwdiv,utoa@val
   854  0001CA  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
   855  0001CE  0E09               	movlw	9
   856  0001D0  6410               	cpfsgt	utoa@c^0,c
   857  0001D2  EFED  F000         	goto	i2u25_41
   858  0001D6  EFEF  F000         	goto	i2u25_40
   859  0001DA                     i2u25_41:
   860  0001DA  EFF1  F000         	goto	i2l774
   861  0001DE                     i2u25_40:
   862  0001DE  0E07               	movlw	7
   863  0001E0  2610               	addwf	utoa@c^0,f,c
   864  0001E2                     i2l774:
   865  0001E2  0E30               	movlw	48
   866  0001E4  2610               	addwf	utoa@c^0,f,c
   867  0001E6  C008  FFD9         	movff	utoa@buf,fsr2l
   868  0001EA  C009  FFDA         	movff	utoa@buf+1,fsr2h
   869  0001EE  C010  FFDF         	movff	utoa@c,indf2
   870  0001F2  0608               	decf	utoa@buf^0,f,c
   871  0001F4  A0D8               	btfss	status,0,c
   872  0001F6  0609               	decf	(utoa@buf+1)^0,f,c
   873  0001F8  500A               	movf	utoa@val^0,w,c
   874  0001FA  100B               	iorwf	(utoa@val+1)^0,w,c
   875  0001FC  A4D8               	btfss	status,2,c
   876  0001FE  EF03  F001         	goto	i2u26_41
   877  000202  EF05  F001         	goto	i2u26_40
   878  000206                     i2u26_41:
   879  000206  EFCD  F000         	goto	i2l1074
   880  00020A                     i2u26_40:
   881  00020A                     
   882                           ;	Return value of _utoa is never used
   883  00020A  4A08               	infsnz	utoa@buf^0,f,c
   884  00020C  2A09               	incf	(utoa@buf+1)^0,f,c
   885  00020E  0012               	return		;funcret
   886  000210                     __end_of_utoa:
   887                           	callstack 0
   888                           
   889 ;; *************** function ___lwmod *****************
   890 ;; Defined at:
   891 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  dividend        2    0[COMRAM] unsigned int 
   894 ;;  divisor         2    2[COMRAM] unsigned int 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  counter         1    4[COMRAM] unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  2    0[COMRAM] unsigned int 
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   906 ;;      Params:         4       0       0       0
   907 ;;      Locals:         1       0       0       0
   908 ;;      Temps:          0       0       0       0
   909 ;;      Totals:         5       0       0       0
   910 ;;Total ram usage:        5 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_utoa
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text7
   920  000284                     __ptext7:
   921                           	callstack 0
   922  000284                     ___lwmod:
   923                           	callstack 26
   924  000284  5003               	movf	___lwmod@divisor^0,w,c
   925  000286  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
   926  000288  B4D8               	btfsc	status,2,c
   927  00028A  EF49  F001         	goto	i2u21_41
   928  00028E  EF4B  F001         	goto	i2u21_40
   929  000292                     i2u21_41:
   930  000292  EF6F  F001         	goto	i2l592
   931  000296                     i2u21_40:
   932  000296  0E01               	movlw	1
   933  000298  6E05               	movwf	___lwmod@counter^0,c
   934  00029A  EF53  F001         	goto	i2l1052
   935  00029E                     i2l1050:
   936  00029E  90D8               	bcf	status,0,c
   937  0002A0  3603               	rlcf	___lwmod@divisor^0,f,c
   938  0002A2  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
   939  0002A4  2A05               	incf	___lwmod@counter^0,f,c
   940  0002A6                     i2l1052:
   941  0002A6  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
   942  0002A8  EF58  F001         	goto	i2u22_41
   943  0002AC  EF5A  F001         	goto	i2u22_40
   944  0002B0                     i2u22_41:
   945  0002B0  EF4F  F001         	goto	i2l1050
   946  0002B4                     i2u22_40:
   947  0002B4                     i2l1054:
   948  0002B4  5003               	movf	___lwmod@divisor^0,w,c
   949  0002B6  5C01               	subwf	___lwmod@dividend^0,w,c
   950  0002B8  5004               	movf	(___lwmod@divisor+1)^0,w,c
   951  0002BA  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
   952  0002BC  A0D8               	btfss	status,0,c
   953  0002BE  EF63  F001         	goto	i2u23_41
   954  0002C2  EF65  F001         	goto	i2u23_40
   955  0002C6                     i2u23_41:
   956  0002C6  EF69  F001         	goto	i2l1058
   957  0002CA                     i2u23_40:
   958  0002CA  5003               	movf	___lwmod@divisor^0,w,c
   959  0002CC  5E01               	subwf	___lwmod@dividend^0,f,c
   960  0002CE  5004               	movf	(___lwmod@divisor+1)^0,w,c
   961  0002D0  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
   962  0002D2                     i2l1058:
   963  0002D2  90D8               	bcf	status,0,c
   964  0002D4  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
   965  0002D6  3203               	rrcf	___lwmod@divisor^0,f,c
   966  0002D8  2E05               	decfsz	___lwmod@counter^0,f,c
   967  0002DA  EF5A  F001         	goto	i2l1054
   968  0002DE                     i2l592:
   969  0002DE  C001  F001         	movff	___lwmod@dividend,?___lwmod
   970  0002E2  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
   971  0002E6  0012               	return		;funcret
   972  0002E8                     __end_of___lwmod:
   973                           	callstack 0
   974                           
   975 ;; *************** function ___lwdiv *****************
   976 ;; Defined at:
   977 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  dividend        2    0[COMRAM] unsigned int 
   980 ;;  divisor         2    2[COMRAM] unsigned int 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;  quotient        2    4[COMRAM] unsigned int 
   983 ;;  counter         1    6[COMRAM] unsigned char 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  2    0[COMRAM] unsigned int 
   986 ;; Registers used:
   987 ;;		wreg, status,2, status,0
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   993 ;;      Params:         4       0       0       0
   994 ;;      Locals:         3       0       0       0
   995 ;;      Temps:          0       0       0       0
   996 ;;      Totals:         7       0       0       0
   997 ;;Total ram usage:        7 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; This function calls:
  1000 ;;		Nothing
  1001 ;; This function is called by:
  1002 ;;		_utoa
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text8
  1007  000210                     __ptext8:
  1008                           	callstack 0
  1009  000210                     ___lwdiv:
  1010                           	callstack 26
  1011  000210  0E00               	movlw	0
  1012  000212  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1013  000214  0E00               	movlw	0
  1014  000216  6E05               	movwf	___lwdiv@quotient^0,c
  1015  000218  5003               	movf	___lwdiv@divisor^0,w,c
  1016  00021A  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1017  00021C  B4D8               	btfsc	status,2,c
  1018  00021E  EF13  F001         	goto	i2u18_41
  1019  000222  EF15  F001         	goto	i2u18_40
  1020  000226                     i2u18_41:
  1021  000226  EF3D  F001         	goto	i2l582
  1022  00022A                     i2u18_40:
  1023  00022A  0E01               	movlw	1
  1024  00022C  6E07               	movwf	___lwdiv@counter^0,c
  1025  00022E  EF1D  F001         	goto	i2l1032
  1026  000232                     i2l1030:
  1027  000232  90D8               	bcf	status,0,c
  1028  000234  3603               	rlcf	___lwdiv@divisor^0,f,c
  1029  000236  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1030  000238  2A07               	incf	___lwdiv@counter^0,f,c
  1031  00023A                     i2l1032:
  1032  00023A  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1033  00023C  EF22  F001         	goto	i2u19_41
  1034  000240  EF24  F001         	goto	i2u19_40
  1035  000244                     i2u19_41:
  1036  000244  EF19  F001         	goto	i2l1030
  1037  000248                     i2u19_40:
  1038  000248                     i2l1034:
  1039  000248  90D8               	bcf	status,0,c
  1040  00024A  3605               	rlcf	___lwdiv@quotient^0,f,c
  1041  00024C  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1042  00024E  5003               	movf	___lwdiv@divisor^0,w,c
  1043  000250  5C01               	subwf	___lwdiv@dividend^0,w,c
  1044  000252  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1045  000254  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1046  000256  A0D8               	btfss	status,0,c
  1047  000258  EF30  F001         	goto	i2u20_41
  1048  00025C  EF32  F001         	goto	i2u20_40
  1049  000260                     i2u20_41:
  1050  000260  EF37  F001         	goto	i2l1042
  1051  000264                     i2u20_40:
  1052  000264  5003               	movf	___lwdiv@divisor^0,w,c
  1053  000266  5E01               	subwf	___lwdiv@dividend^0,f,c
  1054  000268  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1055  00026A  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1056  00026C  8005               	bsf	___lwdiv@quotient^0,0,c
  1057  00026E                     i2l1042:
  1058  00026E  90D8               	bcf	status,0,c
  1059  000270  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1060  000272  3203               	rrcf	___lwdiv@divisor^0,f,c
  1061  000274  2E07               	decfsz	___lwdiv@counter^0,f,c
  1062  000276  EF24  F001         	goto	i2l1034
  1063  00027A                     i2l582:
  1064  00027A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1065  00027E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1066  000282  0012               	return		;funcret
  1067  000284                     __end_of___lwdiv:
  1068                           	callstack 0
  1069  0000                     
  1070                           	psect	rparam
  1071  0000                     
  1072                           	psect	temp
  1073  000037                     btemp:
  1074                           	callstack 0
  1075  000037                     	ds	1
  1076  0000                     int$flags	set	btemp
  1077  0000                     wtemp8	set	btemp+1
  1078  0000                     ttemp5	set	btemp+1
  1079  0000                     ttemp6	set	btemp+4
  1080  0000                     ttemp7	set	btemp+8
  1081                           
  1082                           	psect	idloc
  1083                           
  1084                           ;Config register IDLOC0 @ 0x200000
  1085                           ;	unspecified, using default values
  1086  200000                     	org	2097152
  1087  200000  FF                 	db	255
  1088                           
  1089                           ;Config register IDLOC1 @ 0x200001
  1090                           ;	unspecified, using default values
  1091  200001                     	org	2097153
  1092  200001  FF                 	db	255
  1093                           
  1094                           ;Config register IDLOC2 @ 0x200002
  1095                           ;	unspecified, using default values
  1096  200002                     	org	2097154
  1097  200002  FF                 	db	255
  1098                           
  1099                           ;Config register IDLOC3 @ 0x200003
  1100                           ;	unspecified, using default values
  1101  200003                     	org	2097155
  1102  200003  FF                 	db	255
  1103                           
  1104                           ;Config register IDLOC4 @ 0x200004
  1105                           ;	unspecified, using default values
  1106  200004                     	org	2097156
  1107  200004  FF                 	db	255
  1108                           
  1109                           ;Config register IDLOC5 @ 0x200005
  1110                           ;	unspecified, using default values
  1111  200005                     	org	2097157
  1112  200005  FF                 	db	255
  1113                           
  1114                           ;Config register IDLOC6 @ 0x200006
  1115                           ;	unspecified, using default values
  1116  200006                     	org	2097158
  1117  200006  FF                 	db	255
  1118                           
  1119                           ;Config register IDLOC7 @ 0x200007
  1120                           ;	unspecified, using default values
  1121  200007                     	org	2097159
  1122  200007  FF                 	db	255
  1123                           
  1124                           	psect	config
  1125                           
  1126                           ; Padding undefined space
  1127  300000                     	org	3145728
  1128  300000  FF                 	db	255
  1129                           
  1130                           ;Config register CONFIG1H @ 0x300001
  1131                           ;	Oscillator Selection bits
  1132                           ;	OSC = RC, 11XX External RC oscillator, CLKO function on RA6
  1133                           ;	Fail-Safe Clock Monitor Enable bit
  1134                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1135                           ;	Internal External Oscillator Switchover bit
  1136                           ;	IESO = ON, Internal External Switchover mode enabled
  1137  300001                     	org	3145729
  1138  300001  CC                 	db	204
  1139                           
  1140                           ;Config register CONFIG2L @ 0x300002
  1141                           ;	Power-up Timer Enable bit
  1142                           ;	PWRTEN = OFF, PWRT disabled
  1143                           ;	Brown-out Reset Enable bits
  1144                           ;	BOREN = ON, Brown-out Reset enabled
  1145                           ;	Brown Out Reset Voltage bits
  1146                           ;	BORV = 0x3, unprogrammed default
  1147  300002                     	org	3145730
  1148  300002  0F                 	db	15
  1149                           
  1150                           ;Config register CONFIG2H @ 0x300003
  1151                           ;	Watchdog Timer Enable bit
  1152                           ;	WDTEN = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1153                           ;	Watchdog Timer Postscale Select bits
  1154                           ;	WDPS = 32768, 1:32768
  1155                           ;	Watchdog Timer Window Enable bit
  1156                           ;	WINEN = OFF, WDT window disabled
  1157  300003                     	org	3145731
  1158  300003  3E                 	db	62
  1159                           
  1160                           ;Config register CONFIG3L @ 0x300004
  1161                           ;	PWM output pins Reset state control
  1162                           ;	PWMPIN = OFF, PWM outputs disabled upon Reset (default)
  1163                           ;	Low-Side Transistors Polarity
  1164                           ;	LPOL = HIGH, PWM0, 2, 4 and 6 are active-high
  1165                           ;	High-Side Transistors Polarity
  1166                           ;	HPOL = HIGH, PWM1, 3, 5 and 7 are active-high
  1167                           ;	Timer1 Oscillator MUX
  1168                           ;	T1OSCMX = ON, Low-power Timer1 operation when microcontroller is in Sleep mode
  1169  300004                     	org	3145732
  1170  300004  3C                 	db	60
  1171                           
  1172                           ;Config register CONFIG3H @ 0x300005
  1173                           ;	FLTA MUX bit
  1174                           ;	FLTAMX = RC1, FLTA input is multiplexed with RC1
  1175                           ;	SSP I/O MUX bit
  1176                           ;	SSPMX = RD1, SCK/SCL clocks and SDA/SDI data are multiplexed with RD3 and RD2, respect
      +                          ively. SDO output is multiplexed with RD1.
  1177                           ;	PWM4 MUX bit
  1178                           ;	PWM4MX = RB5, PWM4 output is multiplexed with RB5
  1179                           ;	TMR0/T5CKI External clock MUX bit
  1180                           ;	EXCLKMX = RC3, TMR0/T5CKI external clock input is multiplexed with RC3
  1181                           ;	MCLR Pin Enable bit
  1182                           ;	MCLRE = ON, Enabled
  1183  300005                     	org	3145733
  1184  300005  99                 	db	153
  1185                           
  1186                           ;Config register CONFIG4L @ 0x300006
  1187                           ;	Stack Full/Underflow Reset Enable bit
  1188                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1189                           ;	Low-Voltage ICSP Enable bit
  1190                           ;	LVP = ON, Low-voltage ICSP enabled
  1191                           ;	Background Debugger Enable bit
  1192                           ;	DEBUG = 0x1, unprogrammed default
  1193  300006                     	org	3145734
  1194  300006  85                 	db	133
  1195                           
  1196                           ; Padding undefined space
  1197  300007                     	org	3145735
  1198  300007  FF                 	db	255
  1199                           
  1200                           ;Config register CONFIG5L @ 0x300008
  1201                           ;	Code Protection bit
  1202                           ;	CP0 = OFF, Block 0 (000200-000FFFh) not code-protected
  1203                           ;	Code Protection bit
  1204                           ;	CP1 = OFF, Block 1 (001000-001FFF) not code-protected
  1205                           ;	Code Protection bit
  1206                           ;	CP2 = OFF, Block 2 (002000-002FFFh) not code-protected
  1207                           ;	Code Protection bit
  1208                           ;	CP3 = OFF, Block 3 (003000-003FFFh) not code-protected
  1209  300008                     	org	3145736
  1210  300008  0F                 	db	15
  1211                           
  1212                           ;Config register CONFIG5H @ 0x300009
  1213                           ;	Boot Block Code Protection bit
  1214                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code-protected
  1215                           ;	Data EEPROM Code Protection bit
  1216                           ;	CPD = OFF, Data EEPROM not code-protected
  1217  300009                     	org	3145737
  1218  300009  C0                 	db	192
  1219                           
  1220                           ;Config register CONFIG6L @ 0x30000A
  1221                           ;	Write Protection bit
  1222                           ;	WRT0 = OFF, Block 0 (000200-000FFFh) not write-protected
  1223                           ;	Write Protection bit
  1224                           ;	WRT1 = OFF, Block 1 (001000-001FFF) not write-protected
  1225                           ;	Write Protection bit
  1226                           ;	WRT2 = OFF, Block 2 (002000-002FFFh) not write-protected
  1227                           ;	Write Protection bit
  1228                           ;	WRT3 = OFF, Block 3 (003000-003FFFh) not write-protected
  1229  30000A                     	org	3145738
  1230  30000A  0F                 	db	15
  1231                           
  1232                           ;Config register CONFIG6H @ 0x30000B
  1233                           ;	Configuration Register Write Protection bit
  1234                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1235                           ;	Boot Block Write Protection bit
  1236                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
  1237                           ;	Data EEPROM Write Protection bit
  1238                           ;	WRTD = OFF, Data EEPROM not write-protected
  1239  30000B                     	org	3145739
  1240  30000B  E0                 	db	224
  1241                           
  1242                           ;Config register CONFIG7L @ 0x30000C
  1243                           ;	Table Read Protection bit
  1244                           ;	EBTR0 = OFF, Block 0 (000200-000FFFh) not protected from table reads executed in other
      +                           blocks
  1245                           ;	Table Read Protection bit
  1246                           ;	EBTR1 = OFF, Block 1 (001000-001FFF) not protected from table reads executed in other 
      +                          blocks
  1247                           ;	Table Read Protection bit
  1248                           ;	EBTR2 = OFF, Block 2 (002000-002FFFh) not protected from table reads executed in other
      +                           blocks
  1249                           ;	Table Read Protection bit
  1250                           ;	EBTR3 = OFF, Block 3 (003000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1251  30000C                     	org	3145740
  1252  30000C  0F                 	db	15
  1253                           
  1254                           ;Config register CONFIG7H @ 0x30000D
  1255                           ;	Boot Block Table Read Protection bit
  1256                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
  1257  30000D                     	org	3145741
  1258  30000D  40                 	db	64
  1259                           tosu	equ	0xFFF
  1260                           tosh	equ	0xFFE
  1261                           tosl	equ	0xFFD
  1262                           stkptr	equ	0xFFC
  1263                           pclatu	equ	0xFFB
  1264                           pclath	equ	0xFFA
  1265                           pcl	equ	0xFF9
  1266                           tblptru	equ	0xFF8
  1267                           tblptrh	equ	0xFF7
  1268                           tblptrl	equ	0xFF6
  1269                           tablat	equ	0xFF5
  1270                           prodh	equ	0xFF4
  1271                           prodl	equ	0xFF3
  1272                           indf0	equ	0xFEF
  1273                           postinc0	equ	0xFEE
  1274                           postdec0	equ	0xFED
  1275                           preinc0	equ	0xFEC
  1276                           plusw0	equ	0xFEB
  1277                           fsr0h	equ	0xFEA
  1278                           fsr0l	equ	0xFE9
  1279                           wreg	equ	0xFE8
  1280                           indf1	equ	0xFE7
  1281                           postinc1	equ	0xFE6
  1282                           postdec1	equ	0xFE5
  1283                           preinc1	equ	0xFE4
  1284                           plusw1	equ	0xFE3
  1285                           fsr1h	equ	0xFE2
  1286                           fsr1l	equ	0xFE1
  1287                           bsr	equ	0xFE0
  1288                           indf2	equ	0xFDF
  1289                           postinc2	equ	0xFDE
  1290                           postdec2	equ	0xFDD
  1291                           preinc2	equ	0xFDC
  1292                           plusw2	equ	0xFDB
  1293                           fsr2h	equ	0xFDA
  1294                           fsr2l	equ	0xFD9
  1295                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      54
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_itoa
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _setupTimer0
                          _setupUART
 ---------------------------------------------------------------------------------
 (1) _setupUART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  6     6      0    2033
                                             22 COMRAM     6     6      0
                               _itoa
                            _tx_char
 ---------------------------------------------------------------------------------
 (3) _tx_char                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1926
                                             16 COMRAM     6     0      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1307
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setupTimer0
   _setupUART

 _ISR (ROOT)
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _tx_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      36       1       57.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36       3        0.0%
DATA                 0      0      36      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Dec 02 13:16:54 2021

                     l80 034A                       l85 036A                       l79 034A  
                     l88 0382                      l950 0360                      l952 0368  
                    l944 036C                      l946 037E                      l948 0352  
                    l994 032C                      l996 032E                      l998 0332  
                    _ISR 0008                      _vel 0022                      wreg 000FE8  
                   ?_ISR 0001                     ISR@i 001B                     l1000 0334  
                   l1010 033E                     l1002 0336                     l1012 0340  
                   l1004 0338                     l1014 0342                     l1006 033A  
                   l1016 0346                     l1008 033C                     _ADON 007E10  
                   _RCIF 007CF5                     i2l65 0066                     i2l74 013E  
                   i2l97 03A0                     _TMR0 000FD6                     _TRMT 007D61  
                   _main 032C                     _itoa 02E8                     fsr2h 000FDA  
                   indf2 000FDF                     fsr2l 000FD9                     btemp 0037  
                   _utoa 014E                     start 014A             ___param_bank 000000  
                  ??_ISR 0017                    ?_main 0001                    ?_itoa 0011  
                  ?_utoa 0008          __end_of___lwdiv 0284                    i2l100 03AE  
        __end_of___lwmod 02E8                    i2l582 027A                    i2l592 02DE  
                  i2l930 039C                    i2l589 0282                    i2l774 01E2  
                  i2l599 02E6                    i2l776 020E                    i2l768 032A  
                  _RCREG 000FAE                    _SPBRG 000FAF                    _PORTB 000F81  
                  _PORTD 000F83                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISD 000F95                    _TXREG 000FAD                    _count 001F  
                  _omega 0021                    ttemp5 0038                    ttemp6 003B  
                  ttemp7 003F                    utoa@c 0010          __end_of_tx_char 03B0  
                  utoa@v 000E                    status 000FD8                    wtemp8 0038  
           _stringBuffer 0023          __initialization 0384             __end_of_main 0352  
           __end_of_itoa 032C             __end_of_utoa 0210                   ??_main 001D  
                 ??_itoa 0017                   ??_utoa 000E            __activetblptr 000000  
                 i2l1100 030E                   i2l1030 0232                   i2l1110 0036  
                 i2l1040 026C                   i2l1032 023A                   i2l1024 0210  
                 i2l1120 009A                   i2l1112 004C                   i2l1104 0012  
                 i2l1042 026E                   i2l1034 0248                   i2l1026 0218  
                 i2l1050 029E                   i2l1130 00F2                   i2l1122 00AC  
                 i2l1114 006C                   i2l1106 0020                   i2l1044 0274  
                 i2l1036 024E                   i2l1028 022A                   i2l1060 02D8  
                 i2l1052 02A6                   i2l1140 0136                   i2l1132 00FE  
                 i2l1124 00B0                   i2l1116 0072                   i2l1108 0024  
                 i2l1038 0264                   i2l1054 02B4                   i2l1046 0284  
                 i2l1070 0188                   i2l1062 014E                   i2l1134 0110  
                 i2l1126 00CC                   i2l1118 008E                   i2l1142 013E  
                 i2l1056 02CA                   i2l1048 0296                   i2l1080 01DE  
                 i2l1072 0194                   i2l1064 0156                   i2l1136 0114  
                 i2l1128 00D8                   i2l1058 02D2                   i2l1082 01E6  
                 i2l1074 019A                   i2l1066 0172                   i2l1138 0130  
                 i2l1084 01F2                   i2l1076 01B2                   i2l1068 0176  
                 i2l1092 02E8                   i2l1086 01F8                   i2l1078 01CE  
                 i2l1094 02F6                   i2l1088 020A                   i2l1096 0302  
                 i2l1098 0306                ??___lwdiv 0005                ??___lwmod 0005  
                 clear_0 038A                   isa$std 000001                ??_tx_char 0001  
           ?_setupTimer0 0001               __accesstop 0060  __end_of__initialization 0390  
          ___rparam_used 000001           __pcstackCOMRAM 0001       __size_of_setupUART 0018  
                i2u10_40 03AE                  i2u10_41 03AA                  i2u20_40 0264  
                i2u20_41 0260                  i2u21_40 0296                  i2u21_41 0292  
                i2u22_40 02B4                  i2u30_40 004C                  i2u22_41 02B0  
                i2u30_41 0048                  i2u23_40 02CA                  i2u31_40 00CC  
                i2u23_41 02C6                  i2u31_41 00C8                  i2u24_40 0188  
                i2u32_40 0130                  i2u24_41 0184                  i2u32_41 012C  
                i2u25_40 01DE                  i2u25_41 01DA                  i2u18_40 022A  
                i2u26_40 020A                  i2u18_41 0226                  i2u26_41 0206  
                i2u19_40 0248                  i2u27_40 02F6                  i2u19_41 0244  
                i2u27_41 02F2                  i2u28_40 0020                  i2u28_41 001C  
                i2u29_40 0036                  i2u29_41 0032                  __Hparam 0000  
                __Lparam 0000                  ___lwdiv 0210                  ___lwmod 0284  
                __pcinit 0384                  __ramtop 0300                  __ptext0 032C  
                __ptext1 036C                  __ptext2 0352                  __ptext4 039A  
                __ptext5 02E8                  __ptext6 014E                  __ptext7 0284  
                __ptext8 0210                _T0CONbits 000FD5             __size_of_ISR 0142  
                _tx_char 039A     end_of_initialization 0390     __size_of_setupTimer0 001A  
                itoa@buf 0011                  itoa@val 0013        __end_of_setupUART 0384  
              _RCSTAbits 000FAB                  postinc0 000FEE                  utoa@buf 0008  
                utoa@val 000A                _PORTCbits 000F82                _TRISCbits 000F94  
              _TRISEbits 000F96                _TXSTAbits 000FAC      start_initialization 0384  
            __end_of_ISR 014A              __pbssCOMRAM 001D         ___lwdiv@dividend 0001  
              __pintcode 0008                 ?___lwdiv 0001                 ?___lwmod 0001  
       ___lwdiv@quotient 0005                 ?_tx_char 0001                 _PIE1bits 000F9D  
              _setupUART 036C            ??_setupTimer0 001D                 __Hrparam 0000  
               __Lrparam 0000               ?_setupUART 0001         __size_of___lwdiv 0074  
       __size_of___lwmod 0064          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
       __size_of_tx_char 0016            __size_of_main 0026            __size_of_itoa 0044  
          __size_of_utoa 00C2      __end_of_setupTimer0 036C                 _omegaInt 001D  
               isa$xinst 000000                 int$flags 0037               _INTCONbits 000FF2  
               itoa@base 0015                 intlevel2 0000         ___lwmod@dividend 0001  
            ??_setupUART 001D                 tx_char@a 0001                 utoa@base 000C  
        ___lwmod@divisor 0003          ___lwmod@counter 0005              _setupTimer0 0352  
