

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 25 16:24:41 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4431 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  0003A8                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _w
    63  0003A8  01                 	db	low STR_1
    64  0000                     _TMR5	set	3975
    65  0000                     _TMR0	set	4054
    66  0000                     _SSPBUF	set	4041
    67  0000                     _TRISCbits	set	3988
    68  0000                     _ADCON1	set	4033
    69  0000                     _ADCON0	set	4034
    70  0000                     _PIR1bits	set	3998
    71  0000                     _SSPCON1	set	4038
    72  0000                     _SSPSTAT	set	4039
    73  0000                     _TRISDbits	set	3989
    74  0000                     _T5CONbits	set	4023
    75  0000                     _T0CONbits	set	4053
    76  0000                     _QEICONbits	set	4022
    77  0000                     _DFLTCONbits	set	3936
    78  0000                     _PORTBbits	set	3969
    79  0000                     _INTCONbits	set	4082
    80  0000                     _CS	set	31778
    81                           
    82                           	psect	smallconst
    83  000300                     __psmallconst:
    84                           	callstack 0
    85  000300  00                 	db	0
    86  000301                     STR_1:
    87  000301  75                 	db	117	;'u'
    88  000302  00                 	db	0
    89  000303  00                 	db	0	; dummy byte at the end
    90  0000                     
    91                           ; #config settings
    92                           
    93                           	psect	cinit
    94  000304                     __pcinit:
    95                           	callstack 0
    96  000304                     start_initialization:
    97                           	callstack 0
    98  000304                     __initialization:
    99                           	callstack 0
   100                           
   101                           ; Initialize objects allocated to COMRAM (1 bytes)
   102                           ; load TBLPTR registers with __pidataCOMRAM
   103  000304  0EA8               	movlw	low __pidataCOMRAM
   104  000306  6EF6               	movwf	tblptrl,c
   105  000308  0E03               	movlw	high __pidataCOMRAM
   106  00030A  6EF7               	movwf	tblptrh,c
   107  00030C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   108  00030E  6EF8               	movwf	tblptru,c
   109  000310  0009               	tblrd		*+	;fetch initializer
   110  000312  CFF5 F006          	movff	tablat,__pdataCOMRAM
   111                           
   112                           ; Clear objects allocated to COMRAM (2 bytes)
   113  000316  6A05               	clrf	(__pbssCOMRAM+1)& (0+255),c
   114  000318  6A04               	clrf	__pbssCOMRAM& (0+255),c
   115  00031A                     end_of_initialization:
   116                           	callstack 0
   117  00031A                     __end_of__initialization:
   118                           	callstack 0
   119  00031A  9007               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   120  00031C  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   121  00031E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   122  000320  6EF8               	movwf	tblptru,c
   123  000322  0E03               	movlw	high __Lsmallconst
   124  000324  6EF7               	movwf	tblptrh,c
   125  000326  0100               	movlb	0
   126  000328  EFB2  F001         	goto	_main	;jump to C main() function
   127                           
   128                           	psect	bssCOMRAM
   129  000004                     __pbssCOMRAM:
   130                           	callstack 0
   131  000004                     _count:
   132                           	callstack 0
   133  000004                     	ds	2
   134                           
   135                           	psect	dataCOMRAM
   136  000006                     __pdataCOMRAM:
   137                           	callstack 0
   138  000006                     _w:
   139                           	callstack 0
   140  000006                     	ds	1
   141                           
   142                           	psect	cstackCOMRAM
   143  000001                     __pcstackCOMRAM:
   144                           	callstack 0
   145  000001                     SPI_Write@x:
   146                           	callstack 0
   147                           
   148                           ; 1 bytes @ 0x0
   149  000001                     	ds	1
   150  000002                     ??_ISR:
   151                           
   152                           ; 1 bytes @ 0x1
   153  000002                     	ds	2
   154  000004                     
   155                           ; 1 bytes @ 0x3
   156 ;;
   157 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   158 ;;
   159 ;; *************** function _main *****************
   160 ;; Defined at:
   161 ;;		line 114 in file "motorMain.c"
   162 ;; Parameters:    Size  Location     Type
   163 ;;		None
   164 ;; Auto vars:     Size  Location     Type
   165 ;;  RPM_CONSTANT    4    0        unsigned long 
   166 ;; Return value:  Size  Location     Type
   167 ;;                  1    wreg      void 
   168 ;; Registers used:
   169 ;;		wreg, status,2, cstack
   170 ;; Tracked objects:
   171 ;;		On entry : 0/0
   172 ;;		On exit  : 0/0
   173 ;;		Unchanged: 0/0
   174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   175 ;;      Params:         0       0       0       0
   176 ;;      Locals:         0       0       0       0
   177 ;;      Temps:          0       0       0       0
   178 ;;      Totals:         0       0       0       0
   179 ;;Total ram usage:        0 bytes
   180 ;; Hardware stack levels required when called: 3
   181 ;; This function calls:
   182 ;;		_SPI_Init_Slave
   183 ;;		_setupQEI
   184 ;;		_setupTimer5
   185 ;; This function is called by:
   186 ;;		Startup code after reset
   187 ;; This function uses a non-reentrant model
   188 ;;
   189                           
   190                           	psect	text0
   191  000364                     __ptext0:
   192                           	callstack 0
   193  000364                     _main:
   194                           	callstack 28
   195  000364                     
   196                           ;motorMain.c: 116: INTCONbits.GIE = 1; INTCONbits.PEIE = 1;
   197  000364  8EF2               	bsf	242,7,c	;volatile
   198  000366  8CF2               	bsf	242,6,c	;volatile
   199  000368                     
   200                           ;motorMain.c: 117: setupQEI();
   201  000368  ECBE  F001         	call	_setupQEI	;wreg free
   202  00036C                     
   203                           ;motorMain.c: 118: setupTimer5();
   204  00036C  ECCA  F001         	call	_setupTimer5	;wreg free
   205  000370                     
   206                           ;motorMain.c: 119: SPI_Init_Slave();
   207  000370  EC96  F001         	call	_SPI_Init_Slave	;wreg free
   208  000374                     l58:
   209  000374  EFBA  F001         	goto	l58
   210  000378  EF34  F000         	goto	start
   211  00037C                     __end_of_main:
   212                           	callstack 0
   213                           
   214 ;; *************** function _setupTimer5 *****************
   215 ;; Defined at:
   216 ;;		line 161 in file "motorMain.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, status,2
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   230 ;;      Params:         0       0       0       0
   231 ;;      Locals:         0       0       0       0
   232 ;;      Temps:          0       0       0       0
   233 ;;      Totals:         0       0       0       0
   234 ;;Total ram usage:        0 bytes
   235 ;; Hardware stack levels used: 1
   236 ;; Hardware stack levels required when called: 2
   237 ;; This function calls:
   238 ;;		Nothing
   239 ;; This function is called by:
   240 ;;		_main
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           	psect	text1
   245  000394                     __ptext1:
   246                           	callstack 0
   247  000394                     _setupTimer5:
   248                           	callstack 28
   249  000394                     
   250                           ;motorMain.c: 162: T5CONbits.TMR5CS = 0;
   251  000394  92B7               	bcf	183,1,c	;volatile
   252                           
   253                           ;motorMain.c: 163: T5CONbits.T5PS0 = 0;
   254  000396  96B7               	bcf	183,3,c	;volatile
   255                           
   256                           ;motorMain.c: 164: T5CONbits.T5PS1 = 0;
   257  000398  98B7               	bcf	183,4,c	;volatile
   258                           
   259                           ;motorMain.c: 165: T5CONbits.T5MOD = 0;
   260  00039A  9AB7               	bcf	183,5,c	;volatile
   261  00039C                     
   262                           ;motorMain.c: 166: TMR5 = 0;
   263  00039C  0E00               	movlw	0
   264  00039E  6E88               	movwf	136,c	;volatile
   265  0003A0  0E00               	movlw	0
   266  0003A2  6E87               	movwf	135,c	;volatile
   267  0003A4                     
   268                           ;motorMain.c: 167: T5CONbits.TMR5ON = 1;
   269  0003A4  80B7               	bsf	183,0,c	;volatile
   270  0003A6  0012               	return		;funcret
   271  0003A8                     __end_of_setupTimer5:
   272                           	callstack 0
   273                           
   274 ;; *************** function _setupQEI *****************
   275 ;; Defined at:
   276 ;;		line 127 in file "motorMain.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;		None
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, status,2
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   290 ;;      Params:         0       0       0       0
   291 ;;      Locals:         0       0       0       0
   292 ;;      Temps:          0       0       0       0
   293 ;;      Totals:         0       0       0       0
   294 ;;Total ram usage:        0 bytes
   295 ;; Hardware stack levels used: 1
   296 ;; Hardware stack levels required when called: 2
   297 ;; This function calls:
   298 ;;		Nothing
   299 ;; This function is called by:
   300 ;;		_main
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           	psect	text2
   305  00037C                     __ptext2:
   306                           	callstack 0
   307  00037C                     _setupQEI:
   308                           	callstack 28
   309  00037C                     
   310                           ;motorMain.c: 128: DFLTCONbits.FLT3EN = 1;
   311  00037C  8A60               	bsf	96,5,c	;volatile
   312                           
   313                           ;motorMain.c: 129: DFLTCONbits.FLT2EN = 1;
   314  00037E  8860               	bsf	96,4,c	;volatile
   315  000380                     
   316                           ;motorMain.c: 130: DFLTCONbits.FLTCK = 0;
   317  000380  0EF8               	movlw	-8
   318  000382  1660               	andwf	96,f,c	;volatile
   319  000384                     
   320                           ;motorMain.c: 132: QEICONbits.nVELM = 0;
   321  000384  9EB6               	bcf	182,7,c	;volatile
   322  000386                     
   323                           ;motorMain.c: 133: QEICONbits.QERR = 0;
   324  000386  9CB6               	bcf	182,6,c	;volatile
   325  000388                     
   326                           ;motorMain.c: 135: QEICONbits.QEIM0 = 0;
   327  000388  94B6               	bcf	182,2,c	;volatile
   328  00038A                     
   329                           ;motorMain.c: 136: QEICONbits.QEIM1 = 1;
   330  00038A  86B6               	bsf	182,3,c	;volatile
   331  00038C                     
   332                           ;motorMain.c: 137: QEICONbits.QEIM2 = 1;
   333  00038C  88B6               	bsf	182,4,c	;volatile
   334  00038E                     
   335                           ;motorMain.c: 139: QEICONbits.PDEC0 = 1;
   336  00038E  80B6               	bsf	182,0,c	;volatile
   337  000390                     
   338                           ;motorMain.c: 140: QEICONbits.PDEC1 = 0;
   339  000390  92B6               	bcf	182,1,c	;volatile
   340  000392  0012               	return		;funcret
   341  000394                     __end_of_setupQEI:
   342                           	callstack 0
   343                           
   344 ;; *************** function _SPI_Init_Slave *****************
   345 ;; Defined at:
   346 ;;		line 190 in file "motorMain.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   360 ;;      Params:         0       0       0       0
   361 ;;      Locals:         0       0       0       0
   362 ;;      Temps:          0       0       0       0
   363 ;;      Totals:         0       0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels used: 1
   366 ;; Hardware stack levels required when called: 2
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           	psect	text3
   375  00032C                     __ptext3:
   376                           	callstack 0
   377  00032C                     _SPI_Init_Slave:
   378                           	callstack 28
   379  00032C                     
   380                           ;motorMain.c: 192: TRISCbits.TRISC4 = 1;
   381  00032C  8894               	bsf	148,4,c	;volatile
   382                           
   383                           ;motorMain.c: 193: TRISCbits.TRISC5 = 1;
   384  00032E  8A94               	bsf	148,5,c	;volatile
   385                           
   386                           ;motorMain.c: 194: TRISCbits.TRISC6 = 1;
   387  000330  8C94               	bsf	148,6,c	;volatile
   388                           
   389                           ;motorMain.c: 195: TRISCbits.TRISC7 = 0;
   390  000332  9E94               	bcf	148,7,c	;volatile
   391                           
   392                           ;motorMain.c: 198: CS = 1;
   393  000334  8484               	bsf	3972,2,c	;volatile
   394  000336                     
   395                           ;motorMain.c: 199: SSPSTAT=0x40;
   396  000336  0E40               	movlw	64
   397  000338  6EC7               	movwf	199,c	;volatile
   398                           
   399                           ;motorMain.c: 200: SSPCON1=0x24;
   400  00033A  0E24               	movlw	36
   401  00033C  6EC6               	movwf	198,c	;volatile
   402  00033E                     
   403                           ;motorMain.c: 202: PIR1bits.SSPIF=0;
   404  00033E  969E               	bcf	158,3,c	;volatile
   405                           
   406                           ;motorMain.c: 206: ADCON0=0;
   407  000340  0E00               	movlw	0
   408  000342  6EC2               	movwf	194,c	;volatile
   409                           
   410                           ;motorMain.c: 208: ADCON1=0x0F;
   411  000344  0E0F               	movlw	15
   412  000346  6EC1               	movwf	193,c	;volatile
   413  000348  0012               	return		;funcret
   414  00034A                     __end_of_SPI_Init_Slave:
   415                           	callstack 0
   416                           
   417 ;; *************** function _ISR *****************
   418 ;; Defined at:
   419 ;;		line 104 in file "motorMain.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   433 ;;      Params:         0       0       0       0
   434 ;;      Locals:         0       0       0       0
   435 ;;      Temps:          2       0       0       0
   436 ;;      Totals:         2       0       0       0
   437 ;;Total ram usage:        2 bytes
   438 ;; Hardware stack levels used: 1
   439 ;; Hardware stack levels required when called: 1
   440 ;; This function calls:
   441 ;;		_SPI_Write
   442 ;; This function is called by:
   443 ;;		Interrupt level 2
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	intcode
   448  000008                     __pintcode:
   449                           	callstack 0
   450  000008                     _ISR:
   451                           	callstack 28
   452                           
   453                           ;incstack = 0
   454  000008  8207               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   455  00000A                     
   456                           ;motorMain.c: 105: if(INTCONbits.TMR0IF == 1) {
   457  00000A  A4F2               	btfss	242,2,c	;volatile
   458  00000C  EF0A  F000         	goto	i2u2_41
   459  000010  EF0C  F000         	goto	i2u2_40
   460  000014                     i2u2_41:
   461  000014  EF32  F000         	goto	i2l53
   462  000018                     i2u2_40:
   463  000018                     
   464                           ;motorMain.c: 106: count++;
   465  000018  4A04               	infsnz	_count^0,f,c
   466  00001A  2A05               	incf	(_count+1)^0,f,c
   467  00001C                     
   468                           ;motorMain.c: 107: if (count == 60000) {
   469  00001C  0E60               	movlw	96
   470  00001E  1804               	xorwf	_count^0,w,c
   471  000020  E107               	bnz	i2u3_41
   472  000022  0EEA               	movlw	234
   473  000024  1805               	xorwf	(_count+1)^0,w,c
   474  000026  A4D8               	btfss	status,2,c
   475  000028  EF18  F000         	goto	i2u3_41
   476  00002C  EF1A  F000         	goto	i2u3_40
   477  000030                     i2u3_41:
   478  000030  EF32  F000         	goto	i2l53
   479  000034                     i2u3_40:
   480  000034                     
   481                           ;motorMain.c: 108: PORTBbits.RB6 = 1 - PORTBbits.RB6;
   482  000034  BC81               	btfsc	129,6,c	;volatile
   483  000036  EF1F  F000         	goto	i2u4_41
   484  00003A  EF23  F000         	goto	i2u4_40
   485  00003E                     i2u4_41:
   486  00003E  6A02               	clrf	??_ISR^0,c
   487  000040  2A02               	incf	??_ISR^0,f,c
   488  000042  EF24  F000         	goto	i2u4_48
   489  000046                     i2u4_40:
   490  000046  6A02               	clrf	??_ISR^0,c
   491  000048                     i2u4_48:
   492  000048  5002               	movf	??_ISR^0,w,c
   493  00004A  0801               	sublw	1
   494  00004C  6E03               	movwf	(??_ISR+1)^0,c
   495  00004E  3A03               	swapf	(??_ISR+1)^0,f,c
   496  000050  4603               	rlncf	(??_ISR+1)^0,f,c
   497  000052  4603               	rlncf	(??_ISR+1)^0,f,c
   498  000054  5081               	movf	129,w,c	;volatile
   499  000056  1803               	xorwf	(??_ISR+1)^0,w,c
   500  000058  0BBF               	andlw	-65
   501  00005A  1803               	xorwf	(??_ISR+1)^0,w,c
   502  00005C  6E81               	movwf	129,c	;volatile
   503  00005E                     
   504                           ;motorMain.c: 109: SPI_Write(w);
   505  00005E  5006               	movf	_w^0,w,c
   506  000060  ECA5  F001         	call	_SPI_Write
   507  000064                     i2l53:
   508  000064  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   509  000066  0011               	retfie		f
   510  000068                     __end_of_ISR:
   511                           	callstack 0
   512                           
   513 ;; *************** function _SPI_Write *****************
   514 ;; Defined at:
   515 ;;		line 211 in file "motorMain.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;  x               1    wreg     unsigned char 
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  x               1    0[COMRAM] unsigned char 
   520 ;;  data_flush      1    0        unsigned char 
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   530 ;;      Params:         0       0       0       0
   531 ;;      Locals:         1       0       0       0
   532 ;;      Temps:          0       0       0       0
   533 ;;      Totals:         1       0       0       0
   534 ;;Total ram usage:        1 bytes
   535 ;; Hardware stack levels used: 1
   536 ;; This function calls:
   537 ;;		Nothing
   538 ;; This function is called by:
   539 ;;		_ISR
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           	psect	text5
   544  00034A                     __ptext5:
   545                           	callstack 0
   546  00034A                     _SPI_Write:
   547                           	callstack 28
   548                           
   549                           ;incstack = 0
   550                           ;SPI_Write@x stored from wreg
   551  00034A  6E01               	movwf	SPI_Write@x^0,c
   552  00034C                     
   553                           ;motorMain.c: 212: unsigned char data_flush;;motorMain.c: 213: SSPBUF=x;
   554  00034C  C001  FFC9         	movff	SPI_Write@x,4041	;volatile
   555  000350                     i2l79:
   556  000350  A69E               	btfss	158,3,c	;volatile
   557  000352  EFAD  F001         	goto	i2u1_41
   558  000356  EFAF  F001         	goto	i2u1_40
   559  00035A                     i2u1_41:
   560  00035A  EFA8  F001         	goto	i2l79
   561  00035E                     i2u1_40:
   562  00035E                     
   563                           ;motorMain.c: 216: PIR1bits.SSPIF=0;
   564  00035E  969E               	bcf	158,3,c	;volatile
   565  000360  50C9               	movf	201,w,c	;volatile
   566  000362  0012               	return		;funcret
   567  000364                     __end_of_SPI_Write:
   568                           	callstack 0
   569                           
   570                           	psect	rparam
   571  0000                     
   572                           	psect	temp
   573  000007                     btemp:
   574                           	callstack 0
   575  000007                     	ds	1
   576  0000                     int$flags	set	btemp
   577  0000                     wtemp8	set	btemp+1
   578  0000                     ttemp5	set	btemp+1
   579  0000                     ttemp6	set	btemp+4
   580  0000                     ttemp7	set	btemp+8
   581                           
   582                           	psect	idloc
   583                           
   584                           ;Config register IDLOC0 @ 0x200000
   585                           ;	unspecified, using default values
   586  200000                     	org	2097152
   587  200000  FF                 	db	255
   588                           
   589                           ;Config register IDLOC1 @ 0x200001
   590                           ;	unspecified, using default values
   591  200001                     	org	2097153
   592  200001  FF                 	db	255
   593                           
   594                           ;Config register IDLOC2 @ 0x200002
   595                           ;	unspecified, using default values
   596  200002                     	org	2097154
   597  200002  FF                 	db	255
   598                           
   599                           ;Config register IDLOC3 @ 0x200003
   600                           ;	unspecified, using default values
   601  200003                     	org	2097155
   602  200003  FF                 	db	255
   603                           
   604                           ;Config register IDLOC4 @ 0x200004
   605                           ;	unspecified, using default values
   606  200004                     	org	2097156
   607  200004  FF                 	db	255
   608                           
   609                           ;Config register IDLOC5 @ 0x200005
   610                           ;	unspecified, using default values
   611  200005                     	org	2097157
   612  200005  FF                 	db	255
   613                           
   614                           ;Config register IDLOC6 @ 0x200006
   615                           ;	unspecified, using default values
   616  200006                     	org	2097158
   617  200006  FF                 	db	255
   618                           
   619                           ;Config register IDLOC7 @ 0x200007
   620                           ;	unspecified, using default values
   621  200007                     	org	2097159
   622  200007  FF                 	db	255
   623                           
   624                           	psect	config
   625                           
   626                           ; Padding undefined space
   627  300000                     	org	3145728
   628  300000  FF                 	db	255
   629                           
   630                           ;Config register CONFIG1H @ 0x300001
   631                           ;	Oscillator Selection bits
   632                           ;	OSC = RC, 11XX External RC oscillator, CLKO function on RA6
   633                           ;	Fail-Safe Clock Monitor Enable bit
   634                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   635                           ;	Internal External Oscillator Switchover bit
   636                           ;	IESO = ON, Internal External Switchover mode enabled
   637  300001                     	org	3145729
   638  300001  CC                 	db	204
   639                           
   640                           ;Config register CONFIG2L @ 0x300002
   641                           ;	Power-up Timer Enable bit
   642                           ;	PWRTEN = OFF, PWRT disabled
   643                           ;	Brown-out Reset Enable bits
   644                           ;	BOREN = ON, Brown-out Reset enabled
   645                           ;	Brown Out Reset Voltage bits
   646                           ;	BORV = 0x3, unprogrammed default
   647  300002                     	org	3145730
   648  300002  0F                 	db	15
   649                           
   650                           ;Config register CONFIG2H @ 0x300003
   651                           ;	Watchdog Timer Enable bit
   652                           ;	WDTEN = OFF, WDT disabled (control is placed on the SWDTEN bit)
   653                           ;	Watchdog Timer Postscale Select bits
   654                           ;	WDPS = 32768, 1:32768
   655                           ;	Watchdog Timer Window Enable bit
   656                           ;	WINEN = OFF, WDT window disabled
   657  300003                     	org	3145731
   658  300003  3E                 	db	62
   659                           
   660                           ;Config register CONFIG3L @ 0x300004
   661                           ;	PWM output pins Reset state control
   662                           ;	PWMPIN = OFF, PWM outputs disabled upon Reset (default)
   663                           ;	Low-Side Transistors Polarity
   664                           ;	LPOL = HIGH, PWM0, 2, 4 and 6 are active-high
   665                           ;	High-Side Transistors Polarity
   666                           ;	HPOL = HIGH, PWM1, 3, 5 and 7 are active-high
   667                           ;	Timer1 Oscillator MUX
   668                           ;	T1OSCMX = ON, Low-power Timer1 operation when microcontroller is in Sleep mode
   669  300004                     	org	3145732
   670  300004  3C                 	db	60
   671                           
   672                           ;Config register CONFIG3H @ 0x300005
   673                           ;	FLTA MUX bit
   674                           ;	FLTAMX = RC1, FLTA input is multiplexed with RC1
   675                           ;	SSP I/O MUX bit
   676                           ;	SSPMX = RC7, SCK/SCL clocks and SDA/SDI data are multiplexed with RC5 and RC4, respect
      +                          ively. SDO output is multiplexed with RC7.
   677                           ;	PWM4 MUX bit
   678                           ;	PWM4MX = RB5, PWM4 output is multiplexed with RB5
   679                           ;	TMR0/T5CKI External clock MUX bit
   680                           ;	EXCLKMX = RC3, TMR0/T5CKI external clock input is multiplexed with RC3
   681                           ;	MCLR Pin Enable bit
   682                           ;	MCLRE = ON, Enabled
   683  300005                     	org	3145733
   684  300005  9D                 	db	157
   685                           
   686                           ;Config register CONFIG4L @ 0x300006
   687                           ;	Stack Full/Underflow Reset Enable bit
   688                           ;	STVREN = ON, Stack full/underflow will cause Reset
   689                           ;	Low-Voltage ICSP Enable bit
   690                           ;	LVP = ON, Low-voltage ICSP enabled
   691                           ;	Background Debugger Enable bit
   692                           ;	DEBUG = 0x1, unprogrammed default
   693  300006                     	org	3145734
   694  300006  85                 	db	133
   695                           
   696                           ; Padding undefined space
   697  300007                     	org	3145735
   698  300007  FF                 	db	255
   699                           
   700                           ;Config register CONFIG5L @ 0x300008
   701                           ;	Code Protection bit
   702                           ;	CP0 = OFF, Block 0 (000200-000FFFh) not code-protected
   703                           ;	Code Protection bit
   704                           ;	CP1 = OFF, Block 1 (001000-001FFF) not code-protected
   705                           ;	Code Protection bit
   706                           ;	CP2 = OFF, Block 2 (002000-002FFFh) not code-protected
   707                           ;	Code Protection bit
   708                           ;	CP3 = OFF, Block 3 (003000-003FFFh) not code-protected
   709  300008                     	org	3145736
   710  300008  0F                 	db	15
   711                           
   712                           ;Config register CONFIG5H @ 0x300009
   713                           ;	Boot Block Code Protection bit
   714                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code-protected
   715                           ;	Data EEPROM Code Protection bit
   716                           ;	CPD = OFF, Data EEPROM not code-protected
   717  300009                     	org	3145737
   718  300009  C0                 	db	192
   719                           
   720                           ;Config register CONFIG6L @ 0x30000A
   721                           ;	Write Protection bit
   722                           ;	WRT0 = OFF, Block 0 (000200-000FFFh) not write-protected
   723                           ;	Write Protection bit
   724                           ;	WRT1 = OFF, Block 1 (001000-001FFF) not write-protected
   725                           ;	Write Protection bit
   726                           ;	WRT2 = OFF, Block 2 (002000-002FFFh) not write-protected
   727                           ;	Write Protection bit
   728                           ;	WRT3 = OFF, Block 3 (003000-003FFFh) not write-protected
   729  30000A                     	org	3145738
   730  30000A  0F                 	db	15
   731                           
   732                           ;Config register CONFIG6H @ 0x30000B
   733                           ;	Configuration Register Write Protection bit
   734                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   735                           ;	Boot Block Write Protection bit
   736                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
   737                           ;	Data EEPROM Write Protection bit
   738                           ;	WRTD = OFF, Data EEPROM not write-protected
   739  30000B                     	org	3145739
   740  30000B  E0                 	db	224
   741                           
   742                           ;Config register CONFIG7L @ 0x30000C
   743                           ;	Table Read Protection bit
   744                           ;	EBTR0 = OFF, Block 0 (000200-000FFFh) not protected from table reads executed in other
      +                           blocks
   745                           ;	Table Read Protection bit
   746                           ;	EBTR1 = OFF, Block 1 (001000-001FFF) not protected from table reads executed in other 
      +                          blocks
   747                           ;	Table Read Protection bit
   748                           ;	EBTR2 = OFF, Block 2 (002000-002FFFh) not protected from table reads executed in other
      +                           blocks
   749                           ;	Table Read Protection bit
   750                           ;	EBTR3 = OFF, Block 3 (003000-003FFFh) not protected from table reads executed in other
      +                           blocks
   751  30000C                     	org	3145740
   752  30000C  0F                 	db	15
   753                           
   754                           ;Config register CONFIG7H @ 0x30000D
   755                           ;	Boot Block Table Read Protection bit
   756                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
   757  30000D                     	org	3145741
   758  30000D  40                 	db	64
   759                           tosu	equ	0xFFF
   760                           tosh	equ	0xFFE
   761                           tosl	equ	0xFFD
   762                           stkptr	equ	0xFFC
   763                           pclatu	equ	0xFFB
   764                           pclath	equ	0xFFA
   765                           pcl	equ	0xFF9
   766                           tblptru	equ	0xFF8
   767                           tblptrh	equ	0xFF7
   768                           tblptrl	equ	0xFF6
   769                           tablat	equ	0xFF5
   770                           prodh	equ	0xFF4
   771                           prodl	equ	0xFF3
   772                           indf0	equ	0xFEF
   773                           postinc0	equ	0xFEE
   774                           postdec0	equ	0xFED
   775                           preinc0	equ	0xFEC
   776                           plusw0	equ	0xFEB
   777                           fsr0h	equ	0xFEA
   778                           fsr0l	equ	0xFE9
   779                           wreg	equ	0xFE8
   780                           indf1	equ	0xFE7
   781                           postinc1	equ	0xFE6
   782                           postdec1	equ	0xFE5
   783                           preinc1	equ	0xFE4
   784                           plusw1	equ	0xFE3
   785                           fsr1h	equ	0xFE2
   786                           fsr1l	equ	0xFE1
   787                           bsr	equ	0xFE0
   788                           indf2	equ	0xFDF
   789                           postinc2	equ	0xFDE
   790                           postdec2	equ	0xFDD
   791                           preinc2	equ	0xFDC
   792                           plusw2	equ	0xFDB
   793                           fsr2h	equ	0xFDA
   794                           fsr2l	equ	0xFD9
   795                           status	equ	0xFD8

Data Sizes:
    Strings     2
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      3       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_SPI_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0       0
                     _SPI_Init_Slave
                           _setupQEI
                        _setupTimer5
 ---------------------------------------------------------------------------------
 (1) _setupTimer5                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupQEI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init_Slave                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0      15
                                              1 COMRAM     2     2      0
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            2     2      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Init_Slave
   _setupQEI
   _setupTimer5

 _ISR (ROOT)
   _SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      3       6       1        6.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6       3        0.0%
DATA                 0      0       6      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 25 16:24:41 2021

                      _w 0006                       l70 03A6                       l64 0392  
                     l58 0374                       l59 0374                       l76 0348  
                     _CS 007C22                      l840 0380                      l850 038C  
                    l842 0384                      l852 038E                      l844 0386  
                    l860 03A4                      l862 032C                      l854 0390  
                    l846 0388                      l838 037C                      l864 0336  
                    l848 038A                      l856 0394                      l880 0364  
                    l866 033E                      l858 039C                      l882 0366  
                    l884 0368                      l886 036C                      l878 0364  
                    l888 0370                      _ISR 0008                     ?_ISR 0001  
                   STR_1 0301                     i2l53 0064                     i2l81 035E  
                   i2l82 0362                     i2l79 0350                     _TMR0 000FD6  
                   _TMR5 000F87                     _main 0364   __end_of_SPI_Init_Slave 034A  
                   btemp 0007                     start 0068             ___param_bank 000000  
                  ??_ISR 0002                    ?_main 0001                    i2l836 034C  
                  i2l870 0018                    i2l872 001C                    i2l874 0034  
                  i2l876 005E                    i2l868 000A                    _count 0004  
                  tablat 000FF5                    ttemp5 0008                    ttemp6 000B  
                  ttemp7 000F                    status 000FD8                    wtemp8 0008  
        ?_SPI_Init_Slave 0001       __size_of_SPI_Write 001A          __initialization 0304  
           __end_of_main 037C                   ??_main 0004            __activetblptr 000001  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   i2u1_40 035E  
                 i2u1_41 035A                   i2u2_40 0018                   i2u2_41 0014  
                 i2u3_40 0034                   i2u3_41 0030                   i2u4_40 0046  
                 i2u4_41 003E                   i2u4_48 0048                   _SSPBUF 000FC9  
                 isa$std 000001        __end_of_SPI_Write 0364             __pdataCOMRAM 0006  
       __end_of_setupQEI 0394             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8             ?_setupTimer5 0001  
             __accesstop 0060  __end_of__initialization 031A            ___rparam_used 000001  
         __pcstackCOMRAM 0001         ??_SPI_Init_Slave 0004                  _SSPCON1 000FC6  
                _SSPSTAT 000FC7                  __Hparam 0000                  __Lparam 0000  
              ?_setupQEI 0001             __psmallconst 0300                  __pcinit 0304  
                __ramtop 0300                  __ptext0 0364                  __ptext1 0394  
                __ptext2 037C                  __ptext3 032C                  __ptext5 034A  
              _T0CONbits 000FD5             __size_of_ISR 0060                _T5CONbits 000FB7  
   end_of_initialization 031A     __size_of_setupTimer5 0014               ??_setupQEI 0004  
              _PORTBbits 000F81                _TRISCbits 000F94                _TRISDbits 000F95  
              _SPI_Write 034A            __pidataCOMRAM 03A8      start_initialization 0304  
            __end_of_ISR 0068               ?_SPI_Write 0001              _DFLTCONbits 000F60  
            __pbssCOMRAM 0004                __pintcode 0008        __size_of_setupQEI 0018  
            __smallconst 0300              ??_SPI_Write 0001                 _PIR1bits 000F9E  
          ??_setupTimer5 0004                 __Hrparam 0000  __size_of_SPI_Init_Slave 001E  
             SPI_Write@x 0001                 __Lrparam 0000             __Lsmallconst 0300  
          __size_of_main 0018      __end_of_setupTimer5 03A8                 isa$xinst 000000  
               _setupQEI 037C                 int$flags 0007               _INTCONbits 000FF2  
             _QEICONbits 000FB6                 intlevel2 0000              _setupTimer5 0394  
         _SPI_Init_Slave 032C  
