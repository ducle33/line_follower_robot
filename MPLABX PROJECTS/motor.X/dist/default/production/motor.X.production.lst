

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Nov 24 22:46:40 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4431 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  000C30                     __pidataCOMRAM:
    74                           	callstack 0
    75                           
    76                           ;initializer for _RPM_CONSTANT_QEI
    77  000C30  6E36               	dw	28214
    78  000C32  0001               	dw	1
    79                           
    80                           ;initializer for _number
    81  000C34  0064               	dw	100
    82                           
    83                           ;initializer for _w
    84  000C36  01                 	db	low STR_1
    85  0000                     _TMR5	set	3975
    86  0000                     _TMR0	set	4054
    87  0000                     _TXREG	set	4013
    88  0000                     _RCREG	set	4014
    89  0000                     _T2CONbits	set	4042
    90  0000                     _T2CON	set	4042
    91  0000                     _PORTCbits	set	3970
    92  0000                     _PR2	set	4043
    93  0000                     _SPBRG	set	4015
    94  0000                     _PIE1bits	set	3997
    95  0000                     _RCSTAbits	set	4011
    96  0000                     _TXSTAbits	set	4012
    97  0000                     _TRISCbits	set	3988
    98  0000                     _ADCON1	set	4033
    99  0000                     _ADCON0	set	4034
   100  0000                     _SSPSTAT	set	4039
   101  0000                     _TRISDbits	set	3989
   102  0000                     _T5CONbits	set	4023
   103  0000                     _T0CONbits	set	4053
   104  0000                     _PIE3bits	set	4003
   105  0000                     _CAP3BUFL	set	3940
   106  0000                     _CAP3BUFH	set	3941
   107  0000                     _QEICONbits	set	4022
   108  0000                     _DFLTCONbits	set	3936
   109  0000                     _CCP1CONbits	set	4029
   110  0000                     _CCPR1L	set	4030
   111  0000                     _TRISBbits	set	3987
   112  0000                     _PORTBbits	set	3969
   113  0000                     _INTCONbits	set	4082
   114  0000                     _SSPSTATbits	set	4039
   115  0000                     _SSPCON1	set	4038
   116  0000                     _SSPCON1bits	set	4038
   117  0000                     _PIR1bits	set	3998
   118  0000                     _SSPBUF	set	4041
   119  0000                     _TRMT	set	32097
   120  0000                     _RCIF	set	31989
   121  0000                     _CS	set	31778
   122  0000                     _IC2QEIF	set	32034
   123  0000                     _IC2QEIE	set	32026
   124                           
   125                           	psect	smallconst
   126  000300                     __psmallconst:
   127                           	callstack 0
   128  000300  00                 	db	0
   129  000301                     STR_1:
   130  000301  75                 	db	117	;'u'
   131  000302  00                 	db	0
   132  000303  00                 	db	0	; dummy byte at the end
   133  0000                     
   134                           ; #config settings
   135                           
   136                           	psect	cinit
   137  000ADE                     __pcinit:
   138                           	callstack 0
   139  000ADE                     start_initialization:
   140                           	callstack 0
   141  000ADE                     __initialization:
   142                           	callstack 0
   143                           
   144                           ; Initialize objects allocated to COMRAM (7 bytes)
   145                           ; load TBLPTR registers with __pidataCOMRAM
   146  000ADE  0E30               	movlw	low __pidataCOMRAM
   147  000AE0  6EF6               	movwf	tblptrl,c
   148  000AE2  0E0C               	movlw	high __pidataCOMRAM
   149  000AE4  6EF7               	movwf	tblptrh,c
   150  000AE6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   151  000AE8  6EF8               	movwf	tblptru,c
   152  000AEA  EE00  F03A         	lfsr	0,__pdataCOMRAM
   153  000AEE  EE10 F007          	lfsr	1,7
   154  000AF2                     copy_data0:
   155  000AF2  0009               	tblrd		*+
   156  000AF4  CFF5 FFEE          	movff	tablat,postinc0
   157  000AF8  50E5               	movf	postdec1,w,c
   158  000AFA  50E1               	movf	fsr1l,w,c
   159  000AFC  E1FA               	bnz	copy_data0
   160                           
   161                           ; Clear objects allocated to BANK0 (20 bytes)
   162  000AFE  EE00  F07D         	lfsr	0,__pbssBANK0
   163  000B02  0E14               	movlw	20
   164  000B04                     clear_0:
   165  000B04  6AEE               	clrf	postinc0,c
   166  000B06  06E8               	decf	wreg,f,c
   167  000B08  E1FD               	bnz	clear_0
   168                           
   169                           ; Clear objects allocated to COMRAM (11 bytes)
   170  000B0A  EE00  F02F         	lfsr	0,__pbssCOMRAM
   171  000B0E  0E0B               	movlw	11
   172  000B10                     clear_1:
   173  000B10  6AEE               	clrf	postinc0,c
   174  000B12  06E8               	decf	wreg,f,c
   175  000B14  E1FD               	bnz	clear_1
   176  000B16                     end_of_initialization:
   177                           	callstack 0
   178  000B16                     __end_of__initialization:
   179                           	callstack 0
   180  000B16  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   181  000B18  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   182  000B1A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   183  000B1C  6EF8               	movwf	tblptru,c
   184  000B1E  0E03               	movlw	high __Lsmallconst
   185  000B20  6EF7               	movwf	tblptrh,c
   186  000B22  0100               	movlb	0
   187  000B24  EFE9  F004         	goto	_main	;jump to C main() function
   188                           
   189                           	psect	bssCOMRAM
   190  00002F                     __pbssCOMRAM:
   191                           	callstack 0
   192  00002F                     _pre_speed:
   193                           	callstack 0
   194  00002F                     	ds	2
   195  000031                     _speed:
   196                           	callstack 0
   197  000031                     	ds	2
   198  000033                     _str:
   199                           	callstack 0
   200  000033                     	ds	2
   201  000035                     _count2:
   202                           	callstack 0
   203  000035                     	ds	2
   204  000037                     _count:
   205                           	callstack 0
   206  000037                     	ds	2
   207  000039                     _digit:
   208                           	callstack 0
   209  000039                     	ds	1
   210                           
   211                           	psect	dataCOMRAM
   212  00003A                     __pdataCOMRAM:
   213                           	callstack 0
   214  00003A                     _RPM_CONSTANT_QEI:
   215                           	callstack 0
   216  00003A                     	ds	4
   217  00003E                     _number:
   218                           	callstack 0
   219  00003E                     	ds	2
   220  000040                     _w:
   221                           	callstack 0
   222  000040                     	ds	1
   223                           
   224                           	psect	bssBANK0
   225  00007D                     __pbssBANK0:
   226                           	callstack 0
   227  00007D                     _stringBuffer:
   228                           	callstack 0
   229  00007D                     	ds	20
   230                           
   231                           	psect	cstackBANK0
   232  000060                     __pcstackBANK0:
   233                           	callstack 0
   234  000060                     ___flmul@sign:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x0
   238  000060                     	ds	1
   239  000061                     ___flmul@aexp:
   240                           	callstack 0
   241                           
   242                           ; 1 bytes @ 0x1
   243  000061                     	ds	1
   244  000062                     ___flmul@grs:
   245                           	callstack 0
   246                           
   247                           ; 4 bytes @ 0x2
   248  000062                     	ds	4
   249  000066                     ___flmul@bexp:
   250                           	callstack 0
   251                           
   252                           ; 1 bytes @ 0x6
   253  000066                     	ds	1
   254  000067                     ___flmul@prod:
   255                           	callstack 0
   256                           
   257                           ; 4 bytes @ 0x7
   258  000067                     	ds	4
   259  00006B                     ___flmul@temp:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0xB
   263  00006B                     	ds	2
   264  00006D                     ??___fltol:
   265                           
   266                           ; 1 bytes @ 0xD
   267  00006D                     	ds	4
   268  000071                     ___fltol@sign1:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x11
   272  000071                     	ds	1
   273  000072                     ___fltol@exp1:
   274                           	callstack 0
   275                           
   276                           ; 1 bytes @ 0x12
   277  000072                     	ds	1
   278  000073                     motorOutMSB@duty:
   279                           	callstack 0
   280  000073                     motorOutLSB@duty:
   281                           	callstack 0
   282                           
   283                           ; 4 bytes @ 0x13
   284  000073                     	ds	4
   285  000077                     ??_motorOutMSB:
   286  000077                     motorOutLSB@buffer:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x17
   290  000077                     	ds	2
   291  000079                     motorOutLSB@bufferChar:
   292                           	callstack 0
   293  000079                     motorOutMSB@buffer:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x19
   297  000079                     	ds	2
   298  00007B                     motorOutMSB@bufferChar:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x1B
   302  00007B                     	ds	1
   303  00007C                     ??_main:
   304                           
   305                           ; 1 bytes @ 0x1C
   306  00007C                     	ds	1
   307                           
   308                           	psect	cstackCOMRAM
   309  000001                     __pcstackCOMRAM:
   310                           	callstack 0
   311  000001                     ?___wmul:
   312                           	callstack 0
   313  000001                     ?___lwdiv:
   314                           	callstack 0
   315  000001                     ?___lwmod:
   316                           	callstack 0
   317  000001                     tx_char@a:
   318                           	callstack 0
   319  000001                     ___wmul@multiplier:
   320                           	callstack 0
   321  000001                     ___lwdiv@dividend:
   322                           	callstack 0
   323  000001                     ___lwmod@dividend:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x0
   327  000001                     	ds	2
   328  000003                     ___wmul@multiplicand:
   329                           	callstack 0
   330  000003                     ___lwdiv@divisor:
   331                           	callstack 0
   332  000003                     ___lwmod@divisor:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x2
   336  000003                     	ds	2
   337  000005                     ___lwmod@counter:
   338                           	callstack 0
   339  000005                     ___wmul@product:
   340                           	callstack 0
   341  000005                     ___lwdiv@quotient:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x4
   345  000005                     	ds	2
   346  000007                     ___lwdiv@counter:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x6
   350  000007                     	ds	1
   351  000008                     utoa@buf:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x7
   355  000008                     	ds	2
   356  00000A                     utoa@val:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x9
   360  00000A                     	ds	2
   361  00000C                     utoa@base:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0xB
   365  00000C                     	ds	2
   366  00000E                     utoa@v:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0xD
   370  00000E                     	ds	2
   371  000010                     utoa@c:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0xF
   375  000010                     	ds	1
   376  000011                     itoa@buf:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x10
   380  000011                     	ds	2
   381  000013                     itoa@val:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x12
   385  000013                     	ds	2
   386  000015                     itoa@base:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x14
   390  000015                     	ds	2
   391  000017                     ??_ISR:
   392                           
   393                           ; 1 bytes @ 0x16
   394  000017                     	ds	6
   395  00001D                     ISR@i:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x1C
   399  00001D                     	ds	2
   400  00001F                     ?___flmul:
   401                           	callstack 0
   402  00001F                     ___flmul@b:
   403                           	callstack 0
   404                           
   405                           ; 4 bytes @ 0x1E
   406  00001F                     	ds	4
   407  000023                     ___flmul@a:
   408                           	callstack 0
   409                           
   410                           ; 4 bytes @ 0x22
   411  000023                     	ds	4
   412  000027                     ??___flmul:
   413                           
   414                           ; 1 bytes @ 0x26
   415  000027                     	ds	4
   416  00002B                     ?___fltol:
   417                           	callstack 0
   418  00002B                     ___fltol@f1:
   419                           	callstack 0
   420                           
   421                           ; 4 bytes @ 0x2A
   422  00002B                     	ds	4
   423  00002F                     
   424                           ; 1 bytes @ 0x2E
   425 ;;
   426 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   427 ;;
   428 ;; *************** function _main *****************
   429 ;; Defined at:
   430 ;;		line 182 in file "motorMain.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   444 ;;      Params:         0       0       0       0
   445 ;;      Locals:         0       0       0       0
   446 ;;      Temps:          0       1       0       0
   447 ;;      Totals:         0       1       0       0
   448 ;;Total ram usage:        1 bytes
   449 ;; Hardware stack levels required when called: 6
   450 ;; This function calls:
   451 ;;		_motorOutLSB
   452 ;;		_motorOutMSB
   453 ;;		_setupPWM
   454 ;;		_setupQEI
   455 ;;		_setupTimer0
   456 ;;		_setupTimer5
   457 ;;		_setupUART
   458 ;; This function is called by:
   459 ;;		Startup code after reset
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           	psect	text0
   464  0009D2                     __ptext0:
   465                           	callstack 0
   466  0009D2                     _main:
   467                           	callstack 25
   468  0009D2                     
   469                           ;motorMain.c: 184: INTCONbits.GIE = 1; INTCONbits.PEIE = 1;
   470  0009D2  8EF2               	bsf	242,7,c	;volatile
   471  0009D4  8CF2               	bsf	242,6,c	;volatile
   472                           
   473                           ;motorMain.c: 185: TRISBbits.RB6 = 0;
   474  0009D6  9C93               	bcf	147,6,c	;volatile
   475                           
   476                           ;motorMain.c: 186: PORTBbits.RB6 = 1;
   477  0009D8  8C81               	bsf	129,6,c	;volatile
   478  0009DA                     
   479                           ;motorMain.c: 187: setupUART();
   480  0009DA  ECE6  F005         	call	_setupUART	;wreg free
   481                           
   482                           ;motorMain.c: 188: setupQEI();
   483  0009DE  ECC9  F005         	call	_setupQEI	;wreg free
   484                           
   485                           ;motorMain.c: 189: setupTimer5();
   486  0009E2  EC08  F006         	call	_setupTimer5	;wreg free
   487                           
   488                           ;motorMain.c: 190: setupTimer0();
   489  0009E6  ECD9  F005         	call	_setupTimer0	;wreg free
   490                           
   491                           ;motorMain.c: 191: setupPWM();
   492  0009EA  ECF2  F005         	call	_setupPWM	;wreg free
   493  0009EE                     l1918:
   494                           
   495                           ;motorMain.c: 194: CCPR1L = motorOutMSB(100);
   496  0009EE  0E00               	movlw	0
   497  0009F0  0100               	movlb	0	; () banked
   498  0009F2  6F73               	movwf	motorOutMSB@duty& (0+255),b
   499  0009F4  0E00               	movlw	0
   500  0009F6  6F74               	movwf	(motorOutMSB@duty+1)& (0+255),b
   501  0009F8  0EC8               	movlw	200
   502  0009FA  6F75               	movwf	(motorOutMSB@duty+2)& (0+255),b
   503  0009FC  0E42               	movlw	66
   504  0009FE  6F76               	movwf	(motorOutMSB@duty+3)& (0+255),b
   505  000A00  EC1A  F005         	call	_motorOutMSB	;wreg free
   506  000A04  6EBE               	movwf	190,c	;volatile
   507  000A06                     
   508                           ;motorMain.c: 195: CCP1CONbits.DC1B = motorOutLSB(100);
   509  000A06  0E00               	movlw	0
   510  000A08  0100               	movlb	0	; () banked
   511  000A0A  6F73               	movwf	motorOutLSB@duty& (0+255),b
   512  000A0C  0E00               	movlw	0
   513  000A0E  6F74               	movwf	(motorOutLSB@duty+1)& (0+255),b
   514  000A10  0EC8               	movlw	200
   515  000A12  6F75               	movwf	(motorOutLSB@duty+2)& (0+255),b
   516  000A14  0E42               	movlw	66
   517  000A16  6F76               	movwf	(motorOutLSB@duty+3)& (0+255),b
   518  000A18  EC49  F005         	call	_motorOutLSB	;wreg free
   519  000A1C  0100               	movlb	0	; () banked
   520  000A1E  6F7C               	movwf	??_main& (0+255),b
   521  000A20  3B7C               	swapf	??_main& (0+255),f,b
   522  000A22  50BD               	movf	189,w,c	;volatile
   523  000A24  197C               	xorwf	??_main& (0+255),w,b
   524  000A26  0BCF               	andlw	-49
   525  000A28  197C               	xorwf	??_main& (0+255),w,b
   526  000A2A  6EBD               	movwf	189,c	;volatile
   527  000A2C  EFF7  F004         	goto	l1918
   528  000A30  EF96  F000         	goto	start
   529  000A34                     __end_of_main:
   530                           	callstack 0
   531                           
   532 ;; *************** function _setupUART *****************
   533 ;; Defined at:
   534 ;;		line 300 in file "motorMain.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   548 ;;      Params:         0       0       0       0
   549 ;;      Locals:         0       0       0       0
   550 ;;      Temps:          0       0       0       0
   551 ;;      Totals:         0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels used: 1
   554 ;; Hardware stack levels required when called: 4
   555 ;; This function calls:
   556 ;;		Nothing
   557 ;; This function is called by:
   558 ;;		_main
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text1
   563  000BCC                     __ptext1:
   564                           	callstack 0
   565  000BCC                     _setupUART:
   566                           	callstack 26
   567  000BCC                     
   568                           ;motorMain.c: 301: TRISCbits.RC6 = 0;
   569  000BCC  9C94               	bcf	148,6,c	;volatile
   570                           
   571                           ;motorMain.c: 302: TRISCbits.RC7 = 1;
   572  000BCE  8E94               	bsf	148,7,c	;volatile
   573                           
   574                           ;motorMain.c: 303: TXSTAbits.BRGH = 0;
   575  000BD0  94AC               	bcf	172,2,c	;volatile
   576                           
   577                           ;motorMain.c: 304: TXSTAbits.SYNC = 0;
   578  000BD2  98AC               	bcf	172,4,c	;volatile
   579                           
   580                           ;motorMain.c: 305: TXSTAbits.TXEN = 1;
   581  000BD4  8AAC               	bsf	172,5,c	;volatile
   582                           
   583                           ;motorMain.c: 306: RCSTAbits.SPEN = 1;
   584  000BD6  8EAB               	bsf	171,7,c	;volatile
   585                           
   586                           ;motorMain.c: 307: RCSTAbits.CREN = 1;
   587  000BD8  88AB               	bsf	171,4,c	;volatile
   588                           
   589                           ;motorMain.c: 308: PIE1bits.RCIE = 1;
   590  000BDA  8A9D               	bsf	157,5,c	;volatile
   591                           
   592                           ;motorMain.c: 309: PIE1bits.TXIE = 0;
   593  000BDC  989D               	bcf	157,4,c	;volatile
   594  000BDE                     
   595                           ;motorMain.c: 310: SPBRG = 31;
   596  000BDE  0E1F               	movlw	31
   597  000BE0  6EAF               	movwf	175,c	;volatile
   598  000BE2  0012               	return		;funcret
   599  000BE4                     __end_of_setupUART:
   600                           	callstack 0
   601                           
   602 ;; *************** function _setupTimer5 *****************
   603 ;; Defined at:
   604 ;;		line 233 in file "motorMain.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, status,2
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   618 ;;      Params:         0       0       0       0
   619 ;;      Locals:         0       0       0       0
   620 ;;      Temps:          0       0       0       0
   621 ;;      Totals:         0       0       0       0
   622 ;;Total ram usage:        0 bytes
   623 ;; Hardware stack levels used: 1
   624 ;; Hardware stack levels required when called: 4
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text2
   633  000C10                     __ptext2:
   634                           	callstack 0
   635  000C10                     _setupTimer5:
   636                           	callstack 26
   637  000C10                     
   638                           ;motorMain.c: 234: T5CONbits.TMR5CS = 0;
   639  000C10  92B7               	bcf	183,1,c	;volatile
   640                           
   641                           ;motorMain.c: 235: T5CONbits.T5PS0 = 0;
   642  000C12  96B7               	bcf	183,3,c	;volatile
   643                           
   644                           ;motorMain.c: 236: T5CONbits.T5PS1 = 0;
   645  000C14  98B7               	bcf	183,4,c	;volatile
   646                           
   647                           ;motorMain.c: 237: T5CONbits.T5MOD = 0;
   648  000C16  9AB7               	bcf	183,5,c	;volatile
   649  000C18                     
   650                           ;motorMain.c: 238: TMR5 = 0;
   651  000C18  0E00               	movlw	0
   652  000C1A  6E88               	movwf	136,c	;volatile
   653  000C1C  0E00               	movlw	0
   654  000C1E  6E87               	movwf	135,c	;volatile
   655  000C20                     
   656                           ;motorMain.c: 239: T5CONbits.TMR5ON = 1;
   657  000C20  80B7               	bsf	183,0,c	;volatile
   658  000C22  0012               	return		;funcret
   659  000C24                     __end_of_setupTimer5:
   660                           	callstack 0
   661                           
   662 ;; *************** function _setupTimer0 *****************
   663 ;; Defined at:
   664 ;;		line 219 in file "motorMain.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, status,2
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   678 ;;      Params:         0       0       0       0
   679 ;;      Locals:         0       0       0       0
   680 ;;      Temps:          0       0       0       0
   681 ;;      Totals:         0       0       0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels used: 1
   684 ;; Hardware stack levels required when called: 4
   685 ;; This function calls:
   686 ;;		Nothing
   687 ;; This function is called by:
   688 ;;		_main
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	text3
   693  000BB2                     __ptext3:
   694                           	callstack 0
   695  000BB2                     _setupTimer0:
   696                           	callstack 26
   697  000BB2                     
   698                           ;motorMain.c: 220: INTCONbits.TMR0IE = 1;
   699  000BB2  8AF2               	bsf	242,5,c	;volatile
   700                           
   701                           ;motorMain.c: 221: T0CONbits.T016BIT = 1;
   702  000BB4  8CD5               	bsf	213,6,c	;volatile
   703                           
   704                           ;motorMain.c: 222: T0CONbits.T0CS = 0;
   705  000BB6  9AD5               	bcf	213,5,c	;volatile
   706                           
   707                           ;motorMain.c: 225: T0CONbits.PSA = 0;
   708  000BB8  96D5               	bcf	213,3,c	;volatile
   709                           
   710                           ;motorMain.c: 226: T0CONbits.T0PS2 = 1;
   711  000BBA  84D5               	bsf	213,2,c	;volatile
   712                           
   713                           ;motorMain.c: 227: T0CONbits.T0PS1 = 1;
   714  000BBC  82D5               	bsf	213,1,c	;volatile
   715                           
   716                           ;motorMain.c: 228: T0CONbits.T0PS0 = 1;
   717  000BBE  80D5               	bsf	213,0,c	;volatile
   718  000BC0                     
   719                           ;motorMain.c: 229: TMR0 = 0;
   720  000BC0  0E00               	movlw	0
   721  000BC2  6ED7               	movwf	215,c	;volatile
   722  000BC4  0E00               	movlw	0
   723  000BC6  6ED6               	movwf	214,c	;volatile
   724  000BC8                     
   725                           ;motorMain.c: 230: T0CONbits.TMR0ON = 1;
   726  000BC8  8ED5               	bsf	213,7,c	;volatile
   727  000BCA  0012               	return		;funcret
   728  000BCC                     __end_of_setupTimer0:
   729                           	callstack 0
   730                           
   731 ;; *************** function _setupQEI *****************
   732 ;; Defined at:
   733 ;;		line 201 in file "motorMain.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, status,2
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   747 ;;      Params:         0       0       0       0
   748 ;;      Locals:         0       0       0       0
   749 ;;      Temps:          0       0       0       0
   750 ;;      Totals:         0       0       0       0
   751 ;;Total ram usage:        0 bytes
   752 ;; Hardware stack levels used: 1
   753 ;; Hardware stack levels required when called: 4
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           	psect	text4
   762  000B92                     __ptext4:
   763                           	callstack 0
   764  000B92                     _setupQEI:
   765                           	callstack 26
   766  000B92                     
   767                           ;motorMain.c: 202: DFLTCONbits.FLT3EN = 1;
   768  000B92  8A60               	bsf	96,5,c	;volatile
   769                           
   770                           ;motorMain.c: 203: DFLTCONbits.FLT2EN = 1;
   771  000B94  8860               	bsf	96,4,c	;volatile
   772  000B96                     
   773                           ;motorMain.c: 204: DFLTCONbits.FLTCK = 0;
   774  000B96  0EF8               	movlw	-8
   775  000B98  1660               	andwf	96,f,c	;volatile
   776  000B9A                     
   777                           ;motorMain.c: 206: QEICONbits.nVELM = 1;
   778  000B9A  8EB6               	bsf	182,7,c	;volatile
   779  000B9C                     
   780                           ;motorMain.c: 208: QEICONbits.QEIM2 = 1;
   781  000B9C  88B6               	bsf	182,4,c	;volatile
   782  000B9E                     
   783                           ;motorMain.c: 209: QEICONbits.QEIM1 = 1;
   784  000B9E  86B6               	bsf	182,3,c	;volatile
   785  000BA0                     
   786                           ;motorMain.c: 210: QEICONbits.QEIM0 = 0;
   787  000BA0  94B6               	bcf	182,2,c	;volatile
   788                           
   789                           ;motorMain.c: 211: CAP3BUFH = 0x00; CAP3BUFL = 1;
   790  000BA2  0E00               	movlw	0
   791  000BA4  6E65               	movwf	101,c	;volatile
   792  000BA6  0E01               	movlw	1
   793  000BA8  6E64               	movwf	100,c	;volatile
   794  000BAA                     
   795                           ;motorMain.c: 213: QEICONbits.PDEC0 = 0;
   796  000BAA  90B6               	bcf	182,0,c	;volatile
   797  000BAC                     
   798                           ;motorMain.c: 214: QEICONbits.PDEC1 = 0;
   799  000BAC  92B6               	bcf	182,1,c	;volatile
   800  000BAE                     
   801                           ;motorMain.c: 215: PIE3bits.IC2QEIE = 1;
   802  000BAE  84A3               	bsf	163,2,c	;volatile
   803  000BB0  0012               	return		;funcret
   804  000BB2                     __end_of_setupQEI:
   805                           	callstack 0
   806                           
   807 ;; *************** function _setupPWM *****************
   808 ;; Defined at:
   809 ;;		line 313 in file "motorMain.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, status,2, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   823 ;;      Params:         0       0       0       0
   824 ;;      Locals:         0       0       0       0
   825 ;;      Temps:          0       0       0       0
   826 ;;      Totals:         0       0       0       0
   827 ;;Total ram usage:        0 bytes
   828 ;; Hardware stack levels used: 1
   829 ;; Hardware stack levels required when called: 5
   830 ;; This function calls:
   831 ;;		_setupTimer2
   832 ;; This function is called by:
   833 ;;		_main
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text5
   838  000BE4                     __ptext5:
   839                           	callstack 0
   840  000BE4                     _setupPWM:
   841                           	callstack 25
   842  000BE4                     
   843                           ;motorMain.c: 315: TRISCbits.RC2 = 0;
   844  000BE4  9494               	bcf	148,2,c	;volatile
   845                           
   846                           ;motorMain.c: 316: PR2 = 0xFF;
   847  000BE6  68CB               	setf	203,c	;volatile
   848  000BE8                     
   849                           ;motorMain.c: 317: setupTimer2();
   850  000BE8  EC12  F006         	call	_setupTimer2	;wreg free
   851  000BEC                     
   852                           ;motorMain.c: 319: CCP1CONbits.CCP1M3 = 1;
   853  000BEC  86BD               	bsf	189,3,c	;volatile
   854  000BEE                     
   855                           ;motorMain.c: 320: CCP1CONbits.CCP1M2 = 1;
   856  000BEE  84BD               	bsf	189,2,c	;volatile
   857  000BF0                     
   858                           ;motorMain.c: 322: TRISCbits.RC0 = 0;
   859  000BF0  9094               	bcf	148,0,c	;volatile
   860  000BF2                     
   861                           ;motorMain.c: 323: TRISCbits.RC1 = 0;
   862  000BF2  9294               	bcf	148,1,c	;volatile
   863  000BF4                     
   864                           ;motorMain.c: 324: PORTCbits.RC0 = 0;
   865  000BF4  9082               	bcf	130,0,c	;volatile
   866  000BF6                     
   867                           ;motorMain.c: 325: PORTCbits.RC1 = 1;
   868  000BF6  8282               	bsf	130,1,c	;volatile
   869  000BF8  0012               	return		;funcret
   870  000BFA                     __end_of_setupPWM:
   871                           	callstack 0
   872                           
   873 ;; *************** function _setupTimer2 *****************
   874 ;; Defined at:
   875 ;;		line 328 in file "motorMain.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;		None
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg, status,2
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   889 ;;      Params:         0       0       0       0
   890 ;;      Locals:         0       0       0       0
   891 ;;      Temps:          0       0       0       0
   892 ;;      Totals:         0       0       0       0
   893 ;;Total ram usage:        0 bytes
   894 ;; Hardware stack levels used: 1
   895 ;; Hardware stack levels required when called: 4
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_setupPWM
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text6
   904  000C24                     __ptext6:
   905                           	callstack 0
   906  000C24                     _setupTimer2:
   907                           	callstack 25
   908  000C24                     
   909                           ;motorMain.c: 330: T2CON = 0;
   910  000C24  0E00               	movlw	0
   911  000C26  6ECA               	movwf	202,c	;volatile
   912  000C28                     
   913                           ;motorMain.c: 331: T2CONbits.T2CKPS0 = 1;
   914  000C28  80CA               	bsf	202,0,c	;volatile
   915  000C2A                     
   916                           ;motorMain.c: 332: T2CONbits.T2CKPS1 = 1;
   917  000C2A  82CA               	bsf	202,1,c	;volatile
   918  000C2C                     
   919                           ;motorMain.c: 333: T2CONbits.TMR2ON = 1;
   920  000C2C  84CA               	bsf	202,2,c	;volatile
   921  000C2E  0012               	return		;funcret
   922  000C30                     __end_of_setupTimer2:
   923                           	callstack 0
   924                           
   925 ;; *************** function _motorOutMSB *****************
   926 ;; Defined at:
   927 ;;		line 336 in file "motorMain.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  duty            4   19[BANK0 ] float 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  buffer          2   25[BANK0 ] int 
   932 ;;  bufferChar      1   27[BANK0 ] unsigned char 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      unsigned char 
   935 ;; Registers used:
   936 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   942 ;;      Params:         0       4       0       0
   943 ;;      Locals:         0       3       0       0
   944 ;;      Temps:          0       2       0       0
   945 ;;      Totals:         0       9       0       0
   946 ;;Total ram usage:        9 bytes
   947 ;; Hardware stack levels used: 1
   948 ;; Hardware stack levels required when called: 5
   949 ;; This function calls:
   950 ;;		___flmul
   951 ;;		___fltol
   952 ;; This function is called by:
   953 ;;		_main
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text7
   958  000A34                     __ptext7:
   959                           	callstack 0
   960  000A34                     _motorOutMSB:
   961                           	callstack 25
   962  000A34                     
   963                           ;motorMain.c: 337: int buffer = 10.239*duty;
   964  000A34  0EF2               	movlw	242
   965  000A36  6E23               	movwf	___flmul@a^0,c
   966  000A38  0ED2               	movlw	210
   967  000A3A  6E24               	movwf	(___flmul@a+1)^0,c
   968  000A3C  0E23               	movlw	35
   969  000A3E  6E25               	movwf	(___flmul@a+2)^0,c
   970  000A40  0E41               	movlw	65
   971  000A42  6E26               	movwf	(___flmul@a+3)^0,c
   972  000A44  C073  F01F         	movff	motorOutMSB@duty,___flmul@b
   973  000A48  C074  F020         	movff	motorOutMSB@duty+1,___flmul@b+1
   974  000A4C  C075  F021         	movff	motorOutMSB@duty+2,___flmul@b+2
   975  000A50  C076  F022         	movff	motorOutMSB@duty+3,___flmul@b+3
   976  000A54  EC82  F001         	call	___flmul	;wreg free
   977  000A58  C01F  F02B         	movff	?___flmul,___fltol@f1
   978  000A5C  C020  F02C         	movff	?___flmul+1,___fltol@f1+1
   979  000A60  C021  F02D         	movff	?___flmul+2,___fltol@f1+2
   980  000A64  C022  F02E         	movff	?___flmul+3,___fltol@f1+3
   981  000A68  EC98  F003         	call	___fltol	;wreg free
   982  000A6C  C02B  F079         	movff	?___fltol,motorOutMSB@buffer
   983  000A70  C02C  F07A         	movff	?___fltol+1,motorOutMSB@buffer+1
   984  000A74                     
   985                           ;motorMain.c: 338: unsigned char bufferChar = buffer >> 2;
   986  000A74  C079  F077         	movff	motorOutMSB@buffer,??_motorOutMSB
   987  000A78  C07A  F078         	movff	motorOutMSB@buffer+1,??_motorOutMSB+1
   988  000A7C  0100               	movlb	0	; () banked
   989  000A7E  3578               	rlcf	(??_motorOutMSB+1)& (0+255),w,b
   990  000A80  3378               	rrcf	(??_motorOutMSB+1)& (0+255),f,b
   991  000A82  3377               	rrcf	??_motorOutMSB& (0+255),f,b
   992  000A84  3578               	rlcf	(??_motorOutMSB+1)& (0+255),w,b
   993  000A86  3378               	rrcf	(??_motorOutMSB+1)& (0+255),f,b
   994  000A88  3377               	rrcf	??_motorOutMSB& (0+255),f,b
   995  000A8A  5177               	movf	??_motorOutMSB& (0+255),w,b
   996  000A8C  6F7B               	movwf	motorOutMSB@bufferChar& (0+255),b
   997  000A8E                     
   998                           ; BSR set to: 0
   999                           ;motorMain.c: 339: return bufferChar;
  1000  000A8E  517B               	movf	motorOutMSB@bufferChar& (0+255),w,b
  1001  000A90                     
  1002                           ; BSR set to: 0
  1003  000A90  0012               	return		;funcret
  1004  000A92                     __end_of_motorOutMSB:
  1005                           	callstack 0
  1006                           
  1007 ;; *************** function _motorOutLSB *****************
  1008 ;; Defined at:
  1009 ;;		line 342 in file "motorMain.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  duty            4   19[BANK0 ] float 
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;  buffer          2   23[BANK0 ] int 
  1014 ;;  bufferChar      1   25[BANK0 ] unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      unsigned char 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1024 ;;      Params:         0       4       0       0
  1025 ;;      Locals:         0       3       0       0
  1026 ;;      Temps:          0       0       0       0
  1027 ;;      Totals:         0       7       0       0
  1028 ;;Total ram usage:        7 bytes
  1029 ;; Hardware stack levels used: 1
  1030 ;; Hardware stack levels required when called: 5
  1031 ;; This function calls:
  1032 ;;		___flmul
  1033 ;;		___fltol
  1034 ;; This function is called by:
  1035 ;;		_main
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text8
  1040  000A92                     __ptext8:
  1041                           	callstack 0
  1042  000A92                     _motorOutLSB:
  1043                           	callstack 25
  1044  000A92                     
  1045                           ;motorMain.c: 343: int buffer = 10.239*duty;
  1046  000A92  0EF2               	movlw	242
  1047  000A94  6E23               	movwf	___flmul@a^0,c
  1048  000A96  0ED2               	movlw	210
  1049  000A98  6E24               	movwf	(___flmul@a+1)^0,c
  1050  000A9A  0E23               	movlw	35
  1051  000A9C  6E25               	movwf	(___flmul@a+2)^0,c
  1052  000A9E  0E41               	movlw	65
  1053  000AA0  6E26               	movwf	(___flmul@a+3)^0,c
  1054  000AA2  C073  F01F         	movff	motorOutLSB@duty,___flmul@b
  1055  000AA6  C074  F020         	movff	motorOutLSB@duty+1,___flmul@b+1
  1056  000AAA  C075  F021         	movff	motorOutLSB@duty+2,___flmul@b+2
  1057  000AAE  C076  F022         	movff	motorOutLSB@duty+3,___flmul@b+3
  1058  000AB2  EC82  F001         	call	___flmul	;wreg free
  1059  000AB6  C01F  F02B         	movff	?___flmul,___fltol@f1
  1060  000ABA  C020  F02C         	movff	?___flmul+1,___fltol@f1+1
  1061  000ABE  C021  F02D         	movff	?___flmul+2,___fltol@f1+2
  1062  000AC2  C022  F02E         	movff	?___flmul+3,___fltol@f1+3
  1063  000AC6  EC98  F003         	call	___fltol	;wreg free
  1064  000ACA  C02B  F077         	movff	?___fltol,motorOutLSB@buffer
  1065  000ACE  C02C  F078         	movff	?___fltol+1,motorOutLSB@buffer+1
  1066  000AD2                     
  1067                           ;motorMain.c: 344: unsigned char bufferChar = buffer & 0b00000011;
  1068  000AD2  0100               	movlb	0	; () banked
  1069  000AD4  5177               	movf	motorOutLSB@buffer& (0+255),w,b
  1070  000AD6  0B03               	andlw	3
  1071  000AD8  6F79               	movwf	motorOutLSB@bufferChar& (0+255),b
  1072  000ADA                     
  1073                           ; BSR set to: 0
  1074                           ;motorMain.c: 345: return bufferChar;
  1075  000ADA  5179               	movf	motorOutLSB@bufferChar& (0+255),w,b
  1076  000ADC                     
  1077                           ; BSR set to: 0
  1078  000ADC  0012               	return		;funcret
  1079  000ADE                     __end_of_motorOutLSB:
  1080                           	callstack 0
  1081                           
  1082 ;; *************** function ___fltol *****************
  1083 ;; Defined at:
  1084 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  f1              4   42[COMRAM] unsigned char 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  exp1            1   18[BANK0 ] unsigned char 
  1089 ;;  sign1           1   17[BANK0 ] unsigned char 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  4   42[COMRAM] long 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2, status,0
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1099 ;;      Params:         4       0       0       0
  1100 ;;      Locals:         0       2       0       0
  1101 ;;      Temps:          0       4       0       0
  1102 ;;      Totals:         4       6       0       0
  1103 ;;Total ram usage:       10 bytes
  1104 ;; Hardware stack levels used: 1
  1105 ;; Hardware stack levels required when called: 4
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_motorOutMSB
  1110 ;;		_motorOutLSB
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           	psect	text9
  1115  000730                     __ptext9:
  1116                           	callstack 0
  1117  000730                     ___fltol:
  1118                           	callstack 25
  1119  000730  342D               	rlcf	(___fltol@f1+2)^0,w,c
  1120  000732  342E               	rlcf	(___fltol@f1+3)^0,w,c
  1121  000734  0100               	movlb	0	; () banked
  1122  000736  6F72               	movwf	___fltol@exp1& (0+255),b
  1123  000738  5172               	movf	___fltol@exp1& (0+255),w,b
  1124  00073A  A4D8               	btfss	status,2,c
  1125  00073C  EFA2  F003         	goto	u1121
  1126  000740  EFA4  F003         	goto	u1120
  1127  000744                     u1121:
  1128  000744  EFAE  F003         	goto	l1860
  1129  000748                     u1120:
  1130  000748                     l1856:
  1131                           
  1132                           ; BSR set to: 0
  1133  000748  0E00               	movlw	0
  1134  00074A  6E2B               	movwf	?___fltol^0,c
  1135  00074C  0E00               	movlw	0
  1136  00074E  6E2C               	movwf	(?___fltol+1)^0,c
  1137  000750  0E00               	movlw	0
  1138  000752  6E2D               	movwf	(?___fltol+2)^0,c
  1139  000754  0E00               	movlw	0
  1140  000756  6E2E               	movwf	(?___fltol+3)^0,c
  1141  000758  EF1B  F004         	goto	l502
  1142  00075C                     l1860:
  1143                           
  1144                           ; BSR set to: 0
  1145  00075C  C02B  F06D         	movff	___fltol@f1,??___fltol
  1146  000760  C02C  F06E         	movff	___fltol@f1+1,??___fltol+1
  1147  000764  C02D  F06F         	movff	___fltol@f1+2,??___fltol+2
  1148  000768  C02E  F070         	movff	___fltol@f1+3,??___fltol+3
  1149  00076C  0E20               	movlw	32
  1150  00076E  EFBE  F003         	goto	u1130
  1151  000772                     u1135:
  1152  000772  90D8               	bcf	status,0,c
  1153  000774  3370               	rrcf	(??___fltol+3)& (0+255),f,b
  1154  000776  336F               	rrcf	(??___fltol+2)& (0+255),f,b
  1155  000778  336E               	rrcf	(??___fltol+1)& (0+255),f,b
  1156  00077A  336D               	rrcf	??___fltol& (0+255),f,b
  1157  00077C                     u1130:
  1158  00077C  2EE8               	decfsz	wreg,f,c
  1159  00077E  EFB9  F003         	goto	u1135
  1160  000782  516D               	movf	??___fltol& (0+255),w,b
  1161  000784  6F71               	movwf	___fltol@sign1& (0+255),b
  1162  000786                     
  1163                           ; BSR set to: 0
  1164  000786  8E2D               	bsf	(___fltol@f1+2)^0,7,c
  1165  000788                     
  1166                           ; BSR set to: 0
  1167  000788  0EFF               	movlw	255
  1168  00078A  162B               	andwf	___fltol@f1^0,f,c
  1169  00078C  0EFF               	movlw	255
  1170  00078E  162C               	andwf	(___fltol@f1+1)^0,f,c
  1171  000790  0EFF               	movlw	255
  1172  000792  162D               	andwf	(___fltol@f1+2)^0,f,c
  1173  000794  0E00               	movlw	0
  1174  000796  162E               	andwf	(___fltol@f1+3)^0,f,c
  1175  000798                     
  1176                           ; BSR set to: 0
  1177  000798  0E96               	movlw	150
  1178  00079A  5F72               	subwf	___fltol@exp1& (0+255),f,b
  1179  00079C                     
  1180                           ; BSR set to: 0
  1181  00079C  BF72               	btfsc	___fltol@exp1& (0+255),7,b
  1182  00079E  EFD5  F003         	goto	u1140
  1183  0007A2  EFD3  F003         	goto	u1141
  1184  0007A6                     u1141:
  1185  0007A6  EFEB  F003         	goto	l1880
  1186  0007AA                     u1140:
  1187  0007AA                     
  1188                           ; BSR set to: 0
  1189  0007AA  5172               	movf	___fltol@exp1& (0+255),w,b
  1190  0007AC  0A80               	xorlw	128
  1191  0007AE  0F97               	addlw	151
  1192  0007B0  B0D8               	btfsc	status,0,c
  1193  0007B2  EFDD  F003         	goto	u1151
  1194  0007B6  EFDF  F003         	goto	u1150
  1195  0007BA                     u1151:
  1196  0007BA  EFE1  F003         	goto	l1876
  1197  0007BE                     u1150:
  1198  0007BE  EFA4  F003         	goto	l1856
  1199  0007C2                     l1876:
  1200                           
  1201                           ; BSR set to: 0
  1202  0007C2  90D8               	bcf	status,0,c
  1203  0007C4  322E               	rrcf	(___fltol@f1+3)^0,f,c
  1204  0007C6  322D               	rrcf	(___fltol@f1+2)^0,f,c
  1205  0007C8  322C               	rrcf	(___fltol@f1+1)^0,f,c
  1206  0007CA  322B               	rrcf	___fltol@f1^0,f,c
  1207  0007CC                     
  1208                           ; BSR set to: 0
  1209  0007CC  3F72               	incfsz	___fltol@exp1& (0+255),f,b
  1210  0007CE  EFE1  F003         	goto	l1876
  1211  0007D2  EF03  F004         	goto	l1890
  1212  0007D6                     l1880:
  1213                           
  1214                           ; BSR set to: 0
  1215  0007D6  0E1F               	movlw	31
  1216  0007D8  6572               	cpfsgt	___fltol@exp1& (0+255),b
  1217  0007DA  EFF1  F003         	goto	u1161
  1218  0007DE  EFF3  F003         	goto	u1160
  1219  0007E2                     u1161:
  1220  0007E2  EFFB  F003         	goto	l1888
  1221  0007E6                     u1160:
  1222  0007E6  EFA4  F003         	goto	l1856
  1223  0007EA                     l1886:
  1224                           
  1225                           ; BSR set to: 0
  1226  0007EA  90D8               	bcf	status,0,c
  1227  0007EC  362B               	rlcf	___fltol@f1^0,f,c
  1228  0007EE  362C               	rlcf	(___fltol@f1+1)^0,f,c
  1229  0007F0  362D               	rlcf	(___fltol@f1+2)^0,f,c
  1230  0007F2  362E               	rlcf	(___fltol@f1+3)^0,f,c
  1231  0007F4  0772               	decf	___fltol@exp1& (0+255),f,b
  1232  0007F6                     l1888:
  1233                           
  1234                           ; BSR set to: 0
  1235  0007F6  5172               	movf	___fltol@exp1& (0+255),w,b
  1236  0007F8  A4D8               	btfss	status,2,c
  1237  0007FA  EF01  F004         	goto	u1171
  1238  0007FE  EF03  F004         	goto	u1170
  1239  000802                     u1171:
  1240  000802  EFF5  F003         	goto	l1886
  1241  000806                     u1170:
  1242  000806                     l1890:
  1243                           
  1244                           ; BSR set to: 0
  1245  000806  5171               	movf	___fltol@sign1& (0+255),w,b
  1246  000808  B4D8               	btfsc	status,2,c
  1247  00080A  EF09  F004         	goto	u1181
  1248  00080E  EF0B  F004         	goto	u1180
  1249  000812                     u1181:
  1250  000812  EF13  F004         	goto	l1894
  1251  000816                     u1180:
  1252  000816                     
  1253                           ; BSR set to: 0
  1254  000816  1E2E               	comf	(___fltol@f1+3)^0,f,c
  1255  000818  1E2D               	comf	(___fltol@f1+2)^0,f,c
  1256  00081A  1E2C               	comf	(___fltol@f1+1)^0,f,c
  1257  00081C  6C2B               	negf	___fltol@f1^0,c
  1258  00081E  0E00               	movlw	0
  1259  000820  222C               	addwfc	(___fltol@f1+1)^0,f,c
  1260  000822  222D               	addwfc	(___fltol@f1+2)^0,f,c
  1261  000824  222E               	addwfc	(___fltol@f1+3)^0,f,c
  1262  000826                     l1894:
  1263                           
  1264                           ; BSR set to: 0
  1265  000826  C02B  F02B         	movff	___fltol@f1,?___fltol
  1266  00082A  C02C  F02C         	movff	___fltol@f1+1,?___fltol+1
  1267  00082E  C02D  F02D         	movff	___fltol@f1+2,?___fltol+2
  1268  000832  C02E  F02E         	movff	___fltol@f1+3,?___fltol+3
  1269  000836                     l502:
  1270                           
  1271                           ; BSR set to: 0
  1272  000836  0012               	return		;funcret
  1273  000838                     __end_of___fltol:
  1274                           	callstack 0
  1275                           
  1276 ;; *************** function ___flmul *****************
  1277 ;; Defined at:
  1278 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  b               4   30[COMRAM] long 
  1281 ;;  a               4   34[COMRAM] long 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  prod            4    7[BANK0 ] struct .
  1284 ;;  grs             4    2[BANK0 ] unsigned long 
  1285 ;;  temp            2   11[BANK0 ] struct .
  1286 ;;  bexp            1    6[BANK0 ] unsigned char 
  1287 ;;  aexp            1    1[BANK0 ] unsigned char 
  1288 ;;  sign            1    0[BANK0 ] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  4   30[COMRAM] unsigned char 
  1291 ;; Registers used:
  1292 ;;		wreg, status,2, status,0, prodl, prodh
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1298 ;;      Params:         8       0       0       0
  1299 ;;      Locals:         0      13       0       0
  1300 ;;      Temps:          4       0       0       0
  1301 ;;      Totals:        12      13       0       0
  1302 ;;Total ram usage:       25 bytes
  1303 ;; Hardware stack levels used: 1
  1304 ;; Hardware stack levels required when called: 4
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		_motorOutMSB
  1309 ;;		_motorOutLSB
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text10
  1314  000304                     __ptext10:
  1315                           	callstack 0
  1316  000304                     ___flmul:
  1317                           	callstack 25
  1318  000304  5022               	movf	(___flmul@b+3)^0,w,c
  1319  000306  0B80               	andlw	128
  1320  000308  0100               	movlb	0	; () banked
  1321  00030A  6F60               	movwf	___flmul@sign& (0+255),b
  1322  00030C  5022               	movf	(___flmul@b+3)^0,w,c
  1323  00030E  2422               	addwf	(___flmul@b+3)^0,w,c
  1324  000310  6F66               	movwf	___flmul@bexp& (0+255),b
  1325  000312                     
  1326                           ; BSR set to: 0
  1327  000312  AE21               	btfss	(___flmul@b+2)^0,7,c
  1328  000314  EF8E  F001         	goto	u931
  1329  000318  EF90  F001         	goto	u930
  1330  00031C                     u931:
  1331  00031C  EF91  F001         	goto	l1730
  1332  000320                     u930:
  1333  000320                     
  1334                           ; BSR set to: 0
  1335  000320  8166               	bsf	___flmul@bexp& (0+255),0,b
  1336  000322                     l1730:
  1337                           
  1338                           ; BSR set to: 0
  1339  000322  5166               	movf	___flmul@bexp& (0+255),w,b
  1340  000324  B4D8               	btfsc	status,2,c
  1341  000326  EF97  F001         	goto	u941
  1342  00032A  EF99  F001         	goto	u940
  1343  00032E                     u941:
  1344  00032E  EFAC  F001         	goto	l1738
  1345  000332                     u940:
  1346  000332                     
  1347                           ; BSR set to: 0
  1348  000332  2966               	incf	___flmul@bexp& (0+255),w,b
  1349  000334  A4D8               	btfss	status,2,c
  1350  000336  EF9F  F001         	goto	u951
  1351  00033A  EFA1  F001         	goto	u950
  1352  00033E                     u951:
  1353  00033E  EFA9  F001         	goto	l1736
  1354  000342                     u950:
  1355  000342                     
  1356                           ; BSR set to: 0
  1357  000342  0E00               	movlw	0
  1358  000344  6E1F               	movwf	___flmul@b^0,c
  1359  000346  0E00               	movlw	0
  1360  000348  6E20               	movwf	(___flmul@b+1)^0,c
  1361  00034A  0E00               	movlw	0
  1362  00034C  6E21               	movwf	(___flmul@b+2)^0,c
  1363  00034E  0E00               	movlw	0
  1364  000350  6E22               	movwf	(___flmul@b+3)^0,c
  1365  000352                     l1736:
  1366                           
  1367                           ; BSR set to: 0
  1368  000352  8E21               	bsf	(___flmul@b+2)^0,7,c
  1369  000354  EFB4  F001         	goto	l1740
  1370  000358                     l1738:
  1371                           
  1372                           ; BSR set to: 0
  1373  000358  0E00               	movlw	0
  1374  00035A  6E1F               	movwf	___flmul@b^0,c
  1375  00035C  0E00               	movlw	0
  1376  00035E  6E20               	movwf	(___flmul@b+1)^0,c
  1377  000360  0E00               	movlw	0
  1378  000362  6E21               	movwf	(___flmul@b+2)^0,c
  1379  000364  0E00               	movlw	0
  1380  000366  6E22               	movwf	(___flmul@b+3)^0,c
  1381  000368                     l1740:
  1382                           
  1383                           ; BSR set to: 0
  1384  000368  5026               	movf	(___flmul@a+3)^0,w,c
  1385  00036A  0B80               	andlw	128
  1386  00036C  1B60               	xorwf	___flmul@sign& (0+255),f,b
  1387  00036E                     
  1388                           ; BSR set to: 0
  1389  00036E  5026               	movf	(___flmul@a+3)^0,w,c
  1390  000370  2426               	addwf	(___flmul@a+3)^0,w,c
  1391  000372  6F61               	movwf	___flmul@aexp& (0+255),b
  1392  000374                     
  1393                           ; BSR set to: 0
  1394  000374  AE25               	btfss	(___flmul@a+2)^0,7,c
  1395  000376  EFBF  F001         	goto	u961
  1396  00037A  EFC1  F001         	goto	u960
  1397  00037E                     u961:
  1398  00037E  EFC2  F001         	goto	l1748
  1399  000382                     u960:
  1400  000382                     
  1401                           ; BSR set to: 0
  1402  000382  8161               	bsf	___flmul@aexp& (0+255),0,b
  1403  000384                     l1748:
  1404                           
  1405                           ; BSR set to: 0
  1406  000384  5161               	movf	___flmul@aexp& (0+255),w,b
  1407  000386  B4D8               	btfsc	status,2,c
  1408  000388  EFC8  F001         	goto	u971
  1409  00038C  EFCA  F001         	goto	u970
  1410  000390                     u971:
  1411  000390  EFDD  F001         	goto	l1756
  1412  000394                     u970:
  1413  000394                     
  1414                           ; BSR set to: 0
  1415  000394  2961               	incf	___flmul@aexp& (0+255),w,b
  1416  000396  A4D8               	btfss	status,2,c
  1417  000398  EFD0  F001         	goto	u981
  1418  00039C  EFD2  F001         	goto	u980
  1419  0003A0                     u981:
  1420  0003A0  EFDA  F001         	goto	l1754
  1421  0003A4                     u980:
  1422  0003A4                     
  1423                           ; BSR set to: 0
  1424  0003A4  0E00               	movlw	0
  1425  0003A6  6E23               	movwf	___flmul@a^0,c
  1426  0003A8  0E00               	movlw	0
  1427  0003AA  6E24               	movwf	(___flmul@a+1)^0,c
  1428  0003AC  0E00               	movlw	0
  1429  0003AE  6E25               	movwf	(___flmul@a+2)^0,c
  1430  0003B0  0E00               	movlw	0
  1431  0003B2  6E26               	movwf	(___flmul@a+3)^0,c
  1432  0003B4                     l1754:
  1433                           
  1434                           ; BSR set to: 0
  1435  0003B4  8E25               	bsf	(___flmul@a+2)^0,7,c
  1436  0003B6  EFE5  F001         	goto	l815
  1437  0003BA                     l1756:
  1438                           
  1439                           ; BSR set to: 0
  1440  0003BA  0E00               	movlw	0
  1441  0003BC  6E23               	movwf	___flmul@a^0,c
  1442  0003BE  0E00               	movlw	0
  1443  0003C0  6E24               	movwf	(___flmul@a+1)^0,c
  1444  0003C2  0E00               	movlw	0
  1445  0003C4  6E25               	movwf	(___flmul@a+2)^0,c
  1446  0003C6  0E00               	movlw	0
  1447  0003C8  6E26               	movwf	(___flmul@a+3)^0,c
  1448  0003CA                     l815:
  1449                           
  1450                           ; BSR set to: 0
  1451  0003CA  5161               	movf	___flmul@aexp& (0+255),w,b
  1452  0003CC  B4D8               	btfsc	status,2,c
  1453  0003CE  EFEB  F001         	goto	u991
  1454  0003D2  EFED  F001         	goto	u990
  1455  0003D6                     u991:
  1456  0003D6  EFF5  F001         	goto	l1760
  1457  0003DA                     u990:
  1458  0003DA                     
  1459                           ; BSR set to: 0
  1460  0003DA  5166               	movf	___flmul@bexp& (0+255),w,b
  1461  0003DC  A4D8               	btfss	status,2,c
  1462  0003DE  EFF3  F001         	goto	u1001
  1463  0003E2  EFF5  F001         	goto	u1000
  1464  0003E6                     u1001:
  1465  0003E6  EFFF  F001         	goto	l1764
  1466  0003EA                     u1000:
  1467  0003EA                     l1760:
  1468                           
  1469                           ; BSR set to: 0
  1470  0003EA  0E00               	movlw	0
  1471  0003EC  6E1F               	movwf	?___flmul^0,c
  1472  0003EE  0E00               	movlw	0
  1473  0003F0  6E20               	movwf	(?___flmul+1)^0,c
  1474  0003F2  0E00               	movlw	0
  1475  0003F4  6E21               	movwf	(?___flmul+2)^0,c
  1476  0003F6  0E00               	movlw	0
  1477  0003F8  6E22               	movwf	(?___flmul+3)^0,c
  1478  0003FA  EF97  F003         	goto	l819
  1479  0003FE                     l1764:
  1480                           
  1481                           ; BSR set to: 0
  1482  0003FE  5025               	movf	(___flmul@a+2)^0,w,c
  1483  000400  021F               	mulwf	___flmul@b^0,c
  1484  000402  CFF3 F06B          	movff	prodl,___flmul@temp
  1485  000406  CFF4 F06C          	movff	prodh,___flmul@temp+1
  1486  00040A                     
  1487                           ; BSR set to: 0
  1488  00040A  516B               	movf	___flmul@temp& (0+255),w,b
  1489  00040C  6F62               	movwf	___flmul@grs& (0+255),b
  1490  00040E  6B63               	clrf	(___flmul@grs+1)& (0+255),b
  1491  000410  6B64               	clrf	(___flmul@grs+2)& (0+255),b
  1492  000412  6B65               	clrf	(___flmul@grs+3)& (0+255),b
  1493  000414                     
  1494                           ; BSR set to: 0
  1495  000414  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  1496  000416  6F67               	movwf	___flmul@prod& (0+255),b
  1497  000418  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  1498  00041A  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  1499  00041C  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  1500  00041E  5024               	movf	(___flmul@a+1)^0,w,c
  1501  000420  0220               	mulwf	(___flmul@b+1)^0,c
  1502  000422  CFF3 F06B          	movff	prodl,___flmul@temp
  1503  000426  CFF4 F06C          	movff	prodh,___flmul@temp+1
  1504  00042A                     
  1505                           ; BSR set to: 0
  1506  00042A  516B               	movf	___flmul@temp& (0+255),w,b
  1507  00042C  2762               	addwf	___flmul@grs& (0+255),f,b
  1508  00042E  0E00               	movlw	0
  1509  000430  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  1510  000432  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  1511  000434  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  1512  000436                     
  1513                           ; BSR set to: 0
  1514  000436  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  1515  000438  2767               	addwf	___flmul@prod& (0+255),f,b
  1516  00043A  0E00               	movlw	0
  1517  00043C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  1518  00043E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  1519  000440  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  1520  000442  5023               	movf	___flmul@a^0,w,c
  1521  000444  0221               	mulwf	(___flmul@b+2)^0,c
  1522  000446  CFF3 F06B          	movff	prodl,___flmul@temp
  1523  00044A  CFF4 F06C          	movff	prodh,___flmul@temp+1
  1524  00044E                     
  1525                           ; BSR set to: 0
  1526  00044E  516B               	movf	___flmul@temp& (0+255),w,b
  1527  000450  2762               	addwf	___flmul@grs& (0+255),f,b
  1528  000452  0E00               	movlw	0
  1529  000454  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  1530  000456  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  1531  000458  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  1532  00045A                     
  1533                           ; BSR set to: 0
  1534  00045A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  1535  00045C  2767               	addwf	___flmul@prod& (0+255),f,b
  1536  00045E  0E00               	movlw	0
  1537  000460  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  1538  000462  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  1539  000464  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  1540  000466                     
  1541                           ; BSR set to: 0
  1542  000466  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  1543  00046A  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  1544  00046E  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  1545  000472  6B62               	clrf	___flmul@grs& (0+255),b
  1546  000474                     
  1547                           ; BSR set to: 0
  1548  000474  5023               	movf	___flmul@a^0,w,c
  1549  000476  0220               	mulwf	(___flmul@b+1)^0,c
  1550  000478  CFF3 F06B          	movff	prodl,___flmul@temp
  1551  00047C  CFF4 F06C          	movff	prodh,___flmul@temp+1
  1552  000480                     
  1553                           ; BSR set to: 0
  1554  000480  516B               	movf	___flmul@temp& (0+255),w,b
  1555  000482  2762               	addwf	___flmul@grs& (0+255),f,b
  1556  000484  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  1557  000486  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  1558  000488  0E00               	movlw	0
  1559  00048A  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  1560  00048C  0E00               	movlw	0
  1561  00048E  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  1562  000490                     
  1563                           ; BSR set to: 0
  1564  000490  5024               	movf	(___flmul@a+1)^0,w,c
  1565  000492  021F               	mulwf	___flmul@b^0,c
  1566  000494  CFF3 F06B          	movff	prodl,___flmul@temp
  1567  000498  CFF4 F06C          	movff	prodh,___flmul@temp+1
  1568  00049C                     
  1569                           ; BSR set to: 0
  1570  00049C  516B               	movf	___flmul@temp& (0+255),w,b
  1571  00049E  2762               	addwf	___flmul@grs& (0+255),f,b
  1572  0004A0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  1573  0004A2  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  1574  0004A4  0E00               	movlw	0
  1575  0004A6  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  1576  0004A8  0E00               	movlw	0
  1577  0004AA  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  1578  0004AC                     
  1579                           ; BSR set to: 0
  1580  0004AC  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  1581  0004B0  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  1582  0004B4  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  1583  0004B8  6B62               	clrf	___flmul@grs& (0+255),b
  1584  0004BA  5023               	movf	___flmul@a^0,w,c
  1585  0004BC  021F               	mulwf	___flmul@b^0,c
  1586  0004BE  CFF3 F06B          	movff	prodl,___flmul@temp
  1587  0004C2  CFF4 F06C          	movff	prodh,___flmul@temp+1
  1588  0004C6                     
  1589                           ; BSR set to: 0
  1590  0004C6  516B               	movf	___flmul@temp& (0+255),w,b
  1591  0004C8  2762               	addwf	___flmul@grs& (0+255),f,b
  1592  0004CA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  1593  0004CC  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  1594  0004CE  0E00               	movlw	0
  1595  0004D0  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  1596  0004D2  0E00               	movlw	0
  1597  0004D4  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  1598  0004D6                     
  1599                           ; BSR set to: 0
  1600  0004D6  5025               	movf	(___flmul@a+2)^0,w,c
  1601  0004D8  0220               	mulwf	(___flmul@b+1)^0,c
  1602  0004DA  CFF3 F06B          	movff	prodl,___flmul@temp
  1603  0004DE  CFF4 F06C          	movff	prodh,___flmul@temp+1
  1604  0004E2  516B               	movf	___flmul@temp& (0+255),w,b
  1605  0004E4  2767               	addwf	___flmul@prod& (0+255),f,b
  1606  0004E6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  1607  0004E8  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  1608  0004EA  0E00               	movlw	0
  1609  0004EC  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  1610  0004EE  0E00               	movlw	0
  1611  0004F0  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  1612  0004F2                     
  1613                           ; BSR set to: 0
  1614  0004F2  5024               	movf	(___flmul@a+1)^0,w,c
  1615  0004F4  0221               	mulwf	(___flmul@b+2)^0,c
  1616  0004F6  CFF3 F06B          	movff	prodl,___flmul@temp
  1617  0004FA  CFF4 F06C          	movff	prodh,___flmul@temp+1
  1618  0004FE                     
  1619                           ; BSR set to: 0
  1620  0004FE  516B               	movf	___flmul@temp& (0+255),w,b
  1621  000500  2767               	addwf	___flmul@prod& (0+255),f,b
  1622  000502  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  1623  000504  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  1624  000506  0E00               	movlw	0
  1625  000508  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  1626  00050A  0E00               	movlw	0
  1627  00050C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  1628  00050E  5025               	movf	(___flmul@a+2)^0,w,c
  1629  000510  0221               	mulwf	(___flmul@b+2)^0,c
  1630  000512  CFF3 F06B          	movff	prodl,___flmul@temp
  1631  000516  CFF4 F06C          	movff	prodh,___flmul@temp+1
  1632  00051A                     
  1633                           ; BSR set to: 0
  1634  00051A  516B               	movf	___flmul@temp& (0+255),w,b
  1635  00051C  6E27               	movwf	??___flmul^0,c
  1636  00051E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  1637  000520  6E28               	movwf	(??___flmul+1)^0,c
  1638  000522  6A29               	clrf	(??___flmul+2)^0,c
  1639  000524  6A2A               	clrf	(??___flmul+3)^0,c
  1640  000526  C029  F02A         	movff	??___flmul+2,??___flmul+3
  1641  00052A  C028  F029         	movff	??___flmul+1,??___flmul+2
  1642  00052E  C027  F028         	movff	??___flmul,??___flmul+1
  1643  000532  6A27               	clrf	??___flmul^0,c
  1644  000534  5027               	movf	??___flmul^0,w,c
  1645  000536  2767               	addwf	___flmul@prod& (0+255),f,b
  1646  000538  5028               	movf	(??___flmul+1)^0,w,c
  1647  00053A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  1648  00053C  5029               	movf	(??___flmul+2)^0,w,c
  1649  00053E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  1650  000540  502A               	movf	(??___flmul+3)^0,w,c
  1651  000542  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  1652  000544                     
  1653                           ; BSR set to: 0
  1654  000544  C062  F027         	movff	___flmul@grs,??___flmul
  1655  000548  C063  F028         	movff	___flmul@grs+1,??___flmul+1
  1656  00054C  C064  F029         	movff	___flmul@grs+2,??___flmul+2
  1657  000550  C065  F02A         	movff	___flmul@grs+3,??___flmul+3
  1658  000554  0E19               	movlw	25
  1659  000556  EFB2  F002         	goto	u1010
  1660  00055A                     u1015:
  1661  00055A  90D8               	bcf	status,0,c
  1662  00055C  322A               	rrcf	(??___flmul+3)^0,f,c
  1663  00055E  3229               	rrcf	(??___flmul+2)^0,f,c
  1664  000560  3228               	rrcf	(??___flmul+1)^0,f,c
  1665  000562  3227               	rrcf	??___flmul^0,f,c
  1666  000564                     u1010:
  1667  000564  2EE8               	decfsz	wreg,f,c
  1668  000566  EFAD  F002         	goto	u1015
  1669  00056A  5027               	movf	??___flmul^0,w,c
  1670  00056C  2767               	addwf	___flmul@prod& (0+255),f,b
  1671  00056E  5028               	movf	(??___flmul+1)^0,w,c
  1672  000570  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  1673  000572  5029               	movf	(??___flmul+2)^0,w,c
  1674  000574  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  1675  000576  502A               	movf	(??___flmul+3)^0,w,c
  1676  000578  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  1677  00057A                     
  1678                           ; BSR set to: 0
  1679  00057A  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  1680  00057E  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  1681  000582  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  1682  000586  6B62               	clrf	___flmul@grs& (0+255),b
  1683  000588                     
  1684                           ; BSR set to: 0
  1685  000588  5161               	movf	___flmul@aexp& (0+255),w,b
  1686  00058A  C066  F027         	movff	___flmul@bexp,??___flmul
  1687  00058E  6A28               	clrf	(??___flmul+1)^0,c
  1688  000590  2627               	addwf	??___flmul^0,f,c
  1689  000592  0E00               	movlw	0
  1690  000594  2228               	addwfc	(??___flmul+1)^0,f,c
  1691  000596  0E82               	movlw	130
  1692  000598  2427               	addwf	??___flmul^0,w,c
  1693  00059A  6F6B               	movwf	___flmul@temp& (0+255),b
  1694  00059C  0EFF               	movlw	255
  1695  00059E  2028               	addwfc	(??___flmul+1)^0,w,c
  1696  0005A0  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  1697  0005A2  EFE8  F002         	goto	l1812
  1698  0005A6                     l1806:
  1699                           
  1700                           ; BSR set to: 0
  1701  0005A6  90D8               	bcf	status,0,c
  1702  0005A8  3767               	rlcf	___flmul@prod& (0+255),f,b
  1703  0005AA  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  1704  0005AC  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  1705  0005AE  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  1706  0005B0                     
  1707                           ; BSR set to: 0
  1708  0005B0  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
  1709  0005B2  EFDD  F002         	goto	u1021
  1710  0005B6  EFDF  F002         	goto	u1020
  1711  0005BA                     u1021:
  1712  0005BA  EFE0  F002         	goto	l822
  1713  0005BE                     u1020:
  1714  0005BE                     
  1715                           ; BSR set to: 0
  1716  0005BE  8167               	bsf	___flmul@prod& (0+255),0,b
  1717  0005C0                     l822:
  1718                           
  1719                           ; BSR set to: 0
  1720  0005C0  90D8               	bcf	status,0,c
  1721  0005C2  3762               	rlcf	___flmul@grs& (0+255),f,b
  1722  0005C4  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
  1723  0005C6  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
  1724  0005C8  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
  1725  0005CA  076B               	decf	___flmul@temp& (0+255),f,b
  1726  0005CC  A0D8               	btfss	status,0,c
  1727  0005CE  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  1728  0005D0                     l1812:
  1729                           
  1730                           ; BSR set to: 0
  1731  0005D0  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  1732  0005D2  EFED  F002         	goto	u1031
  1733  0005D6  EFEF  F002         	goto	u1030
  1734  0005DA                     u1031:
  1735  0005DA  EFD3  F002         	goto	l1806
  1736  0005DE                     u1030:
  1737  0005DE                     
  1738                           ; BSR set to: 0
  1739  0005DE  0E00               	movlw	0
  1740  0005E0  6F61               	movwf	___flmul@aexp& (0+255),b
  1741  0005E2                     
  1742                           ; BSR set to: 0
  1743  0005E2  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
  1744  0005E4  EFF6  F002         	goto	u1041
  1745  0005E8  EFF8  F002         	goto	u1040
  1746  0005EC                     u1041:
  1747  0005EC  EF1C  F003         	goto	l824
  1748  0005F0                     u1040:
  1749  0005F0                     
  1750                           ; BSR set to: 0
  1751  0005F0  0EFF               	movlw	255
  1752  0005F2  1562               	andwf	___flmul@grs& (0+255),w,b
  1753  0005F4  6E27               	movwf	??___flmul^0,c
  1754  0005F6  0EFF               	movlw	255
  1755  0005F8  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
  1756  0005FA  6E28               	movwf	(??___flmul+1)^0,c
  1757  0005FC  0EFF               	movlw	255
  1758  0005FE  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
  1759  000600  6E29               	movwf	(??___flmul+2)^0,c
  1760  000602  0E7F               	movlw	127
  1761  000604  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
  1762  000606  6E2A               	movwf	(??___flmul+3)^0,c
  1763  000608  5027               	movf	??___flmul^0,w,c
  1764  00060A  1028               	iorwf	(??___flmul+1)^0,w,c
  1765  00060C  1029               	iorwf	(??___flmul+2)^0,w,c
  1766  00060E  102A               	iorwf	(??___flmul+3)^0,w,c
  1767  000610  B4D8               	btfsc	status,2,c
  1768  000612  EF0D  F003         	goto	u1051
  1769  000616  EF0F  F003         	goto	u1050
  1770  00061A                     u1051:
  1771  00061A  EF13  F003         	goto	l825
  1772  00061E                     u1050:
  1773  00061E                     l1820:
  1774                           
  1775                           ; BSR set to: 0
  1776  00061E  0E01               	movlw	1
  1777  000620  6F61               	movwf	___flmul@aexp& (0+255),b
  1778  000622  EF1C  F003         	goto	l824
  1779  000626                     l825:
  1780                           
  1781                           ; BSR set to: 0
  1782  000626  A167               	btfss	___flmul@prod& (0+255),0,b
  1783  000628  EF18  F003         	goto	u1061
  1784  00062C  EF1A  F003         	goto	u1060
  1785  000630                     u1061:
  1786  000630  EF1C  F003         	goto	l824
  1787  000634                     u1060:
  1788  000634  EF0F  F003         	goto	l1820
  1789  000638                     l824:
  1790                           
  1791                           ; BSR set to: 0
  1792  000638  5161               	movf	___flmul@aexp& (0+255),w,b
  1793  00063A  B4D8               	btfsc	status,2,c
  1794  00063C  EF22  F003         	goto	u1071
  1795  000640  EF24  F003         	goto	u1070
  1796  000644                     u1071:
  1797  000644  EF48  F003         	goto	l1832
  1798  000648                     u1070:
  1799  000648                     
  1800                           ; BSR set to: 0
  1801  000648  0E01               	movlw	1
  1802  00064A  2767               	addwf	___flmul@prod& (0+255),f,b
  1803  00064C  0E00               	movlw	0
  1804  00064E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  1805  000650  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  1806  000652  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  1807  000654                     
  1808                           ; BSR set to: 0
  1809  000654  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  1810  000656  EF2F  F003         	goto	u1081
  1811  00065A  EF31  F003         	goto	u1080
  1812  00065E                     u1081:
  1813  00065E  EF48  F003         	goto	l1832
  1814  000662                     u1080:
  1815  000662                     
  1816                           ; BSR set to: 0
  1817  000662  C067  F027         	movff	___flmul@prod,??___flmul
  1818  000666  C068  F028         	movff	___flmul@prod+1,??___flmul+1
  1819  00066A  C069  F029         	movff	___flmul@prod+2,??___flmul+2
  1820  00066E  C06A  F02A         	movff	___flmul@prod+3,??___flmul+3
  1821  000672  342A               	rlcf	(??___flmul+3)^0,w,c
  1822  000674  322A               	rrcf	(??___flmul+3)^0,f,c
  1823  000676  3229               	rrcf	(??___flmul+2)^0,f,c
  1824  000678  3228               	rrcf	(??___flmul+1)^0,f,c
  1825  00067A  3227               	rrcf	??___flmul^0,f,c
  1826  00067C  C027  F067         	movff	??___flmul,___flmul@prod
  1827  000680  C028  F068         	movff	??___flmul+1,___flmul@prod+1
  1828  000684  C029  F069         	movff	??___flmul+2,___flmul@prod+2
  1829  000688  C02A  F06A         	movff	??___flmul+3,___flmul@prod+3
  1830  00068C                     
  1831                           ; BSR set to: 0
  1832  00068C  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  1833  00068E  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  1834  000690                     l1832:
  1835                           
  1836                           ; BSR set to: 0
  1837  000690  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  1838  000692  EF53  F003         	goto	u1091
  1839  000696  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  1840  000698  E108               	bnz	u1090
  1841  00069A  296B               	incf	___flmul@temp& (0+255),w,b
  1842  00069C  A0D8               	btfss	status,0,c
  1843  00069E  EF53  F003         	goto	u1091
  1844  0006A2  EF55  F003         	goto	u1090
  1845  0006A6                     u1091:
  1846  0006A6  EF5F  F003         	goto	l1836
  1847  0006AA                     u1090:
  1848  0006AA                     
  1849                           ; BSR set to: 0
  1850  0006AA  0E00               	movlw	0
  1851  0006AC  6F67               	movwf	___flmul@prod& (0+255),b
  1852  0006AE  0E00               	movlw	0
  1853  0006B0  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  1854  0006B2  0E80               	movlw	128
  1855  0006B4  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  1856  0006B6  0E7F               	movlw	127
  1857  0006B8  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  1858  0006BA  EF8D  F003         	goto	l1848
  1859  0006BE                     l1836:
  1860                           
  1861                           ; BSR set to: 0
  1862  0006BE  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  1863  0006C0  EF6C  F003         	goto	u1100
  1864  0006C4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  1865  0006C6  E106               	bnz	u1101
  1866  0006C8  056B               	decf	___flmul@temp& (0+255),w,b
  1867  0006CA  B0D8               	btfsc	status,0,c
  1868  0006CC  EF6A  F003         	goto	u1101
  1869  0006D0  EF6C  F003         	goto	u1100
  1870  0006D4                     u1101:
  1871  0006D4  EF78  F003         	goto	l832
  1872  0006D8                     u1100:
  1873  0006D8                     
  1874                           ; BSR set to: 0
  1875  0006D8  0E00               	movlw	0
  1876  0006DA  6F67               	movwf	___flmul@prod& (0+255),b
  1877  0006DC  0E00               	movlw	0
  1878  0006DE  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  1879  0006E0  0E00               	movlw	0
  1880  0006E2  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  1881  0006E4  0E00               	movlw	0
  1882  0006E6  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  1883  0006E8  0E00               	movlw	0
  1884  0006EA  6F60               	movwf	___flmul@sign& (0+255),b
  1885  0006EC  EF8D  F003         	goto	l1848
  1886  0006F0                     l832:
  1887                           
  1888                           ; BSR set to: 0
  1889  0006F0  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  1890  0006F4                     
  1891                           ; BSR set to: 0
  1892  0006F4  0EFF               	movlw	255
  1893  0006F6  1767               	andwf	___flmul@prod& (0+255),f,b
  1894  0006F8  0EFF               	movlw	255
  1895  0006FA  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  1896  0006FC  0E7F               	movlw	127
  1897  0006FE  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  1898  000700  0E00               	movlw	0
  1899  000702  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  1900  000704                     
  1901                           ; BSR set to: 0
  1902  000704  A166               	btfss	___flmul@bexp& (0+255),0,b
  1903  000706  EF87  F003         	goto	u1111
  1904  00070A  EF89  F003         	goto	u1110
  1905  00070E                     u1111:
  1906  00070E  EF8A  F003         	goto	l1846
  1907  000712                     u1110:
  1908  000712                     
  1909                           ; BSR set to: 0
  1910  000712  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  1911  000714                     l1846:
  1912                           
  1913                           ; BSR set to: 0
  1914  000714  90D8               	bcf	status,0,c
  1915  000716  3166               	rrcf	___flmul@bexp& (0+255),w,b
  1916  000718  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  1917  00071A                     l1848:
  1918                           
  1919                           ; BSR set to: 0
  1920  00071A  5160               	movf	___flmul@sign& (0+255),w,b
  1921  00071C  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  1922  00071E                     
  1923                           ; BSR set to: 0
  1924  00071E  C067  F01F         	movff	___flmul@prod,?___flmul
  1925  000722  C068  F020         	movff	___flmul@prod+1,?___flmul+1
  1926  000726  C069  F021         	movff	___flmul@prod+2,?___flmul+2
  1927  00072A  C06A  F022         	movff	___flmul@prod+3,?___flmul+3
  1928  00072E                     l819:
  1929                           
  1930                           ; BSR set to: 0
  1931  00072E  0012               	return		;funcret
  1932  000730                     __end_of___flmul:
  1933                           	callstack 0
  1934                           
  1935 ;; *************** function _ISR *****************
  1936 ;; Defined at:
  1937 ;;		line 149 in file "motorMain.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  i               2   28[COMRAM] int 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1951 ;;      Params:         0       0       0       0
  1952 ;;      Locals:         2       0       0       0
  1953 ;;      Temps:          6       0       0       0
  1954 ;;      Totals:         8       0       0       0
  1955 ;;Total ram usage:        8 bytes
  1956 ;; Hardware stack levels used: 1
  1957 ;; Hardware stack levels required when called: 3
  1958 ;; This function calls:
  1959 ;;		___wmul
  1960 ;;		_itoa
  1961 ;;		_tx_char
  1962 ;; This function is called by:
  1963 ;;		Interrupt level 2
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	intcode
  1968  000008                     __pintcode:
  1969                           	callstack 0
  1970  000008                     _ISR:
  1971                           	callstack 25
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;incstack = 0
  1975  000008  8241               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1976  00000A  CFD9 F019          	movff	fsr2l,??_ISR+2
  1977  00000E  CFDA F01A          	movff	fsr2h,??_ISR+3
  1978  000012  CFF3 F01B          	movff	prodl,??_ISR+4
  1979  000016  CFF4 F01C          	movff	prodh,??_ISR+5
  1980  00001A                     
  1981                           ;motorMain.c: 157: if(IC2QEIE && IC2QEIF) {
  1982  00001A  A4A3               	btfss	4003,2,c	;volatile
  1983  00001C  EF12  F000         	goto	i2u87_41
  1984  000020  EF14  F000         	goto	i2u87_40
  1985  000024                     i2u87_41:
  1986  000024  EF1E  F000         	goto	i2l1688
  1987  000028                     i2u87_40:
  1988  000028  A4A4               	btfss	4004,2,c	;volatile
  1989  00002A  EF19  F000         	goto	i2u88_41
  1990  00002E  EF1B  F000         	goto	i2u88_40
  1991  000032                     i2u88_41:
  1992  000032  EF1E  F000         	goto	i2l1688
  1993  000036                     i2u88_40:
  1994  000036                     
  1995                           ;motorMain.c: 158: speed++;
  1996  000036  4A31               	infsnz	_speed^0,f,c
  1997  000038  2A32               	incf	(_speed+1)^0,f,c
  1998  00003A                     
  1999                           ;motorMain.c: 159: IC2QEIF = 0;
  2000  00003A  94A4               	bcf	4004,2,c	;volatile
  2001  00003C                     i2l1688:
  2002                           
  2003                           ;motorMain.c: 160: };motorMain.c: 161: if(INTCONbits.TMR0IF) {
  2004  00003C  A4F2               	btfss	242,2,c	;volatile
  2005  00003E  EF23  F000         	goto	i2u89_41
  2006  000042  EF25  F000         	goto	i2u89_40
  2007  000046                     i2u89_41:
  2008  000046  EF8C  F000         	goto	i2l148
  2009  00004A                     i2u89_40:
  2010  00004A                     
  2011                           ;motorMain.c: 162: count++;
  2012  00004A  4A37               	infsnz	_count^0,f,c
  2013  00004C  2A38               	incf	(_count+1)^0,f,c
  2014  00004E                     
  2015                           ;motorMain.c: 164: if (count == 1) {
  2016  00004E  0437               	decf	_count^0,w,c
  2017  000050  1038               	iorwf	(_count+1)^0,w,c
  2018  000052  A4D8               	btfss	status,2,c
  2019  000054  EF2E  F000         	goto	i2u90_41
  2020  000058  EF30  F000         	goto	i2u90_40
  2021  00005C                     i2u90_41:
  2022  00005C  EF8B  F000         	goto	i2l1714
  2023  000060                     i2u90_40:
  2024  000060                     
  2025                           ;motorMain.c: 165: count = 0;
  2026  000060  0E00               	movlw	0
  2027  000062  6E38               	movwf	(_count+1)^0,c
  2028  000064  0E00               	movlw	0
  2029  000066  6E37               	movwf	_count^0,c
  2030  000068                     
  2031                           ;motorMain.c: 166: PORTBbits.RB6 = 1 - PORTBbits.RB6;
  2032  000068  BC81               	btfsc	129,6,c	;volatile
  2033  00006A  EF39  F000         	goto	i2u91_41
  2034  00006E  EF3D  F000         	goto	i2u91_40
  2035  000072                     i2u91_41:
  2036  000072  6A17               	clrf	??_ISR^0,c
  2037  000074  2A17               	incf	??_ISR^0,f,c
  2038  000076  EF3E  F000         	goto	i2u91_48
  2039  00007A                     i2u91_40:
  2040  00007A  6A17               	clrf	??_ISR^0,c
  2041  00007C                     i2u91_48:
  2042  00007C  5017               	movf	??_ISR^0,w,c
  2043  00007E  0801               	sublw	1
  2044  000080  6E18               	movwf	(??_ISR+1)^0,c
  2045  000082  3A18               	swapf	(??_ISR+1)^0,f,c
  2046  000084  4618               	rlncf	(??_ISR+1)^0,f,c
  2047  000086  4618               	rlncf	(??_ISR+1)^0,f,c
  2048  000088  5081               	movf	129,w,c	;volatile
  2049  00008A  1818               	xorwf	(??_ISR+1)^0,w,c
  2050  00008C  0BBF               	andlw	-65
  2051  00008E  1818               	xorwf	(??_ISR+1)^0,w,c
  2052  000090  6E81               	movwf	129,c	;volatile
  2053  000092                     
  2054                           ;motorMain.c: 167: count = 0;
  2055  000092  0E00               	movlw	0
  2056  000094  6E38               	movwf	(_count+1)^0,c
  2057  000096  0E00               	movlw	0
  2058  000098  6E37               	movwf	_count^0,c
  2059  00009A                     
  2060                           ;motorMain.c: 168: itoa(stringBuffer,speed*17,10);
  2061  00009A  0E7D               	movlw	low _stringBuffer
  2062  00009C  6E11               	movwf	itoa@buf^0,c
  2063  00009E  0E00               	movlw	high _stringBuffer
  2064  0000A0  6E12               	movwf	(itoa@buf+1)^0,c
  2065  0000A2  C031  F001         	movff	_speed,___wmul@multiplier
  2066  0000A6  C032  F002         	movff	_speed+1,___wmul@multiplier+1
  2067  0000AA  0E00               	movlw	0
  2068  0000AC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2069  0000AE  0E11               	movlw	17
  2070  0000B0  6E03               	movwf	___wmul@multiplicand^0,c
  2071  0000B2  ECB6  F005         	call	___wmul	;wreg free
  2072  0000B6  C001  F013         	movff	?___wmul,itoa@val
  2073  0000BA  C002  F014         	movff	?___wmul+1,itoa@val+1
  2074  0000BE  0E00               	movlw	0
  2075  0000C0  6E16               	movwf	(itoa@base+1)^0,c
  2076  0000C2  0E0A               	movlw	10
  2077  0000C4  6E15               	movwf	itoa@base^0,c
  2078  0000C6  EC94  F005         	call	_itoa	;wreg free
  2079  0000CA                     
  2080                           ;motorMain.c: 170: int i = 0;
  2081  0000CA  0E00               	movlw	0
  2082  0000CC  6E1E               	movwf	(ISR@i+1)^0,c
  2083  0000CE  0E00               	movlw	0
  2084  0000D0  6E1D               	movwf	ISR@i^0,c
  2085                           
  2086                           ;motorMain.c: 171: while (stringBuffer[i]) {
  2087  0000D2  EF76  F000         	goto	i2l1708
  2088  0000D6                     i2l1704:
  2089                           
  2090                           ;motorMain.c: 172: tx_char(stringBuffer[i]);
  2091  0000D6  0E7D               	movlw	low _stringBuffer
  2092  0000D8  241D               	addwf	ISR@i^0,w,c
  2093  0000DA  6ED9               	movwf	fsr2l,c
  2094  0000DC  0E00               	movlw	high _stringBuffer
  2095  0000DE  201E               	addwfc	(ISR@i+1)^0,w,c
  2096  0000E0  6EDA               	movwf	fsr2h,c
  2097  0000E2  50DF               	movf	indf2,w,c
  2098  0000E4  ECFD  F005         	call	_tx_char
  2099  0000E8                     
  2100                           ;motorMain.c: 173: i++;
  2101  0000E8  4A1D               	infsnz	ISR@i^0,f,c
  2102  0000EA  2A1E               	incf	(ISR@i+1)^0,f,c
  2103  0000EC                     i2l1708:
  2104  0000EC  0E7D               	movlw	low _stringBuffer
  2105  0000EE  241D               	addwf	ISR@i^0,w,c
  2106  0000F0  6ED9               	movwf	fsr2l,c
  2107  0000F2  0E00               	movlw	high _stringBuffer
  2108  0000F4  201E               	addwfc	(ISR@i+1)^0,w,c
  2109  0000F6  6EDA               	movwf	fsr2h,c
  2110  0000F8  50DF               	movf	indf2,w,c
  2111  0000FA  A4D8               	btfss	status,2,c
  2112  0000FC  EF82  F000         	goto	i2u92_41
  2113  000100  EF84  F000         	goto	i2u92_40
  2114  000104                     i2u92_41:
  2115  000104  EF6B  F000         	goto	i2l1704
  2116  000108                     i2u92_40:
  2117  000108                     
  2118                           ;motorMain.c: 174: };motorMain.c: 175: tx_char(0x0a);
  2119  000108  0E0A               	movlw	10
  2120  00010A  ECFD  F005         	call	_tx_char
  2121  00010E                     
  2122                           ;motorMain.c: 176: speed = 0;
  2123  00010E  0E00               	movlw	0
  2124  000110  6E32               	movwf	(_speed+1)^0,c
  2125  000112  0E00               	movlw	0
  2126  000114  6E31               	movwf	_speed^0,c
  2127  000116                     i2l1714:
  2128                           
  2129                           ;motorMain.c: 177: };motorMain.c: 178: INTCONbits.TMR0IF = 0;
  2130  000116  94F2               	bcf	242,2,c	;volatile
  2131  000118                     i2l148:
  2132  000118  C01C  FFF4         	movff	??_ISR+5,prodh
  2133  00011C  C01B  FFF3         	movff	??_ISR+4,prodl
  2134  000120  C01A  FFDA         	movff	??_ISR+3,fsr2h
  2135  000124  C019  FFD9         	movff	??_ISR+2,fsr2l
  2136  000128  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2137  00012A  0011               	retfie		f
  2138  00012C                     __end_of_ISR:
  2139                           	callstack 0
  2140                           
  2141 ;; *************** function _tx_char *****************
  2142 ;; Defined at:
  2143 ;;		line 353 in file "motorMain.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  a               1    wreg     unsigned char 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  a               1    0[COMRAM] unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2157 ;;      Params:         0       0       0       0
  2158 ;;      Locals:         1       0       0       0
  2159 ;;      Temps:          0       0       0       0
  2160 ;;      Totals:         1       0       0       0
  2161 ;;Total ram usage:        1 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_ISR
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text12
  2171  000BFA                     __ptext12:
  2172                           	callstack 0
  2173  000BFA                     _tx_char:
  2174                           	callstack 27
  2175                           
  2176                           ;incstack = 0
  2177                           ;tx_char@a stored from wreg
  2178  000BFA  6E01               	movwf	tx_char@a^0,c
  2179  000BFC                     
  2180                           ;motorMain.c: 354: TXREG=a;
  2181  000BFC  C001  FFAD         	movff	tx_char@a,4013	;volatile
  2182  000C00                     i2l207:
  2183  000C00  A2AC               	btfss	4012,1,c	;volatile
  2184  000C02  EF05  F006         	goto	i2u86_41
  2185  000C06  EF07  F006         	goto	i2u86_40
  2186  000C0A                     i2u86_41:
  2187  000C0A  EF00  F006         	goto	i2l207
  2188  000C0E                     i2u86_40:
  2189  000C0E  0012               	return		;funcret
  2190  000C10                     __end_of_tx_char:
  2191                           	callstack 0
  2192                           
  2193 ;; *************** function _itoa *****************
  2194 ;; Defined at:
  2195 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  buf             2   16[COMRAM] PTR unsigned char 
  2198 ;;		 -> stringBuffer(20), 
  2199 ;;  val             2   18[COMRAM] int 
  2200 ;;  base            2   20[COMRAM] int 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  cp              2    0        PTR unsigned char 
  2203 ;;		 -> stringBuffer(20), 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  2   16[COMRAM] PTR unsigned char 
  2206 ;; Registers used:
  2207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2213 ;;      Params:         6       0       0       0
  2214 ;;      Locals:         0       0       0       0
  2215 ;;      Temps:          0       0       0       0
  2216 ;;      Totals:         6       0       0       0
  2217 ;;Total ram usage:        6 bytes
  2218 ;; Hardware stack levels used: 1
  2219 ;; Hardware stack levels required when called: 2
  2220 ;; This function calls:
  2221 ;;		_utoa
  2222 ;; This function is called by:
  2223 ;;		_ISR
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text13
  2228  000B28                     __ptext13:
  2229                           	callstack 0
  2230  000B28                     _itoa:
  2231                           	callstack 25
  2232  000B28  BE14               	btfsc	(itoa@val+1)^0,7,c
  2233  000B2A  EF9B  F005         	goto	i2u85_40
  2234  000B2E  EF99  F005         	goto	i2u85_41
  2235  000B32                     i2u85_41:
  2236  000B32  EFA7  F005         	goto	i2l1652
  2237  000B36                     i2u85_40:
  2238  000B36  C011  FFD9         	movff	itoa@buf,fsr2l
  2239  000B3A  C012  FFDA         	movff	itoa@buf+1,fsr2h
  2240  000B3E  0E2D               	movlw	45
  2241  000B40  6EDF               	movwf	indf2,c
  2242  000B42  4A11               	infsnz	itoa@buf^0,f,c
  2243  000B44  2A12               	incf	(itoa@buf+1)^0,f,c
  2244  000B46  6C13               	negf	itoa@val^0,c
  2245  000B48  1E14               	comf	(itoa@val+1)^0,f,c
  2246  000B4A  B0D8               	btfsc	status,0,c
  2247  000B4C  2A14               	incf	(itoa@val+1)^0,f,c
  2248  000B4E                     i2l1652:
  2249  000B4E  C011  F008         	movff	itoa@buf,utoa@buf
  2250  000B52  C012  F009         	movff	itoa@buf+1,utoa@buf+1
  2251  000B56  C013  F00A         	movff	itoa@val,utoa@val
  2252  000B5A  C014  F00B         	movff	itoa@val+1,utoa@val+1
  2253  000B5E  C015  F00C         	movff	itoa@base,utoa@base
  2254  000B62  C016  F00D         	movff	itoa@base+1,utoa@base+1
  2255  000B66  EC1C  F004         	call	_utoa	;wreg free
  2256  000B6A  0012               	return		;funcret
  2257  000B6C                     __end_of_itoa:
  2258                           	callstack 0
  2259                           
  2260 ;; *************** function _utoa *****************
  2261 ;; Defined at:
  2262 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  buf             2    7[COMRAM] PTR unsigned char 
  2265 ;;		 -> stringBuffer(20), 
  2266 ;;  val             2    9[COMRAM] unsigned int 
  2267 ;;  base            2   11[COMRAM] int 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  v               2   13[COMRAM] unsigned int 
  2270 ;;  c               1   15[COMRAM] unsigned char 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  2    7[COMRAM] PTR unsigned char 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2280 ;;      Params:         6       0       0       0
  2281 ;;      Locals:         3       0       0       0
  2282 ;;      Temps:          0       0       0       0
  2283 ;;      Totals:         9       0       0       0
  2284 ;;Total ram usage:        9 bytes
  2285 ;; Hardware stack levels used: 1
  2286 ;; Hardware stack levels required when called: 1
  2287 ;; This function calls:
  2288 ;;		___lwdiv
  2289 ;;		___lwmod
  2290 ;; This function is called by:
  2291 ;;		_itoa
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text14
  2296  000838                     __ptext14:
  2297                           	callstack 0
  2298  000838                     _utoa:
  2299                           	callstack 25
  2300  000838  C00A  F00E         	movff	utoa@val,utoa@v
  2301  00083C  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  2302  000840                     i2l1616:
  2303  000840  C00E  F001         	movff	utoa@v,___lwdiv@dividend
  2304  000844  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  2305  000848  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  2306  00084C  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  2307  000850  EC7D  F004         	call	___lwdiv	;wreg free
  2308  000854  C001  F00E         	movff	?___lwdiv,utoa@v
  2309  000858  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
  2310  00085C  4A08               	infsnz	utoa@buf^0,f,c
  2311  00085E  2A09               	incf	(utoa@buf+1)^0,f,c
  2312  000860  500E               	movf	utoa@v^0,w,c
  2313  000862  100F               	iorwf	(utoa@v+1)^0,w,c
  2314  000864  A4D8               	btfss	status,2,c
  2315  000866  EF37  F004         	goto	i2u82_41
  2316  00086A  EF39  F004         	goto	i2u82_40
  2317  00086E                     i2u82_41:
  2318  00086E  EF20  F004         	goto	i2l1616
  2319  000872                     i2u82_40:
  2320  000872  C008  FFD9         	movff	utoa@buf,fsr2l
  2321  000876  C009  FFDA         	movff	utoa@buf+1,fsr2h
  2322  00087A  0E00               	movlw	0
  2323  00087C  6EDF               	movwf	indf2,c
  2324  00087E  0608               	decf	utoa@buf^0,f,c
  2325  000880  A0D8               	btfss	status,0,c
  2326  000882  0609               	decf	(utoa@buf+1)^0,f,c
  2327  000884                     i2l1626:
  2328  000884  C00A  F001         	movff	utoa@val,___lwmod@dividend
  2329  000888  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  2330  00088C  C00C  F003         	movff	utoa@base,___lwmod@divisor
  2331  000890  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  2332  000894  ECB7  F004         	call	___lwmod	;wreg free
  2333  000898  5001               	movf	?___lwmod^0,w,c
  2334  00089A  6E10               	movwf	utoa@c^0,c
  2335  00089C  C00A  F001         	movff	utoa@val,___lwdiv@dividend
  2336  0008A0  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  2337  0008A4  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  2338  0008A8  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  2339  0008AC  EC7D  F004         	call	___lwdiv	;wreg free
  2340  0008B0  C001  F00A         	movff	?___lwdiv,utoa@val
  2341  0008B4  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
  2342  0008B8  0E09               	movlw	9
  2343  0008BA  6410               	cpfsgt	utoa@c^0,c
  2344  0008BC  EF62  F004         	goto	i2u83_41
  2345  0008C0  EF64  F004         	goto	i2u83_40
  2346  0008C4                     i2u83_41:
  2347  0008C4  EF66  F004         	goto	i2l884
  2348  0008C8                     i2u83_40:
  2349  0008C8  0E07               	movlw	7
  2350  0008CA  2610               	addwf	utoa@c^0,f,c
  2351  0008CC                     i2l884:
  2352  0008CC  0E30               	movlw	48
  2353  0008CE  2610               	addwf	utoa@c^0,f,c
  2354  0008D0  C008  FFD9         	movff	utoa@buf,fsr2l
  2355  0008D4  C009  FFDA         	movff	utoa@buf+1,fsr2h
  2356  0008D8  C010  FFDF         	movff	utoa@c,indf2
  2357  0008DC  0608               	decf	utoa@buf^0,f,c
  2358  0008DE  A0D8               	btfss	status,0,c
  2359  0008E0  0609               	decf	(utoa@buf+1)^0,f,c
  2360  0008E2  500A               	movf	utoa@val^0,w,c
  2361  0008E4  100B               	iorwf	(utoa@val+1)^0,w,c
  2362  0008E6  A4D8               	btfss	status,2,c
  2363  0008E8  EF78  F004         	goto	i2u84_41
  2364  0008EC  EF7A  F004         	goto	i2u84_40
  2365  0008F0                     i2u84_41:
  2366  0008F0  EF42  F004         	goto	i2l1626
  2367  0008F4                     i2u84_40:
  2368  0008F4                     
  2369                           ;	Return value of _utoa is never used
  2370  0008F4  4A08               	infsnz	utoa@buf^0,f,c
  2371  0008F6  2A09               	incf	(utoa@buf+1)^0,f,c
  2372  0008F8  0012               	return		;funcret
  2373  0008FA                     __end_of_utoa:
  2374                           	callstack 0
  2375                           
  2376 ;; *************** function ___lwmod *****************
  2377 ;; Defined at:
  2378 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  dividend        2    0[COMRAM] unsigned int 
  2381 ;;  divisor         2    2[COMRAM] unsigned int 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  counter         1    4[COMRAM] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  2    0[COMRAM] unsigned int 
  2386 ;; Registers used:
  2387 ;;		wreg, status,2, status,0
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2393 ;;      Params:         4       0       0       0
  2394 ;;      Locals:         1       0       0       0
  2395 ;;      Temps:          0       0       0       0
  2396 ;;      Totals:         5       0       0       0
  2397 ;;Total ram usage:        5 bytes
  2398 ;; Hardware stack levels used: 1
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		_utoa
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text15
  2407  00096E                     __ptext15:
  2408                           	callstack 0
  2409  00096E                     ___lwmod:
  2410                           	callstack 25
  2411  00096E  5003               	movf	___lwmod@divisor^0,w,c
  2412  000970  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2413  000972  B4D8               	btfsc	status,2,c
  2414  000974  EFBE  F004         	goto	i2u53_41
  2415  000978  EFC0  F004         	goto	i2u53_40
  2416  00097C                     i2u53_41:
  2417  00097C  EFE4  F004         	goto	i2l702
  2418  000980                     i2u53_40:
  2419  000980  0E01               	movlw	1
  2420  000982  6E05               	movwf	___lwmod@counter^0,c
  2421  000984  EFC8  F004         	goto	i2l1430
  2422  000988                     i2l1428:
  2423  000988  90D8               	bcf	status,0,c
  2424  00098A  3603               	rlcf	___lwmod@divisor^0,f,c
  2425  00098C  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2426  00098E  2A05               	incf	___lwmod@counter^0,f,c
  2427  000990                     i2l1430:
  2428  000990  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2429  000992  EFCD  F004         	goto	i2u54_41
  2430  000996  EFCF  F004         	goto	i2u54_40
  2431  00099A                     i2u54_41:
  2432  00099A  EFC4  F004         	goto	i2l1428
  2433  00099E                     i2u54_40:
  2434  00099E                     i2l1432:
  2435  00099E  5003               	movf	___lwmod@divisor^0,w,c
  2436  0009A0  5C01               	subwf	___lwmod@dividend^0,w,c
  2437  0009A2  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2438  0009A4  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2439  0009A6  A0D8               	btfss	status,0,c
  2440  0009A8  EFD8  F004         	goto	i2u55_41
  2441  0009AC  EFDA  F004         	goto	i2u55_40
  2442  0009B0                     i2u55_41:
  2443  0009B0  EFDE  F004         	goto	i2l1436
  2444  0009B4                     i2u55_40:
  2445  0009B4  5003               	movf	___lwmod@divisor^0,w,c
  2446  0009B6  5E01               	subwf	___lwmod@dividend^0,f,c
  2447  0009B8  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2448  0009BA  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2449  0009BC                     i2l1436:
  2450  0009BC  90D8               	bcf	status,0,c
  2451  0009BE  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2452  0009C0  3203               	rrcf	___lwmod@divisor^0,f,c
  2453  0009C2  2E05               	decfsz	___lwmod@counter^0,f,c
  2454  0009C4  EFCF  F004         	goto	i2l1432
  2455  0009C8                     i2l702:
  2456  0009C8  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2457  0009CC  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2458  0009D0  0012               	return		;funcret
  2459  0009D2                     __end_of___lwmod:
  2460                           	callstack 0
  2461                           
  2462 ;; *************** function ___lwdiv *****************
  2463 ;; Defined at:
  2464 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  dividend        2    0[COMRAM] unsigned int 
  2467 ;;  divisor         2    2[COMRAM] unsigned int 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  quotient        2    4[COMRAM] unsigned int 
  2470 ;;  counter         1    6[COMRAM] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  2    0[COMRAM] unsigned int 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2480 ;;      Params:         4       0       0       0
  2481 ;;      Locals:         3       0       0       0
  2482 ;;      Temps:          0       0       0       0
  2483 ;;      Totals:         7       0       0       0
  2484 ;;Total ram usage:        7 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; This function calls:
  2487 ;;		Nothing
  2488 ;; This function is called by:
  2489 ;;		_utoa
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text16
  2494  0008FA                     __ptext16:
  2495                           	callstack 0
  2496  0008FA                     ___lwdiv:
  2497                           	callstack 25
  2498  0008FA  0E00               	movlw	0
  2499  0008FC  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2500  0008FE  0E00               	movlw	0
  2501  000900  6E05               	movwf	___lwdiv@quotient^0,c
  2502  000902  5003               	movf	___lwdiv@divisor^0,w,c
  2503  000904  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2504  000906  B4D8               	btfsc	status,2,c
  2505  000908  EF88  F004         	goto	i2u50_41
  2506  00090C  EF8A  F004         	goto	i2u50_40
  2507  000910                     i2u50_41:
  2508  000910  EFB2  F004         	goto	i2l692
  2509  000914                     i2u50_40:
  2510  000914  0E01               	movlw	1
  2511  000916  6E07               	movwf	___lwdiv@counter^0,c
  2512  000918  EF92  F004         	goto	i2l1410
  2513  00091C                     i2l1408:
  2514  00091C  90D8               	bcf	status,0,c
  2515  00091E  3603               	rlcf	___lwdiv@divisor^0,f,c
  2516  000920  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2517  000922  2A07               	incf	___lwdiv@counter^0,f,c
  2518  000924                     i2l1410:
  2519  000924  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2520  000926  EF97  F004         	goto	i2u51_41
  2521  00092A  EF99  F004         	goto	i2u51_40
  2522  00092E                     i2u51_41:
  2523  00092E  EF8E  F004         	goto	i2l1408
  2524  000932                     i2u51_40:
  2525  000932                     i2l1412:
  2526  000932  90D8               	bcf	status,0,c
  2527  000934  3605               	rlcf	___lwdiv@quotient^0,f,c
  2528  000936  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2529  000938  5003               	movf	___lwdiv@divisor^0,w,c
  2530  00093A  5C01               	subwf	___lwdiv@dividend^0,w,c
  2531  00093C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2532  00093E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2533  000940  A0D8               	btfss	status,0,c
  2534  000942  EFA5  F004         	goto	i2u52_41
  2535  000946  EFA7  F004         	goto	i2u52_40
  2536  00094A                     i2u52_41:
  2537  00094A  EFAC  F004         	goto	i2l1420
  2538  00094E                     i2u52_40:
  2539  00094E  5003               	movf	___lwdiv@divisor^0,w,c
  2540  000950  5E01               	subwf	___lwdiv@dividend^0,f,c
  2541  000952  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2542  000954  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2543  000956  8005               	bsf	___lwdiv@quotient^0,0,c
  2544  000958                     i2l1420:
  2545  000958  90D8               	bcf	status,0,c
  2546  00095A  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2547  00095C  3203               	rrcf	___lwdiv@divisor^0,f,c
  2548  00095E  2E07               	decfsz	___lwdiv@counter^0,f,c
  2549  000960  EF99  F004         	goto	i2l1412
  2550  000964                     i2l692:
  2551  000964  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2552  000968  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2553  00096C  0012               	return		;funcret
  2554  00096E                     __end_of___lwdiv:
  2555                           	callstack 0
  2556                           
  2557 ;; *************** function ___wmul *****************
  2558 ;; Defined at:
  2559 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  multiplier      2    0[COMRAM] unsigned int 
  2562 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;  product         2    4[COMRAM] unsigned int 
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  2    0[COMRAM] unsigned int 
  2567 ;; Registers used:
  2568 ;;		wreg, status,2, status,0, prodl, prodh
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2574 ;;      Params:         4       0       0       0
  2575 ;;      Locals:         2       0       0       0
  2576 ;;      Temps:          0       0       0       0
  2577 ;;      Totals:         6       0       0       0
  2578 ;;Total ram usage:        6 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_ISR
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text17
  2588  000B6C                     __ptext17:
  2589                           	callstack 0
  2590  000B6C                     ___wmul:
  2591                           	callstack 27
  2592  000B6C  5001               	movf	___wmul@multiplier^0,w,c
  2593  000B6E  0203               	mulwf	___wmul@multiplicand^0,c
  2594  000B70  CFF3 F005          	movff	prodl,___wmul@product
  2595  000B74  CFF4 F006          	movff	prodh,___wmul@product+1
  2596  000B78  5001               	movf	___wmul@multiplier^0,w,c
  2597  000B7A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2598  000B7C  50F3               	movf	243,w,c
  2599  000B7E  2606               	addwf	(___wmul@product+1)^0,f,c
  2600  000B80  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2601  000B82  0203               	mulwf	___wmul@multiplicand^0,c
  2602  000B84  50F3               	movf	243,w,c
  2603  000B86  2606               	addwf	(___wmul@product+1)^0,f,c
  2604  000B88  C005  F001         	movff	___wmul@product,?___wmul
  2605  000B8C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2606  000B90  0012               	return		;funcret
  2607  000B92                     __end_of___wmul:
  2608                           	callstack 0
  2609                           
  2610                           	psect	rparam
  2611  0000                     
  2612                           	psect	temp
  2613  000041                     btemp:
  2614                           	callstack 0
  2615  000041                     	ds	1
  2616  0000                     int$flags	set	btemp
  2617  0000                     wtemp8	set	btemp+1
  2618  0000                     ttemp5	set	btemp+1
  2619  0000                     ttemp6	set	btemp+4
  2620  0000                     ttemp7	set	btemp+8
  2621                           
  2622                           	psect	idloc
  2623                           
  2624                           ;Config register IDLOC0 @ 0x200000
  2625                           ;	unspecified, using default values
  2626  200000                     	org	2097152
  2627  200000  FF                 	db	255
  2628                           
  2629                           ;Config register IDLOC1 @ 0x200001
  2630                           ;	unspecified, using default values
  2631  200001                     	org	2097153
  2632  200001  FF                 	db	255
  2633                           
  2634                           ;Config register IDLOC2 @ 0x200002
  2635                           ;	unspecified, using default values
  2636  200002                     	org	2097154
  2637  200002  FF                 	db	255
  2638                           
  2639                           ;Config register IDLOC3 @ 0x200003
  2640                           ;	unspecified, using default values
  2641  200003                     	org	2097155
  2642  200003  FF                 	db	255
  2643                           
  2644                           ;Config register IDLOC4 @ 0x200004
  2645                           ;	unspecified, using default values
  2646  200004                     	org	2097156
  2647  200004  FF                 	db	255
  2648                           
  2649                           ;Config register IDLOC5 @ 0x200005
  2650                           ;	unspecified, using default values
  2651  200005                     	org	2097157
  2652  200005  FF                 	db	255
  2653                           
  2654                           ;Config register IDLOC6 @ 0x200006
  2655                           ;	unspecified, using default values
  2656  200006                     	org	2097158
  2657  200006  FF                 	db	255
  2658                           
  2659                           ;Config register IDLOC7 @ 0x200007
  2660                           ;	unspecified, using default values
  2661  200007                     	org	2097159
  2662  200007  FF                 	db	255
  2663                           
  2664                           	psect	config
  2665                           
  2666                           ; Padding undefined space
  2667  300000                     	org	3145728
  2668  300000  FF                 	db	255
  2669                           
  2670                           ;Config register CONFIG1H @ 0x300001
  2671                           ;	Oscillator Selection bits
  2672                           ;	OSC = RC, 11XX External RC oscillator, CLKO function on RA6
  2673                           ;	Fail-Safe Clock Monitor Enable bit
  2674                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2675                           ;	Internal External Oscillator Switchover bit
  2676                           ;	IESO = ON, Internal External Switchover mode enabled
  2677  300001                     	org	3145729
  2678  300001  CC                 	db	204
  2679                           
  2680                           ;Config register CONFIG2L @ 0x300002
  2681                           ;	Power-up Timer Enable bit
  2682                           ;	PWRTEN = OFF, PWRT disabled
  2683                           ;	Brown-out Reset Enable bits
  2684                           ;	BOREN = ON, Brown-out Reset enabled
  2685                           ;	Brown Out Reset Voltage bits
  2686                           ;	BORV = 0x3, unprogrammed default
  2687  300002                     	org	3145730
  2688  300002  0F                 	db	15
  2689                           
  2690                           ;Config register CONFIG2H @ 0x300003
  2691                           ;	Watchdog Timer Enable bit
  2692                           ;	WDTEN = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2693                           ;	Watchdog Timer Postscale Select bits
  2694                           ;	WDPS = 32768, 1:32768
  2695                           ;	Watchdog Timer Window Enable bit
  2696                           ;	WINEN = OFF, WDT window disabled
  2697  300003                     	org	3145731
  2698  300003  3E                 	db	62
  2699                           
  2700                           ;Config register CONFIG3L @ 0x300004
  2701                           ;	PWM output pins Reset state control
  2702                           ;	PWMPIN = OFF, PWM outputs disabled upon Reset (default)
  2703                           ;	Low-Side Transistors Polarity
  2704                           ;	LPOL = HIGH, PWM0, 2, 4 and 6 are active-high
  2705                           ;	High-Side Transistors Polarity
  2706                           ;	HPOL = HIGH, PWM1, 3, 5 and 7 are active-high
  2707                           ;	Timer1 Oscillator MUX
  2708                           ;	T1OSCMX = ON, Low-power Timer1 operation when microcontroller is in Sleep mode
  2709  300004                     	org	3145732
  2710  300004  3C                 	db	60
  2711                           
  2712                           ;Config register CONFIG3H @ 0x300005
  2713                           ;	FLTA MUX bit
  2714                           ;	FLTAMX = RC1, FLTA input is multiplexed with RC1
  2715                           ;	SSP I/O MUX bit
  2716                           ;	SSPMX = RC7, SCK/SCL clocks and SDA/SDI data are multiplexed with RC5 and RC4, respect
      +                          ively. SDO output is multiplexed with RC7.
  2717                           ;	PWM4 MUX bit
  2718                           ;	PWM4MX = RB5, PWM4 output is multiplexed with RB5
  2719                           ;	TMR0/T5CKI External clock MUX bit
  2720                           ;	EXCLKMX = RC3, TMR0/T5CKI external clock input is multiplexed with RC3
  2721                           ;	MCLR Pin Enable bit
  2722                           ;	MCLRE = ON, Enabled
  2723  300005                     	org	3145733
  2724  300005  9D                 	db	157
  2725                           
  2726                           ;Config register CONFIG4L @ 0x300006
  2727                           ;	Stack Full/Underflow Reset Enable bit
  2728                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2729                           ;	Low-Voltage ICSP Enable bit
  2730                           ;	LVP = ON, Low-voltage ICSP enabled
  2731                           ;	Background Debugger Enable bit
  2732                           ;	DEBUG = 0x1, unprogrammed default
  2733  300006                     	org	3145734
  2734  300006  85                 	db	133
  2735                           
  2736                           ; Padding undefined space
  2737  300007                     	org	3145735
  2738  300007  FF                 	db	255
  2739                           
  2740                           ;Config register CONFIG5L @ 0x300008
  2741                           ;	Code Protection bit
  2742                           ;	CP0 = OFF, Block 0 (000200-000FFFh) not code-protected
  2743                           ;	Code Protection bit
  2744                           ;	CP1 = OFF, Block 1 (001000-001FFF) not code-protected
  2745                           ;	Code Protection bit
  2746                           ;	CP2 = OFF, Block 2 (002000-002FFFh) not code-protected
  2747                           ;	Code Protection bit
  2748                           ;	CP3 = OFF, Block 3 (003000-003FFFh) not code-protected
  2749  300008                     	org	3145736
  2750  300008  0F                 	db	15
  2751                           
  2752                           ;Config register CONFIG5H @ 0x300009
  2753                           ;	Boot Block Code Protection bit
  2754                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code-protected
  2755                           ;	Data EEPROM Code Protection bit
  2756                           ;	CPD = OFF, Data EEPROM not code-protected
  2757  300009                     	org	3145737
  2758  300009  C0                 	db	192
  2759                           
  2760                           ;Config register CONFIG6L @ 0x30000A
  2761                           ;	Write Protection bit
  2762                           ;	WRT0 = OFF, Block 0 (000200-000FFFh) not write-protected
  2763                           ;	Write Protection bit
  2764                           ;	WRT1 = OFF, Block 1 (001000-001FFF) not write-protected
  2765                           ;	Write Protection bit
  2766                           ;	WRT2 = OFF, Block 2 (002000-002FFFh) not write-protected
  2767                           ;	Write Protection bit
  2768                           ;	WRT3 = OFF, Block 3 (003000-003FFFh) not write-protected
  2769  30000A                     	org	3145738
  2770  30000A  0F                 	db	15
  2771                           
  2772                           ;Config register CONFIG6H @ 0x30000B
  2773                           ;	Configuration Register Write Protection bit
  2774                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2775                           ;	Boot Block Write Protection bit
  2776                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
  2777                           ;	Data EEPROM Write Protection bit
  2778                           ;	WRTD = OFF, Data EEPROM not write-protected
  2779  30000B                     	org	3145739
  2780  30000B  E0                 	db	224
  2781                           
  2782                           ;Config register CONFIG7L @ 0x30000C
  2783                           ;	Table Read Protection bit
  2784                           ;	EBTR0 = OFF, Block 0 (000200-000FFFh) not protected from table reads executed in other
      +                           blocks
  2785                           ;	Table Read Protection bit
  2786                           ;	EBTR1 = OFF, Block 1 (001000-001FFF) not protected from table reads executed in other 
      +                          blocks
  2787                           ;	Table Read Protection bit
  2788                           ;	EBTR2 = OFF, Block 2 (002000-002FFFh) not protected from table reads executed in other
      +                           blocks
  2789                           ;	Table Read Protection bit
  2790                           ;	EBTR3 = OFF, Block 3 (003000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2791  30000C                     	org	3145740
  2792  30000C  0F                 	db	15
  2793                           
  2794                           ;Config register CONFIG7H @ 0x30000D
  2795                           ;	Boot Block Table Read Protection bit
  2796                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
  2797  30000D                     	org	3145741
  2798  30000D  40                 	db	64
  2799                           tosu	equ	0xFFF
  2800                           tosh	equ	0xFFE
  2801                           tosl	equ	0xFFD
  2802                           stkptr	equ	0xFFC
  2803                           pclatu	equ	0xFFB
  2804                           pclath	equ	0xFFA
  2805                           pcl	equ	0xFF9
  2806                           tblptru	equ	0xFF8
  2807                           tblptrh	equ	0xFF7
  2808                           tblptrl	equ	0xFF6
  2809                           tablat	equ	0xFF5
  2810                           prodh	equ	0xFF4
  2811                           prodl	equ	0xFF3
  2812                           indf0	equ	0xFEF
  2813                           postinc0	equ	0xFEE
  2814                           postdec0	equ	0xFED
  2815                           preinc0	equ	0xFEC
  2816                           plusw0	equ	0xFEB
  2817                           fsr0h	equ	0xFEA
  2818                           fsr0l	equ	0xFE9
  2819                           wreg	equ	0xFE8
  2820                           indf1	equ	0xFE7
  2821                           postinc1	equ	0xFE6
  2822                           postdec1	equ	0xFE5
  2823                           preinc1	equ	0xFE4
  2824                           plusw1	equ	0xFE3
  2825                           fsr1h	equ	0xFE2
  2826                           fsr1l	equ	0xFE1
  2827                           bsr	equ	0xFE0
  2828                           indf2	equ	0xFDF
  2829                           postinc2	equ	0xFDE
  2830                           postdec2	equ	0xFDD
  2831                           preinc2	equ	0xFDC
  2832                           plusw2	equ	0xFDB
  2833                           fsr2h	equ	0xFDA
  2834                           fsr2l	equ	0xFD9
  2835                           status	equ	0xFD8

Data Sizes:
    Strings     2
    Constant    0
    Data        7
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      64
    BANK0           160     29      49
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    str	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(BANK0[20]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(BANK0[20]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(BANK0[20]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(BANK0[20]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(BANK0[20]), 


Critical Paths under _main in COMRAM

    _motorOutMSB->___fltol
    _motorOutLSB->___fltol
    ___fltol->___flmul

Critical Paths under _ISR in COMRAM

    _ISR->_itoa
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    _main->_motorOutMSB
    _motorOutMSB->___fltol
    _motorOutLSB->___fltol
    ___fltol->___flmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6798
                                             28 BANK0      1     1      0
                        _motorOutLSB
                        _motorOutMSB
                           _setupPWM
                           _setupQEI
                        _setupTimer0
                        _setupTimer5
                          _setupUART
 ---------------------------------------------------------------------------------
 (1) _setupUART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer5                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupQEI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0       0
                        _setupTimer2
 ---------------------------------------------------------------------------------
 (2) _setupTimer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorOutMSB                                          9     5      4    3399
                                             19 BANK0      9     5      4
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _motorOutLSB                                          7     3      4    3399
                                             19 BANK0      7     3      4
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             42 COMRAM     4     0      4
                                             13 BANK0      6     6      0
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2693
                                             30 COMRAM    12     4      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  8     8      0    2077
                                             22 COMRAM     8     8      0
                             ___wmul
                               _itoa
                            _tx_char
 ---------------------------------------------------------------------------------
 (4) _tx_char                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    1698
                                             16 COMRAM     6     0      6
                             ___wmul (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1307
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _motorOutLSB
     ___flmul
     ___fltol
       ___flmul (ARG)
   _motorOutMSB
     ___flmul
     ___fltol
   _setupPWM
     _setupTimer2
   _setupQEI
   _setupTimer0
   _setupTimer5
   _setupUART

 _ISR (ROOT)
   ___wmul
   _itoa
     ___wmul (ARG)
     _utoa (ARG)
       ___lwdiv
       ___lwmod
   _tx_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1D      31       5       30.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      40       1       68.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      71       3        0.0%
DATA                 0      0      71      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Nov 24 22:46:40 2021

                      _w 0040              _SSPSTATbits 000FC7                       _CS 007C22  
    ___wmul@multiplicand 0003                      l162 0BCA                      l165 0C22  
                    l502 0836                      l159 0BB0                      l192 0C2E  
                    l186 0BE2                      l195 0A90                      l189 0BF8  
                    l198 0ADC                      l822 05C0                      l815 03CA  
                    l832 06F0                      l824 0638                      l825 0626  
                    l819 072E                      _PR2 000FCB                      _ISR 0008  
                    u930 0320                      u931 031C                      u940 0332  
                    u941 032E                      u950 0342                      u951 033E  
                    u960 0382                      u961 037E                      u970 0394  
                    u971 0390                      u980 03A4                      u981 03A0  
                    u990 03DA                      u991 03D6                      _str 0033  
                    wreg 000FE8             ___flmul@aexp 0061             ___flmul@bexp 0066  
           ___flmul@sign 0060             ___flmul@temp 006B             ___flmul@prod 0067  
                   ?_ISR 0001                     ISR@i 001D             ___fltol@exp1 0072  
                   l1010 0C24                     l1012 0C28                     l1014 0C2A  
                   l1016 0C2C                     l1240 0B92                     l1250 0BA0  
                   l1242 0B96                     l1252 0BAA                     l1244 0B9A  
                   l1260 0C18                     l1236 0BCC                     l1270 0BE4  
                   l1254 0BAC                     l1246 0B9C                     l1262 0C20  
                   l1238 0BDE                     l1280 0BF2                     l1272 0BE8  
                   l1256 0BAE                     l1248 0B9E                     l1264 0BB2  
                   l1282 0BF4                     l1274 0BEC                     l1266 0BC0  
                   l1258 0C10                     l1284 0BF6                     l1276 0BEE  
                   l1268 0BC8                     l1278 0BF0                     l1800 0544  
                   l1810 05BE                     l1802 057A                     l1730 0322  
                   l1820 061E                     l1812 05D0                     l1804 0588  
                   l1740 0368                     l1732 0332                     l1724 0304  
                   l1900 0A74                     l1830 068C                     l1814 05DE  
                   l1806 05A6                     l1750 0394                     l1742 036E  
                   l1734 0342                     l1726 0312                     l1910 0ADA  
                   l1902 0A8E                     l1840 06F4                     l1824 0648  
                   l1832 0690                     l1816 05E2                     l1808 05B0  
                   l1760 03EA                     l1752 03A4                     l1744 0374  
                   l1736 0352                     l1728 0320                     l1920 0A06  
                   l1850 071E                     l1842 0704                     l1834 06AA  
                   l1826 0654                     l1818 05F0                     l1770 042A  
                   l1754 03B4                     l1746 0382                     l1738 0358  
                   l1906 0A92                     l1914 09D2                     l1844 0712  
                   l1836 06BE                     l1828 0662                     l1780 0474  
                   l1772 0436                     l1764 03FE                     l1756 03BA  
                   l1748 0384                     l1860 075C                     l1908 0AD2  
                   l1916 09DA                     l1846 0714                     l1838 06D8  
                   l1790 04C6                     l1782 0480                     l1774 044E  
                   l1766 040A                     l1758 03DA                     l1870 07AA  
                   l1862 0786                     l1854 0730                     l1918 09EE  
                   l1848 071A                     l1792 04D6                     l1784 0490  
                   l1776 045A                     l1768 0414                     l1880 07D6  
                   l1864 0788                     l1856 0748                     l1794 04F2  
                   l1786 049C                     l1778 0466                     l1890 0806  
                   l1866 0798                     l1796 04FE                     l1788 04AC  
                   l1892 0816                     l1876 07C2                     l1868 079C  
                   l1798 051A                     l1894 0826                     l1886 07EA  
                   l1878 07CC                     l1888 07F6                     l1898 0A34  
                   STR_1 0301                     u1000 03EA                     u1001 03E6  
                   u1010 0564                     u1100 06D8                     u1020 05BE  
                   u1101 06D4                     u1021 05BA                     u1110 0712  
                   u1030 05DE                     u1111 070E                     u1031 05DA  
                   u1015 055A                     u1040 05F0                     u1120 0748  
                   u1041 05EC                     u1121 0744                     u1050 061E  
                   u1130 077C                     u1051 061A                     u1060 0634  
                   u1140 07AA                     u1061 0630                     u1141 07A6  
                   u1070 0648                     u1150 07BE                     u1071 0644  
                   u1151 07BA                     u1135 0772                     u1080 0662  
                   u1160 07E6                     u1081 065E                     u1161 07E2  
                   u1090 06AA                     u1170 0806                     u1091 06A6  
                   u1171 0802                     u1180 0816                     u1181 0812  
                   _RCIF 007CF5                     _TMR0 000FD6                     _TMR5 000F87  
                   _TRMT 007D61                     _main 09D2                     _itoa 0B28  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0041                     _utoa 0838  
                   prodh 000FF4                     prodl 000FF3                     start 012C  
           ___param_bank 000000                    ??_ISR 0017            ___fltol@sign1 0071  
                  ?_main 0001                    ?_itoa 0011          __end_of___flmul 0730  
        __end_of___fltol 0838                    ?_utoa 0008                    _T2CON 000FCA  
        __end_of___lwdiv 096E          __end_of___lwmod 09D2                    i2l210 0C0E  
                  i2l213 0B90                    i2l207 0C00                    i2l148 0118  
                  i2l702 09C8                    i2l709 09D0                    i2l692 0964  
                  i2l699 096C                    i2l884 08CC                    i2l886 08F8  
                  i2l878 0B6A                    _RCREG 000FAE                    _SPBRG 000FAF  
                  _TXREG 000FAD                    _digit 0039                    _count 0037  
                  _speed 0031                    tablat 000FF5                    ttemp5 0042  
                  ttemp6 0045                    ttemp7 0049                    utoa@c 0010  
        __end_of_tx_char 0C10                    utoa@v 000E                    status 000FD8  
                  wtemp8 0042             _stringBuffer 007D          __initialization 0ADE  
           __end_of_main 0A34             __end_of_itoa 0B6C             __end_of_utoa 08FA  
                 ??_main 007C                   ??_itoa 0017                   ??_utoa 000E  
          __activetblptr 000001                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _CCPR1L 000FBE                   i2l1410 0924                   i2l1402 08FA  
                 i2l1420 0958                   i2l1412 0932                   i2l1404 0902  
                 i2l1422 095E                   i2l1414 0938                   i2l1406 0914  
                 i2l1430 0990                   i2l1416 094E                   i2l1408 091C  
                 i2l1432 099E                   i2l1424 096E                   i2l1418 0956  
                 i2l1434 09B4                   i2l1426 0980                   i2l1436 09BC  
                 i2l1428 0988                   i2l1620 0860                   i2l1700 009A  
                 i2l1438 09C2                   i2l1630 08B8                   i2l1622 0872  
                 i2l1614 0838                   i2l1710 0108                   i2l1702 00CA  
                 i2l1640 08F4                   i2l1632 08C8                   i2l1624 087E  
                 i2l1616 0840                   i2l1712 010E                   i2l1704 00D6  
                 i2l1634 08D0                   i2l1626 0884                   i2l1618 085C  
                 i2l1650 0B46                   i2l1706 00E8                   i2l1714 0116  
                 i2l1636 08DC                   i2l1628 089C                   i2l1652 0B4E  
                 i2l1644 0B28                   i2l1708 00EC                   i2l1638 08E2  
                 i2l1646 0B36                   i2l1648 0B42                   i2l1656 0BFC  
                 i2l1680 001A                   i2l1674 0B6C                   i2l1690 004A  
                 i2l1682 0028                   i2l1676 0B88                   i2l1692 004E  
                 i2l1684 0036                   i2l1694 0060                   i2l1686 003A  
                 i2l1696 0068                   i2l1688 003C                   i2l1698 0092  
                 _SSPBUF 000FC9                   ___wmul 0B6C                ??___flmul 0027  
              ??___fltol 006D                ??___lwdiv 0005                ??___lwmod 0005  
                 _count2 0035             ?_motorOutLSB 0073             ?_motorOutMSB 0073  
                 clear_0 0B04                   clear_1 0B10                   isa$std 000001  
                 _number 003E             __pdataCOMRAM 003A         __end_of_setupQEI 0BB2  
       __end_of_setupPWM 0BFA             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_tx_char 0001  
           ?_setupTimer0 0001             ?_setupTimer2 0001             ?_setupTimer5 0001  
             __accesstop 0060  __end_of__initialization 0B16            ___rparam_used 000001  
             ___fltol@f1 002B           __pcstackCOMRAM 0001               __pbssBANK0 007D  
        motorOutLSB@duty 0073                  ?___wmul 0001          motorOutMSB@duty 0073  
                _IC2QEIE 007D1A                  _IC2QEIF 007D22        motorOutLSB@buffer 0077  
      motorOutMSB@buffer 0079       __size_of_setupUART 0018                  i2u50_40 0914  
                i2u50_41 0910                  i2u51_40 0932                  i2u51_41 092E  
                i2u52_40 094E                  i2u52_41 094A                  i2u53_40 0980  
                i2u53_41 097C                  i2u54_40 099E                  i2u54_41 099A  
                i2u55_40 09B4                  i2u55_41 09B0                  i2u82_40 0872  
                i2u90_40 0060                  i2u82_41 086E                  i2u90_41 005C  
                i2u83_40 08C8                  i2u91_40 007A                  i2u83_41 08C4  
                i2u91_41 0072                  i2u84_40 08F4                  i2u92_40 0108  
                i2u91_48 007C                  i2u84_41 08F0                  i2u92_41 0104  
                i2u85_40 0B36                  i2u85_41 0B32                  i2u86_40 0C0E  
                i2u86_41 0C0A                  i2u87_40 0028                  i2u87_41 0024  
                i2u88_40 0036                  i2u88_41 0032                  i2u89_40 004A  
                i2u89_41 0046                  _SSPCON1 000FC6                  _SSPSTAT 000FC7  
                __Hparam 0000                  __Lparam 0000                ?_setupQEI 0001  
              ?_setupPWM 0001                  ___flmul 0304                  ___fltol 0730  
        __size_of___wmul 0026                  ___lwdiv 08FA                  ___lwmod 096E  
           __psmallconst 0300                  __pcinit 0ADE                  __ramtop 0300  
                __ptext0 09D2                  __ptext1 0BCC                  __ptext2 0C10  
                __ptext3 0BB2                  __ptext4 0B92                  __ptext5 0BE4  
                __ptext6 0C24                  __ptext7 0A34                  __ptext8 0A92  
                __ptext9 0730     __size_of_motorOutLSB 004C     __size_of_motorOutMSB 005E  
              _T0CONbits 000FD5             __size_of_ISR 0124                _T2CONbits 000FCA  
              _T5CONbits 000FB7                  _tx_char 0BFA     end_of_initialization 0B16  
   __size_of_setupTimer0 001A     __size_of_setupTimer2 000C     __size_of_setupTimer5 0014  
                itoa@buf 0011                  itoa@val 0013        __end_of_setupUART 0BE4  
             ??_setupQEI 001F                _RCSTAbits 000FAB               ??_setupPWM 001F  
                postdec1 000FE5                  postinc0 000FEE                  utoa@buf 0008  
                utoa@val 000A                _PORTBbits 000F81                _PORTCbits 000F82  
              _TRISBbits 000F93                _TRISCbits 000F94                _TRISDbits 000F95  
            ___flmul@grs 0062              _CCP1CONbits 000FBD                _TXSTAbits 000FAC  
         __end_of___wmul 0B92            __pidataCOMRAM 0C30      start_initialization 0ADE  
            __end_of_ISR 012C    motorOutLSB@bufferChar 0079                 ??___wmul 0005  
            _DFLTCONbits 000F60                ___flmul@a 0023                ___flmul@b 001F  
            __pbssCOMRAM 002F            __pcstackBANK0 0060         ___lwdiv@dividend 0001  
              __pintcode 0008                 ?___flmul 001F                 ?___fltol 002B  
               ?___lwdiv 0001                 ?___lwmod 0001        __size_of_setupQEI 0020  
      __size_of_setupPWM 0016                 _CAP3BUFH 000F65                 _CAP3BUFL 000F64  
            __smallconst 0300         ___lwdiv@quotient 0005                 ?_tx_char 0001  
  motorOutMSB@bufferChar 007B           ___wmul@product 0005                 _PIE1bits 000F9D  
               _PIE3bits 000FA3                 _PIR1bits 000F9E                _pre_speed 002F  
              _setupUART 0BCC            ??_motorOutLSB 002F            ??_motorOutMSB 0077  
      ___wmul@multiplier 0001            ??_setupTimer0 001F            ??_setupTimer2 001F  
          ??_setupTimer5 001F                copy_data0 0AF2                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0300               ?_setupUART 0001  
       __size_of___flmul 042C         __size_of___fltol 0108         __size_of___lwdiv 0074  
       _RPM_CONSTANT_QEI 003A         __size_of___lwmod 0064      __end_of_motorOutLSB 0ADE  
    __end_of_motorOutMSB 0A92          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 0304                 __ptext12 0BFA                 __ptext13 0B28  
               __ptext14 0838                 __ptext15 096E                 __ptext16 08FA  
               __ptext17 0B6C         __size_of_tx_char 0016            __size_of_main 0062  
          __size_of_itoa 0044            __size_of_utoa 00C2      __end_of_setupTimer0 0BCC  
    __end_of_setupTimer2 0C30      __end_of_setupTimer5 0C24                 isa$xinst 000000  
               _setupQEI 0B92                 _setupPWM 0BE4                 int$flags 0041  
             _INTCONbits 000FF2               _QEICONbits 000FB6                 itoa@base 0015  
               intlevel2 0000         ___lwmod@dividend 0001              ??_setupUART 001F  
            _motorOutLSB 0A92              _motorOutMSB 0A34                 tx_char@a 0001  
               utoa@base 000C          ___lwmod@divisor 0003          ___lwmod@counter 0005  
            _SSPCON1bits 000FC6              _setupTimer0 0BB2              _setupTimer2 0C24  
            _setupTimer5 0C10  
