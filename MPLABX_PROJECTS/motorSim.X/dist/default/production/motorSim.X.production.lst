

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 15 13:03:27 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4431 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _TMR0	set	4054
    54  0000                     _TXREG	set	4013
    55  0000                     _RCREG	set	4014
    56  0000                     _SPBRG	set	4015
    57  0000                     _PIE1bits	set	3997
    58  0000                     _RCSTAbits	set	4011
    59  0000                     _TXSTAbits	set	4012
    60  0000                     _TRISCbits	set	3988
    61  0000                     _T0CONbits	set	4053
    62  0000                     _TRISD	set	3989
    63  0000                     _PORTD	set	3971
    64  0000                     _INTCONbits	set	4082
    65  0000                     _TRMT	set	32097
    66  0000                     _RCIF	set	31989
    67                           
    68                           ; #config settings
    69                           
    70                           	psect	cinit
    71  0000A0                     __pcinit:
    72                           	callstack 0
    73  0000A0                     start_initialization:
    74                           	callstack 0
    75  0000A0                     __initialization:
    76                           	callstack 0
    77                           
    78                           ; Clear objects allocated to COMRAM (23 bytes)
    79  0000A0  EE00  F001         	lfsr	0,__pbssCOMRAM
    80  0000A4  0E17               	movlw	23
    81  0000A6                     clear_0:
    82  0000A6  6AEE               	clrf	postinc0,c
    83  0000A8  06E8               	decf	wreg,f,c
    84  0000AA  E1FD               	bnz	clear_0
    85  0000AC                     end_of_initialization:
    86                           	callstack 0
    87  0000AC                     __end_of__initialization:
    88                           	callstack 0
    89  0000AC  9018               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    90  0000AE  9218               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    91  0000B0  0100               	movlb	0
    92  0000B2  EF38  F000         	goto	_main	;jump to C main() function
    93                           
    94                           	psect	bssCOMRAM
    95  000001                     __pbssCOMRAM:
    96                           	callstack 0
    97  000001                     _stringBuffer:
    98                           	callstack 0
    99  000001                     	ds	20
   100  000015                     _count:
   101                           	callstack 0
   102  000015                     	ds	2
   103  000017                     _speed:
   104                           	callstack 0
   105  000017                     	ds	1
   106                           
   107                           	psect	cstackCOMRAM
   108  000000                     __pcstackCOMRAM:
   109                           	callstack 0
   110  000000                     
   111                           ; 1 bytes @ 0x0
   112 ;;
   113 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   114 ;;
   115 ;; *************** function _main *****************
   116 ;; Defined at:
   117 ;;		line 109 in file "motorSim.c"
   118 ;; Parameters:    Size  Location     Type
   119 ;;		None
   120 ;; Auto vars:     Size  Location     Type
   121 ;;		None
   122 ;; Return value:  Size  Location     Type
   123 ;;                  1    wreg      void 
   124 ;; Registers used:
   125 ;;		wreg, status,2, cstack
   126 ;; Tracked objects:
   127 ;;		On entry : 0/0
   128 ;;		On exit  : 0/0
   129 ;;		Unchanged: 0/0
   130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   131 ;;      Params:         0       0       0       0
   132 ;;      Locals:         0       0       0       0
   133 ;;      Temps:          0       0       0       0
   134 ;;      Totals:         0       0       0       0
   135 ;;Total ram usage:        0 bytes
   136 ;; Hardware stack levels required when called: 3
   137 ;; This function calls:
   138 ;;		_setupTimer0
   139 ;;		_setupUART
   140 ;; This function is called by:
   141 ;;		Startup code after reset
   142 ;; This function uses a non-reentrant model
   143 ;;
   144                           
   145                           	psect	text0
   146  000070                     __ptext0:
   147                           	callstack 0
   148  000070                     _main:
   149                           	callstack 28
   150  000070                     
   151                           ;motorSim.c: 110: TRISD = 0x00;
   152  000070  0E00               	movlw	0
   153  000072  6E95               	movwf	149,c	;volatile
   154  000074                     
   155                           ;motorSim.c: 111: INTCONbits.GIE = 1; INTCONbits.PEIE = 1;
   156  000074  8EF2               	bsf	242,7,c	;volatile
   157  000076  8CF2               	bsf	242,6,c	;volatile
   158  000078                     
   159                           ;motorSim.c: 112: setupUART();
   160  000078  EC44  F000         	call	_setupUART	;wreg free
   161  00007C                     
   162                           ;motorSim.c: 113: setupTimer0();
   163  00007C  EC2B  F000         	call	_setupTimer0	;wreg free
   164  000080                     l53:
   165  000080  EF40  F000         	goto	l53
   166  000084  EF29  F000         	goto	start
   167  000088                     __end_of_main:
   168                           	callstack 0
   169                           
   170 ;; *************** function _setupUART *****************
   171 ;; Defined at:
   172 ;;		line 135 in file "motorSim.c"
   173 ;; Parameters:    Size  Location     Type
   174 ;;		None
   175 ;; Auto vars:     Size  Location     Type
   176 ;;		None
   177 ;; Return value:  Size  Location     Type
   178 ;;                  1    wreg      void 
   179 ;; Registers used:
   180 ;;		wreg, status,2
   181 ;; Tracked objects:
   182 ;;		On entry : 0/0
   183 ;;		On exit  : 0/0
   184 ;;		Unchanged: 0/0
   185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   186 ;;      Params:         0       0       0       0
   187 ;;      Locals:         0       0       0       0
   188 ;;      Temps:          0       0       0       0
   189 ;;      Totals:         0       0       0       0
   190 ;;Total ram usage:        0 bytes
   191 ;; Hardware stack levels used: 1
   192 ;; Hardware stack levels required when called: 2
   193 ;; This function calls:
   194 ;;		Nothing
   195 ;; This function is called by:
   196 ;;		_main
   197 ;; This function uses a non-reentrant model
   198 ;;
   199                           
   200                           	psect	text1
   201  000088                     __ptext1:
   202                           	callstack 0
   203  000088                     _setupUART:
   204                           	callstack 28
   205  000088                     
   206                           ;motorSim.c: 136: TRISCbits.RC6 = 0;
   207  000088  9C94               	bcf	148,6,c	;volatile
   208                           
   209                           ;motorSim.c: 137: TRISCbits.RC7 = 1;
   210  00008A  8E94               	bsf	148,7,c	;volatile
   211                           
   212                           ;motorSim.c: 138: TXSTAbits.BRGH = 0;
   213  00008C  94AC               	bcf	172,2,c	;volatile
   214                           
   215                           ;motorSim.c: 139: TXSTAbits.SYNC = 0;
   216  00008E  98AC               	bcf	172,4,c	;volatile
   217                           
   218                           ;motorSim.c: 140: TXSTAbits.TXEN = 1;
   219  000090  8AAC               	bsf	172,5,c	;volatile
   220                           
   221                           ;motorSim.c: 141: RCSTAbits.SPEN = 1;
   222  000092  8EAB               	bsf	171,7,c	;volatile
   223                           
   224                           ;motorSim.c: 142: RCSTAbits.CREN = 1;
   225  000094  88AB               	bsf	171,4,c	;volatile
   226                           
   227                           ;motorSim.c: 143: PIE1bits.RCIE = 1;
   228  000096  8A9D               	bsf	157,5,c	;volatile
   229                           
   230                           ;motorSim.c: 144: PIE1bits.TXIE = 0;
   231  000098  989D               	bcf	157,4,c	;volatile
   232  00009A                     
   233                           ;motorSim.c: 145: SPBRG = 31;
   234  00009A  0E1F               	movlw	31
   235  00009C  6EAF               	movwf	175,c	;volatile
   236  00009E  0012               	return		;funcret
   237  0000A0                     __end_of_setupUART:
   238                           	callstack 0
   239                           
   240 ;; *************** function _setupTimer0 *****************
   241 ;; Defined at:
   242 ;;		line 120 in file "motorSim.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, status,2
   251 ;; Tracked objects:
   252 ;;		On entry : 0/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   256 ;;      Params:         0       0       0       0
   257 ;;      Locals:         0       0       0       0
   258 ;;      Temps:          0       0       0       0
   259 ;;      Totals:         0       0       0       0
   260 ;;Total ram usage:        0 bytes
   261 ;; Hardware stack levels used: 1
   262 ;; Hardware stack levels required when called: 2
   263 ;; This function calls:
   264 ;;		Nothing
   265 ;; This function is called by:
   266 ;;		_main
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270                           	psect	text2
   271  000056                     __ptext2:
   272                           	callstack 0
   273  000056                     _setupTimer0:
   274                           	callstack 28
   275  000056                     
   276                           ;motorSim.c: 121: INTCONbits.TMR0IE = 1;
   277  000056  8AF2               	bsf	242,5,c	;volatile
   278                           
   279                           ;motorSim.c: 122: T0CONbits.T016BIT = 1;
   280  000058  8CD5               	bsf	213,6,c	;volatile
   281                           
   282                           ;motorSim.c: 123: T0CONbits.T0CS = 0;
   283  00005A  9AD5               	bcf	213,5,c	;volatile
   284                           
   285                           ;motorSim.c: 127: T0CONbits.PSA = 1;
   286  00005C  86D5               	bsf	213,3,c	;volatile
   287                           
   288                           ;motorSim.c: 128: T0CONbits.T0PS2 = 0;
   289  00005E  94D5               	bcf	213,2,c	;volatile
   290                           
   291                           ;motorSim.c: 129: T0CONbits.T0PS1 = 0;
   292  000060  92D5               	bcf	213,1,c	;volatile
   293                           
   294                           ;motorSim.c: 130: T0CONbits.T0PS0 = 0;
   295  000062  90D5               	bcf	213,0,c	;volatile
   296  000064                     
   297                           ;motorSim.c: 131: TMR0 = 250;
   298  000064  0E00               	movlw	0
   299  000066  6ED7               	movwf	215,c	;volatile
   300  000068  0EFA               	movlw	250
   301  00006A  6ED6               	movwf	214,c	;volatile
   302  00006C                     
   303                           ;motorSim.c: 132: T0CONbits.TMR0ON = 1;
   304  00006C  8ED5               	bsf	213,7,c	;volatile
   305  00006E  0012               	return		;funcret
   306  000070                     __end_of_setupTimer0:
   307                           	callstack 0
   308                           
   309 ;; *************** function _ISR *****************
   310 ;; Defined at:
   311 ;;		line 96 in file "motorSim.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;		None
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, status,2, status,0, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   325 ;;      Params:         0       0       0       0
   326 ;;      Locals:         0       0       0       0
   327 ;;      Temps:          0       0       0       0
   328 ;;      Totals:         0       0       0       0
   329 ;;Total ram usage:        0 bytes
   330 ;; Hardware stack levels used: 1
   331 ;; Hardware stack levels required when called: 1
   332 ;; This function calls:
   333 ;;		_rx_char
   334 ;; This function is called by:
   335 ;;		Interrupt level 2
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           	psect	intcode
   340  000008                     __pintcode:
   341                           	callstack 0
   342  000008                     _ISR:
   343                           	callstack 28
   344                           
   345                           ;incstack = 0
   346  000008  8218               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   347  00000A                     
   348                           ;motorSim.c: 97: if(RCIF == 1) {
   349  00000A  AA9E               	btfss	3998,5,c	;volatile
   350  00000C  EF0A  F000         	goto	i2u2_41
   351  000010  EF0C  F000         	goto	i2u2_40
   352  000014                     i2u2_41:
   353  000014  EF0F  F000         	goto	i2l842
   354  000018                     i2u2_40:
   355  000018                     
   356                           ;motorSim.c: 98: speed = rx_char();
   357  000018  EC5B  F000         	call	_rx_char	;wreg free
   358  00001C  6E17               	movwf	_speed^0,c
   359  00001E                     i2l842:
   360                           
   361                           ;motorSim.c: 99: };motorSim.c: 100: if(INTCONbits.TMR0IF == 1) {
   362  00001E  A4F2               	btfss	242,2,c	;volatile
   363  000020  EF14  F000         	goto	i2u3_41
   364  000024  EF16  F000         	goto	i2u3_40
   365  000028                     i2u3_41:
   366  000028  EF27  F000         	goto	i2l48
   367  00002C                     i2u3_40:
   368  00002C                     
   369                           ;motorSim.c: 101: count++;
   370  00002C  4A15               	infsnz	_count^0,f,c
   371  00002E  2A16               	incf	(_count+1)^0,f,c
   372  000030                     
   373                           ;motorSim.c: 102: if (count == 1) {
   374  000030  0415               	decf	_count^0,w,c
   375  000032  1016               	iorwf	(_count+1)^0,w,c
   376  000034  A4D8               	btfss	status,2,c
   377  000036  EF1F  F000         	goto	i2u4_41
   378  00003A  EF21  F000         	goto	i2u4_40
   379  00003E                     i2u4_41:
   380  00003E  EF27  F000         	goto	i2l48
   381  000042                     i2u4_40:
   382  000042                     
   383                           ;motorSim.c: 103: PORTD = speed;
   384  000042  C017  FF83         	movff	_speed,3971	;volatile
   385  000046                     
   386                           ;motorSim.c: 104: count = 0;
   387  000046  0E00               	movlw	0
   388  000048  6E16               	movwf	(_count+1)^0,c
   389  00004A  0E00               	movlw	0
   390  00004C  6E15               	movwf	_count^0,c
   391  00004E                     i2l48:
   392  00004E  9218               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   393  000050  0011               	retfie		f
   394  000052                     __end_of_ISR:
   395                           	callstack 0
   396                           
   397 ;; *************** function _rx_char *****************
   398 ;; Defined at:
   399 ;;		line 148 in file "motorSim.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      unsigned char 
   406 ;; Registers used:
   407 ;;		wreg, status,2
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   413 ;;      Params:         0       0       0       0
   414 ;;      Locals:         0       0       0       0
   415 ;;      Temps:          0       0       0       0
   416 ;;      Totals:         0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels used: 1
   419 ;; This function calls:
   420 ;;		Nothing
   421 ;; This function is called by:
   422 ;;		_ISR
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           	psect	text4
   427  0000B6                     __ptext4:
   428                           	callstack 0
   429  0000B6                     _rx_char:
   430                           	callstack 28
   431  0000B6                     i2l65:
   432  0000B6  AA9E               	btfss	3998,5,c	;volatile
   433  0000B8  EF60  F000         	goto	i2u1_41
   434  0000BC  EF62  F000         	goto	i2u1_40
   435  0000C0                     i2u1_41:
   436  0000C0  EF5B  F000         	goto	i2l65
   437  0000C4                     i2u1_40:
   438  0000C4                     
   439                           ;motorSim.c: 150: return RCREG;
   440  0000C4  50AE               	movf	174,w,c	;volatile
   441  0000C6  0012               	return		;funcret
   442  0000C8                     __end_of_rx_char:
   443                           	callstack 0
   444  0000                     
   445                           	psect	rparam
   446  0000                     
   447                           	psect	temp
   448  000018                     btemp:
   449                           	callstack 0
   450  000018                     	ds	1
   451  0000                     int$flags	set	btemp
   452  0000                     wtemp8	set	btemp+1
   453  0000                     ttemp5	set	btemp+1
   454  0000                     ttemp6	set	btemp+4
   455  0000                     ttemp7	set	btemp+8
   456                           
   457                           	psect	idloc
   458                           
   459                           ;Config register IDLOC0 @ 0x200000
   460                           ;	unspecified, using default values
   461  200000                     	org	2097152
   462  200000  FF                 	db	255
   463                           
   464                           ;Config register IDLOC1 @ 0x200001
   465                           ;	unspecified, using default values
   466  200001                     	org	2097153
   467  200001  FF                 	db	255
   468                           
   469                           ;Config register IDLOC2 @ 0x200002
   470                           ;	unspecified, using default values
   471  200002                     	org	2097154
   472  200002  FF                 	db	255
   473                           
   474                           ;Config register IDLOC3 @ 0x200003
   475                           ;	unspecified, using default values
   476  200003                     	org	2097155
   477  200003  FF                 	db	255
   478                           
   479                           ;Config register IDLOC4 @ 0x200004
   480                           ;	unspecified, using default values
   481  200004                     	org	2097156
   482  200004  FF                 	db	255
   483                           
   484                           ;Config register IDLOC5 @ 0x200005
   485                           ;	unspecified, using default values
   486  200005                     	org	2097157
   487  200005  FF                 	db	255
   488                           
   489                           ;Config register IDLOC6 @ 0x200006
   490                           ;	unspecified, using default values
   491  200006                     	org	2097158
   492  200006  FF                 	db	255
   493                           
   494                           ;Config register IDLOC7 @ 0x200007
   495                           ;	unspecified, using default values
   496  200007                     	org	2097159
   497  200007  FF                 	db	255
   498                           
   499                           	psect	config
   500                           
   501                           ; Padding undefined space
   502  300000                     	org	3145728
   503  300000  FF                 	db	255
   504                           
   505                           ;Config register CONFIG1H @ 0x300001
   506                           ;	Oscillator Selection bits
   507                           ;	OSC = RC, 11XX External RC oscillator, CLKO function on RA6
   508                           ;	Fail-Safe Clock Monitor Enable bit
   509                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   510                           ;	Internal External Oscillator Switchover bit
   511                           ;	IESO = ON, Internal External Switchover mode enabled
   512  300001                     	org	3145729
   513  300001  CC                 	db	204
   514                           
   515                           ;Config register CONFIG2L @ 0x300002
   516                           ;	Power-up Timer Enable bit
   517                           ;	PWRTEN = OFF, PWRT disabled
   518                           ;	Brown-out Reset Enable bits
   519                           ;	BOREN = ON, Brown-out Reset enabled
   520                           ;	Brown Out Reset Voltage bits
   521                           ;	BORV = 0x3, unprogrammed default
   522  300002                     	org	3145730
   523  300002  0F                 	db	15
   524                           
   525                           ;Config register CONFIG2H @ 0x300003
   526                           ;	Watchdog Timer Enable bit
   527                           ;	WDTEN = OFF, WDT disabled (control is placed on the SWDTEN bit)
   528                           ;	Watchdog Timer Postscale Select bits
   529                           ;	WDPS = 32768, 1:32768
   530                           ;	Watchdog Timer Window Enable bit
   531                           ;	WINEN = OFF, WDT window disabled
   532  300003                     	org	3145731
   533  300003  3E                 	db	62
   534                           
   535                           ;Config register CONFIG3L @ 0x300004
   536                           ;	PWM output pins Reset state control
   537                           ;	PWMPIN = OFF, PWM outputs disabled upon Reset (default)
   538                           ;	Low-Side Transistors Polarity
   539                           ;	LPOL = HIGH, PWM0, 2, 4 and 6 are active-high
   540                           ;	High-Side Transistors Polarity
   541                           ;	HPOL = HIGH, PWM1, 3, 5 and 7 are active-high
   542                           ;	Timer1 Oscillator MUX
   543                           ;	T1OSCMX = ON, Low-power Timer1 operation when microcontroller is in Sleep mode
   544  300004                     	org	3145732
   545  300004  3C                 	db	60
   546                           
   547                           ;Config register CONFIG3H @ 0x300005
   548                           ;	FLTA MUX bit
   549                           ;	FLTAMX = RC1, FLTA input is multiplexed with RC1
   550                           ;	SSP I/O MUX bit
   551                           ;	SSPMX = RD1, SCK/SCL clocks and SDA/SDI data are multiplexed with RD3 and RD2, respect
      +                          ively. SDO output is multiplexed with RD1.
   552                           ;	PWM4 MUX bit
   553                           ;	PWM4MX = RB5, PWM4 output is multiplexed with RB5
   554                           ;	TMR0/T5CKI External clock MUX bit
   555                           ;	EXCLKMX = RC3, TMR0/T5CKI external clock input is multiplexed with RC3
   556                           ;	MCLR Pin Enable bit
   557                           ;	MCLRE = ON, Enabled
   558  300005                     	org	3145733
   559  300005  99                 	db	153
   560                           
   561                           ;Config register CONFIG4L @ 0x300006
   562                           ;	Stack Full/Underflow Reset Enable bit
   563                           ;	STVREN = ON, Stack full/underflow will cause Reset
   564                           ;	Low-Voltage ICSP Enable bit
   565                           ;	LVP = ON, Low-voltage ICSP enabled
   566                           ;	Background Debugger Enable bit
   567                           ;	DEBUG = 0x1, unprogrammed default
   568  300006                     	org	3145734
   569  300006  85                 	db	133
   570                           
   571                           ; Padding undefined space
   572  300007                     	org	3145735
   573  300007  FF                 	db	255
   574                           
   575                           ;Config register CONFIG5L @ 0x300008
   576                           ;	Code Protection bit
   577                           ;	CP0 = OFF, Block 0 (000200-000FFFh) not code-protected
   578                           ;	Code Protection bit
   579                           ;	CP1 = OFF, Block 1 (001000-001FFF) not code-protected
   580                           ;	Code Protection bit
   581                           ;	CP2 = OFF, Block 2 (002000-002FFFh) not code-protected
   582                           ;	Code Protection bit
   583                           ;	CP3 = OFF, Block 3 (003000-003FFFh) not code-protected
   584  300008                     	org	3145736
   585  300008  0F                 	db	15
   586                           
   587                           ;Config register CONFIG5H @ 0x300009
   588                           ;	Boot Block Code Protection bit
   589                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code-protected
   590                           ;	Data EEPROM Code Protection bit
   591                           ;	CPD = OFF, Data EEPROM not code-protected
   592  300009                     	org	3145737
   593  300009  C0                 	db	192
   594                           
   595                           ;Config register CONFIG6L @ 0x30000A
   596                           ;	Write Protection bit
   597                           ;	WRT0 = OFF, Block 0 (000200-000FFFh) not write-protected
   598                           ;	Write Protection bit
   599                           ;	WRT1 = OFF, Block 1 (001000-001FFF) not write-protected
   600                           ;	Write Protection bit
   601                           ;	WRT2 = OFF, Block 2 (002000-002FFFh) not write-protected
   602                           ;	Write Protection bit
   603                           ;	WRT3 = OFF, Block 3 (003000-003FFFh) not write-protected
   604  30000A                     	org	3145738
   605  30000A  0F                 	db	15
   606                           
   607                           ;Config register CONFIG6H @ 0x30000B
   608                           ;	Configuration Register Write Protection bit
   609                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   610                           ;	Boot Block Write Protection bit
   611                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
   612                           ;	Data EEPROM Write Protection bit
   613                           ;	WRTD = OFF, Data EEPROM not write-protected
   614  30000B                     	org	3145739
   615  30000B  E0                 	db	224
   616                           
   617                           ;Config register CONFIG7L @ 0x30000C
   618                           ;	Table Read Protection bit
   619                           ;	EBTR0 = OFF, Block 0 (000200-000FFFh) not protected from table reads executed in other
      +                           blocks
   620                           ;	Table Read Protection bit
   621                           ;	EBTR1 = OFF, Block 1 (001000-001FFF) not protected from table reads executed in other 
      +                          blocks
   622                           ;	Table Read Protection bit
   623                           ;	EBTR2 = OFF, Block 2 (002000-002FFFh) not protected from table reads executed in other
      +                           blocks
   624                           ;	Table Read Protection bit
   625                           ;	EBTR3 = OFF, Block 3 (003000-003FFFh) not protected from table reads executed in other
      +                           blocks
   626  30000C                     	org	3145740
   627  30000C  0F                 	db	15
   628                           
   629                           ;Config register CONFIG7H @ 0x30000D
   630                           ;	Boot Block Table Read Protection bit
   631                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
   632  30000D                     	org	3145741
   633  30000D  40                 	db	64
   634                           tosu	equ	0xFFF
   635                           tosh	equ	0xFFE
   636                           tosl	equ	0xFFD
   637                           stkptr	equ	0xFFC
   638                           pclatu	equ	0xFFB
   639                           pclath	equ	0xFFA
   640                           pcl	equ	0xFF9
   641                           tblptru	equ	0xFF8
   642                           tblptrh	equ	0xFF7
   643                           tblptrl	equ	0xFF6
   644                           tablat	equ	0xFF5
   645                           prodh	equ	0xFF4
   646                           prodl	equ	0xFF3
   647                           indf0	equ	0xFEF
   648                           postinc0	equ	0xFEE
   649                           postdec0	equ	0xFED
   650                           preinc0	equ	0xFEC
   651                           plusw0	equ	0xFEB
   652                           fsr0h	equ	0xFEA
   653                           fsr0l	equ	0xFE9
   654                           wreg	equ	0xFE8
   655                           indf1	equ	0xFE7
   656                           postinc1	equ	0xFE6
   657                           postdec1	equ	0xFE5
   658                           preinc1	equ	0xFE4
   659                           plusw1	equ	0xFE3
   660                           fsr1h	equ	0xFE2
   661                           fsr1l	equ	0xFE1
   662                           bsr	equ	0xFE0
   663                           indf2	equ	0xFDF
   664                           postinc2	equ	0xFDE
   665                           postdec2	equ	0xFDD
   666                           preinc2	equ	0xFDC
   667                           plusw2	equ	0xFDB
   668                           fsr2h	equ	0xFDA
   669                           fsr2l	equ	0xFD9
   670                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _setupTimer0
                          _setupUART
 ---------------------------------------------------------------------------------
 (1) _setupUART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  0     0      0       0
                            _rx_char
 ---------------------------------------------------------------------------------
 (3) _rx_char                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setupTimer0
   _setupUART

 _ISR (ROOT)
   _rx_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0      17       1       24.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      17       3        0.0%
DATA                 0      0      17      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 15 13:03:27 2021

                     l53 0080                       l62 009E                       l54 0080  
                     l59 006E                      l830 009A                      l832 0056  
                    l834 0064                      l836 006C                      l828 0088  
                    l860 007C                      l852 0070                      l854 0074  
                    l856 0076                      l858 0078                      _ISR 0008  
                    wreg 000FE8                     ?_ISR 0000                     _RCIF 007CF5  
                   i2l48 004E                     i2l65 00B6                     i2l68 00C6  
                   _TMR0 000FD6                     _TRMT 007D61                     _main 0070  
                   btemp 0018                     start 0052             ___param_bank 000000  
                  ??_ISR 0000                    ?_main 0000                    i2l822 00B6  
                  i2l824 00C4                    i2l840 0018                    i2l850 0046  
                  i2l842 001E                    i2l844 002C                    i2l846 0030  
                  i2l838 000A                    i2l848 0042                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _PORTD 000F83                    _TRISD 000F95  
                  _TXREG 000FAD                    _count 0015                    _speed 0017  
        __end_of_rx_char 00C8                    ttemp5 0019                    ttemp6 001C  
                  ttemp7 0020                    status 000FD8                    wtemp8 0019  
           _stringBuffer 0001          __initialization 00A0             __end_of_main 0088  
                 ??_main 0000            __activetblptr 000000                   i2u1_40 00C4  
                 i2u1_41 00C0                   i2u2_40 0018                   i2u2_41 0014  
                 i2u3_40 002C                   i2u3_41 0028                   i2u4_40 0042  
                 i2u4_41 003E                   clear_0 00A6                   isa$std 000001  
              ??_rx_char 0000             ?_setupTimer0 0000               __accesstop 0060  
__end_of__initialization 00AC            ___rparam_used 000001           __pcstackCOMRAM 0000  
     __size_of_setupUART 0018                  __Hparam 0000                  __Lparam 0000  
                __pcinit 00A0                  __ramtop 0300                  __ptext0 0070  
                __ptext1 0088                  __ptext2 0056                  __ptext4 00B6  
              _T0CONbits 000FD5             __size_of_ISR 004A                  _rx_char 00B6  
   end_of_initialization 00AC     __size_of_setupTimer0 001A        __end_of_setupUART 00A0  
              _RCSTAbits 000FAB                  postinc0 000FEE                _TRISCbits 000F94  
              _TXSTAbits 000FAC      start_initialization 00A0              __end_of_ISR 0052  
            __pbssCOMRAM 0001                __pintcode 0008                 ?_rx_char 0000  
               _PIE1bits 000F9D                _setupUART 0088            ??_setupTimer0 0000  
               __Hrparam 0000                 __Lrparam 0000               ?_setupUART 0000  
       __size_of_rx_char 0012            __size_of_main 0018      __end_of_setupTimer0 0070  
               isa$xinst 000000                 int$flags 0018               _INTCONbits 000FF2  
               intlevel2 0000              ??_setupUART 0000              _setupTimer0 0056  
