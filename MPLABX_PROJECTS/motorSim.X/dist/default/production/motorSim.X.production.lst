

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Nov 27 01:43:07 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4431 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     _TMR0	set	4054
    59  0000                     _TXREG	set	4013
    60  0000                     _RCREG	set	4014
    61  0000                     _SPBRG	set	4015
    62  0000                     _PIE1bits	set	3997
    63  0000                     _RCSTAbits	set	4011
    64  0000                     _TXSTAbits	set	4012
    65  0000                     _TRISCbits	set	3988
    66  0000                     _T0CONbits	set	4053
    67  0000                     _TRISB	set	3987
    68  0000                     _PORTB	set	3969
    69  0000                     _INTCONbits	set	4082
    70  0000                     _TRMT	set	32097
    71  0000                     _RCIF	set	31989
    72                           
    73                           ; #config settings
    74                           
    75                           	psect	cinit
    76  0002D2                     __pcinit:
    77                           	callstack 0
    78  0002D2                     start_initialization:
    79                           	callstack 0
    80  0002D2                     __initialization:
    81                           	callstack 0
    82                           
    83                           ; Clear objects allocated to COMRAM (23 bytes)
    84  0002D2  EE00  F01B         	lfsr	0,__pbssCOMRAM
    85  0002D6  0E17               	movlw	23
    86  0002D8                     clear_0:
    87  0002D8  6AEE               	clrf	postinc0,c
    88  0002DA  06E8               	decf	wreg,f,c
    89  0002DC  E1FD               	bnz	clear_0
    90  0002DE                     end_of_initialization:
    91                           	callstack 0
    92  0002DE                     __end_of__initialization:
    93                           	callstack 0
    94  0002DE  9032               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    95  0002E0  9232               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    96  0002E2  0100               	movlb	0
    97  0002E4  EF74  F001         	goto	_main	;jump to C main() function
    98                           
    99                           	psect	bssCOMRAM
   100  00001B                     __pbssCOMRAM:
   101                           	callstack 0
   102  00001B                     _count:
   103                           	callstack 0
   104  00001B                     	ds	2
   105  00001D                     _speed:
   106                           	callstack 0
   107  00001D                     	ds	1
   108  00001E                     _stringBuffer:
   109                           	callstack 0
   110  00001E                     	ds	20
   111                           
   112                           	psect	cstackCOMRAM
   113  000001                     __pcstackCOMRAM:
   114                           	callstack 0
   115  000001                     ?___lwdiv:
   116                           	callstack 0
   117  000001                     ?___lwmod:
   118                           	callstack 0
   119  000001                     tx_char@a:
   120                           	callstack 0
   121  000001                     ___lwdiv@dividend:
   122                           	callstack 0
   123  000001                     ___lwmod@dividend:
   124                           	callstack 0
   125                           
   126                           ; 2 bytes @ 0x0
   127  000001                     	ds	2
   128  000003                     ___lwdiv@divisor:
   129                           	callstack 0
   130  000003                     ___lwmod@divisor:
   131                           	callstack 0
   132                           
   133                           ; 2 bytes @ 0x2
   134  000003                     	ds	2
   135  000005                     ___lwmod@counter:
   136                           	callstack 0
   137  000005                     ___lwdiv@quotient:
   138                           	callstack 0
   139                           
   140                           ; 2 bytes @ 0x4
   141  000005                     	ds	2
   142  000007                     ___lwdiv@counter:
   143                           	callstack 0
   144                           
   145                           ; 1 bytes @ 0x6
   146  000007                     	ds	1
   147  000008                     utoa@buf:
   148                           	callstack 0
   149                           
   150                           ; 2 bytes @ 0x7
   151  000008                     	ds	2
   152  00000A                     utoa@val:
   153                           	callstack 0
   154                           
   155                           ; 2 bytes @ 0x9
   156  00000A                     	ds	2
   157  00000C                     utoa@base:
   158                           	callstack 0
   159                           
   160                           ; 2 bytes @ 0xB
   161  00000C                     	ds	2
   162  00000E                     utoa@v:
   163                           	callstack 0
   164                           
   165                           ; 2 bytes @ 0xD
   166  00000E                     	ds	2
   167  000010                     utoa@c:
   168                           	callstack 0
   169                           
   170                           ; 1 bytes @ 0xF
   171  000010                     	ds	1
   172  000011                     itoa@buf:
   173                           	callstack 0
   174                           
   175                           ; 2 bytes @ 0x10
   176  000011                     	ds	2
   177  000013                     itoa@val:
   178                           	callstack 0
   179                           
   180                           ; 2 bytes @ 0x12
   181  000013                     	ds	2
   182  000015                     itoa@base:
   183                           	callstack 0
   184                           
   185                           ; 2 bytes @ 0x14
   186  000015                     	ds	2
   187  000017                     ??_ISR:
   188                           
   189                           ; 1 bytes @ 0x16
   190  000017                     	ds	2
   191  000019                     ISR@i:
   192                           	callstack 0
   193                           
   194                           ; 2 bytes @ 0x18
   195  000019                     	ds	2
   196  00001B                     
   197                           ; 1 bytes @ 0x1A
   198 ;;
   199 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   200 ;;
   201 ;; *************** function _main *****************
   202 ;; Defined at:
   203 ;;		line 117 in file "motorSim.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;		None
   206 ;; Auto vars:     Size  Location     Type
   207 ;;		None
   208 ;; Return value:  Size  Location     Type
   209 ;;                  1    wreg      void 
   210 ;; Registers used:
   211 ;;		wreg, status,2, cstack
   212 ;; Tracked objects:
   213 ;;		On entry : 0/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   217 ;;      Params:         0       0       0       0
   218 ;;      Locals:         0       0       0       0
   219 ;;      Temps:          0       0       0       0
   220 ;;      Totals:         0       0       0       0
   221 ;;Total ram usage:        0 bytes
   222 ;; Hardware stack levels required when called: 5
   223 ;; This function calls:
   224 ;;		_setupTimer0
   225 ;;		_setupUART
   226 ;; This function is called by:
   227 ;;		Startup code after reset
   228 ;; This function uses a non-reentrant model
   229 ;;
   230                           
   231                           	psect	text0
   232  0002E8                     __ptext0:
   233                           	callstack 0
   234  0002E8                     _main:
   235                           	callstack 26
   236  0002E8                     
   237                           ;motorSim.c: 118: TRISB = 0xFF;
   238  0002E8  6893               	setf	147,c	;volatile
   239                           
   240                           ;motorSim.c: 119: INTCONbits.GIE = 1; INTCONbits.PEIE = 1;
   241  0002EA  8EF2               	bsf	242,7,c	;volatile
   242  0002EC  8CF2               	bsf	242,6,c	;volatile
   243  0002EE                     
   244                           ;motorSim.c: 120: setupUART();
   245  0002EE  EC5D  F001         	call	_setupUART	;wreg free
   246                           
   247                           ;motorSim.c: 121: setupTimer0();
   248  0002F2  EC50  F001         	call	_setupTimer0	;wreg free
   249  0002F6                     l60:
   250  0002F6  EF7B  F001         	goto	l60
   251  0002FA  EF5F  F000         	goto	start
   252  0002FE                     __end_of_main:
   253                           	callstack 0
   254                           
   255 ;; *************** function _setupUART *****************
   256 ;; Defined at:
   257 ;;		line 141 in file "motorSim.c"
   258 ;; Parameters:    Size  Location     Type
   259 ;;		None
   260 ;; Auto vars:     Size  Location     Type
   261 ;;		None
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		wreg, status,2
   266 ;; Tracked objects:
   267 ;;		On entry : 0/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   271 ;;      Params:         0       0       0       0
   272 ;;      Locals:         0       0       0       0
   273 ;;      Temps:          0       0       0       0
   274 ;;      Totals:         0       0       0       0
   275 ;;Total ram usage:        0 bytes
   276 ;; Hardware stack levels used: 1
   277 ;; Hardware stack levels required when called: 4
   278 ;; This function calls:
   279 ;;		Nothing
   280 ;; This function is called by:
   281 ;;		_main
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           	psect	text1
   286  0002BA                     __ptext1:
   287                           	callstack 0
   288  0002BA                     _setupUART:
   289                           	callstack 26
   290  0002BA                     
   291                           ;motorSim.c: 142: TRISCbits.RC6 = 0;
   292  0002BA  9C94               	bcf	148,6,c	;volatile
   293                           
   294                           ;motorSim.c: 143: TRISCbits.RC7 = 1;
   295  0002BC  8E94               	bsf	148,7,c	;volatile
   296                           
   297                           ;motorSim.c: 144: TXSTAbits.BRGH = 0;
   298  0002BE  94AC               	bcf	172,2,c	;volatile
   299                           
   300                           ;motorSim.c: 145: TXSTAbits.SYNC = 0;
   301  0002C0  98AC               	bcf	172,4,c	;volatile
   302                           
   303                           ;motorSim.c: 146: TXSTAbits.TXEN = 1;
   304  0002C2  8AAC               	bsf	172,5,c	;volatile
   305                           
   306                           ;motorSim.c: 147: RCSTAbits.SPEN = 1;
   307  0002C4  8EAB               	bsf	171,7,c	;volatile
   308                           
   309                           ;motorSim.c: 148: RCSTAbits.CREN = 1;
   310  0002C6  88AB               	bsf	171,4,c	;volatile
   311                           
   312                           ;motorSim.c: 149: PIE1bits.RCIE = 1;
   313  0002C8  8A9D               	bsf	157,5,c	;volatile
   314                           
   315                           ;motorSim.c: 150: PIE1bits.TXIE = 0;
   316  0002CA  989D               	bcf	157,4,c	;volatile
   317  0002CC                     
   318                           ;motorSim.c: 151: SPBRG = 31;
   319  0002CC  0E1F               	movlw	31
   320  0002CE  6EAF               	movwf	175,c	;volatile
   321  0002D0  0012               	return		;funcret
   322  0002D2                     __end_of_setupUART:
   323                           	callstack 0
   324                           
   325 ;; *************** function _setupTimer0 *****************
   326 ;; Defined at:
   327 ;;		line 127 in file "motorSim.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, status,2
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   341 ;;      Params:         0       0       0       0
   342 ;;      Locals:         0       0       0       0
   343 ;;      Temps:          0       0       0       0
   344 ;;      Totals:         0       0       0       0
   345 ;;Total ram usage:        0 bytes
   346 ;; Hardware stack levels used: 1
   347 ;; Hardware stack levels required when called: 4
   348 ;; This function calls:
   349 ;;		Nothing
   350 ;; This function is called by:
   351 ;;		_main
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text2
   356  0002A0                     __ptext2:
   357                           	callstack 0
   358  0002A0                     _setupTimer0:
   359                           	callstack 26
   360  0002A0                     
   361                           ;motorSim.c: 128: INTCONbits.TMR0IE = 1;
   362  0002A0  8AF2               	bsf	242,5,c	;volatile
   363                           
   364                           ;motorSim.c: 129: T0CONbits.T016BIT = 1;
   365  0002A2  8CD5               	bsf	213,6,c	;volatile
   366                           
   367                           ;motorSim.c: 130: T0CONbits.T0CS = 0;
   368  0002A4  9AD5               	bcf	213,5,c	;volatile
   369                           
   370                           ;motorSim.c: 133: T0CONbits.PSA = 0;
   371  0002A6  96D5               	bcf	213,3,c	;volatile
   372                           
   373                           ;motorSim.c: 134: T0CONbits.T0PS2 = 1;
   374  0002A8  84D5               	bsf	213,2,c	;volatile
   375                           
   376                           ;motorSim.c: 135: T0CONbits.T0PS1 = 0;
   377  0002AA  92D5               	bcf	213,1,c	;volatile
   378                           
   379                           ;motorSim.c: 136: T0CONbits.T0PS0 = 1;
   380  0002AC  80D5               	bsf	213,0,c	;volatile
   381  0002AE                     
   382                           ;motorSim.c: 137: TMR0 = 0;
   383  0002AE  0E00               	movlw	0
   384  0002B0  6ED7               	movwf	215,c	;volatile
   385  0002B2  0E00               	movlw	0
   386  0002B4  6ED6               	movwf	214,c	;volatile
   387  0002B6                     
   388                           ;motorSim.c: 138: T0CONbits.TMR0ON = 1;
   389  0002B6  8ED5               	bsf	213,7,c	;volatile
   390  0002B8  0012               	return		;funcret
   391  0002BA                     __end_of_setupTimer0:
   392                           	callstack 0
   393                           
   394 ;; *************** function _ISR *****************
   395 ;; Defined at:
   396 ;;		line 96 in file "motorSim.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;  i               2   24[COMRAM] int 
   401 ;;  c               1    0        unsigned char 
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   411 ;;      Params:         0       0       0       0
   412 ;;      Locals:         2       0       0       0
   413 ;;      Temps:          2       0       0       0
   414 ;;      Totals:         4       0       0       0
   415 ;;Total ram usage:        4 bytes
   416 ;; Hardware stack levels used: 1
   417 ;; Hardware stack levels required when called: 3
   418 ;; This function calls:
   419 ;;		_itoa
   420 ;;		_rx_char
   421 ;;		_tx_char
   422 ;; This function is called by:
   423 ;;		Interrupt level 2
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           	psect	intcode
   428  000008                     __pintcode:
   429                           	callstack 0
   430  000008                     _ISR:
   431                           	callstack 26
   432                           
   433                           ;incstack = 0
   434  000008  8232               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   435  00000A  CFD9 F017          	movff	fsr2l,??_ISR
   436  00000E  CFDA F018          	movff	fsr2h,??_ISR+1
   437  000012                     
   438                           ;motorSim.c: 97: if(INTCONbits.TMR0IF == 1) {
   439  000012  A4F2               	btfss	242,2,c	;volatile
   440  000014  EF0E  F000         	goto	i2u27_41
   441  000018  EF10  F000         	goto	i2u27_40
   442  00001C                     i2u27_41:
   443  00001C  EF50  F000         	goto	i2l1073
   444  000020                     i2u27_40:
   445  000020                     
   446                           ;motorSim.c: 98: count++;
   447  000020  4A1B               	infsnz	_count^0,f,c
   448  000022  2A1C               	incf	(_count+1)^0,f,c
   449  000024                     
   450                           ;motorSim.c: 99: if (count == 1) {
   451  000024  041B               	decf	_count^0,w,c
   452  000026  101C               	iorwf	(_count+1)^0,w,c
   453  000028  A4D8               	btfss	status,2,c
   454  00002A  EF19  F000         	goto	i2u28_41
   455  00002E  EF1B  F000         	goto	i2u28_40
   456  000032                     i2u28_41:
   457  000032  EF50  F000         	goto	i2l1073
   458  000036                     i2u28_40:
   459  000036                     
   460                           ;motorSim.c: 100: speed = PORTB;
   461  000036  CF81 F01D          	movff	3969,_speed	;volatile
   462  00003A                     
   463                           ;motorSim.c: 101: itoa(stringBuffer,speed,10);
   464  00003A  0E1E               	movlw	low _stringBuffer
   465  00003C  6E11               	movwf	itoa@buf^0,c
   466  00003E  0E00               	movlw	high _stringBuffer
   467  000040  6E12               	movwf	(itoa@buf+1)^0,c
   468  000042  C01D  F013         	movff	_speed,itoa@val
   469  000046  6A14               	clrf	(itoa@val+1)^0,c
   470  000048  0E00               	movlw	0
   471  00004A  6E16               	movwf	(itoa@base+1)^0,c
   472  00004C  0E0A               	movlw	10
   473  00004E  6E15               	movwf	itoa@base^0,c
   474  000050  EC2E  F001         	call	_itoa	;wreg free
   475  000054                     
   476                           ;motorSim.c: 102: int i = 0;
   477  000054  0E00               	movlw	0
   478  000056  6E1A               	movwf	(ISR@i+1)^0,c
   479  000058  0E00               	movlw	0
   480  00005A  6E19               	movwf	ISR@i^0,c
   481                           
   482                           ;motorSim.c: 103: while (stringBuffer[i]) {
   483  00005C  EF3B  F000         	goto	i2l1067
   484  000060                     i2l1063:
   485                           
   486                           ;motorSim.c: 104: tx_char(stringBuffer[i]);
   487  000060  0E1E               	movlw	low _stringBuffer
   488  000062  2419               	addwf	ISR@i^0,w,c
   489  000064  6ED9               	movwf	fsr2l,c
   490  000066  0E00               	movlw	high _stringBuffer
   491  000068  201A               	addwfc	(ISR@i+1)^0,w,c
   492  00006A  6EDA               	movwf	fsr2h,c
   493  00006C  50DF               	movf	indf2,w,c
   494  00006E  EC7F  F001         	call	_tx_char
   495  000072                     
   496                           ;motorSim.c: 105: i++;
   497  000072  4A19               	infsnz	ISR@i^0,f,c
   498  000074  2A1A               	incf	(ISR@i+1)^0,f,c
   499  000076                     i2l1067:
   500  000076  0E1E               	movlw	low _stringBuffer
   501  000078  2419               	addwf	ISR@i^0,w,c
   502  00007A  6ED9               	movwf	fsr2l,c
   503  00007C  0E00               	movlw	high _stringBuffer
   504  00007E  201A               	addwfc	(ISR@i+1)^0,w,c
   505  000080  6EDA               	movwf	fsr2h,c
   506  000082  50DF               	movf	indf2,w,c
   507  000084  A4D8               	btfss	status,2,c
   508  000086  EF47  F000         	goto	i2u29_41
   509  00008A  EF49  F000         	goto	i2u29_40
   510  00008E                     i2u29_41:
   511  00008E  EF30  F000         	goto	i2l1063
   512  000092                     i2u29_40:
   513  000092                     
   514                           ;motorSim.c: 106: };motorSim.c: 107: tx_char(0x0a);
   515  000092  0E0A               	movlw	10
   516  000094  EC7F  F001         	call	_tx_char
   517  000098                     
   518                           ;motorSim.c: 108: count = 0;
   519  000098  0E00               	movlw	0
   520  00009A  6E1C               	movwf	(_count+1)^0,c
   521  00009C  0E00               	movlw	0
   522  00009E  6E1B               	movwf	_count^0,c
   523  0000A0                     i2l1073:
   524                           
   525                           ;motorSim.c: 109: };motorSim.c: 110: };motorSim.c: 112: if(RCIF == 1) {
   526  0000A0  AA9E               	btfss	3998,5,c	;volatile
   527  0000A2  EF55  F000         	goto	i2u30_41
   528  0000A6  EF57  F000         	goto	i2u30_40
   529  0000AA                     i2u30_41:
   530  0000AA  EF59  F000         	goto	i2l55
   531  0000AE                     i2u30_40:
   532  0000AE  EC8A  F001         	call	_rx_char	;wreg free
   533  0000B2                     i2l55:
   534  0000B2  C018  FFDA         	movff	??_ISR+1,fsr2h
   535  0000B6  C017  FFD9         	movff	??_ISR,fsr2l
   536  0000BA  9232               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   537  0000BC  0011               	retfie		f
   538  0000BE                     __end_of_ISR:
   539                           	callstack 0
   540                           
   541 ;; *************** function _tx_char *****************
   542 ;; Defined at:
   543 ;;		line 159 in file "motorSim.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;  a               1    wreg     unsigned char 
   546 ;; Auto vars:     Size  Location     Type
   547 ;;  a               1    0[COMRAM] unsigned char 
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   557 ;;      Params:         0       0       0       0
   558 ;;      Locals:         1       0       0       0
   559 ;;      Temps:          0       0       0       0
   560 ;;      Totals:         1       0       0       0
   561 ;;Total ram usage:        1 bytes
   562 ;; Hardware stack levels used: 1
   563 ;; This function calls:
   564 ;;		Nothing
   565 ;; This function is called by:
   566 ;;		_ISR
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           	psect	text4
   571  0002FE                     __ptext4:
   572                           	callstack 0
   573  0002FE                     _tx_char:
   574                           	callstack 28
   575                           
   576                           ;incstack = 0
   577                           ;tx_char@a stored from wreg
   578  0002FE  6E01               	movwf	tx_char@a^0,c
   579  000300                     
   580                           ;motorSim.c: 160: TXREG=a;
   581  000300  C001  FFAD         	movff	tx_char@a,4013	;volatile
   582  000304                     i2l78:
   583  000304  A2AC               	btfss	4012,1,c	;volatile
   584  000306  EF87  F001         	goto	i2u11_41
   585  00030A  EF89  F001         	goto	i2u11_40
   586  00030E                     i2u11_41:
   587  00030E  EF82  F001         	goto	i2l78
   588  000312                     i2u11_40:
   589  000312  0012               	return		;funcret
   590  000314                     __end_of_tx_char:
   591                           	callstack 0
   592                           
   593 ;; *************** function _rx_char *****************
   594 ;; Defined at:
   595 ;;		line 154 in file "motorSim.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;		None
   598 ;; Auto vars:     Size  Location     Type
   599 ;;		None
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      unsigned char 
   602 ;; Registers used:
   603 ;;		wreg, status,2
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   609 ;;      Params:         0       0       0       0
   610 ;;      Locals:         0       0       0       0
   611 ;;      Temps:          0       0       0       0
   612 ;;      Totals:         0       0       0       0
   613 ;;Total ram usage:        0 bytes
   614 ;; Hardware stack levels used: 1
   615 ;; This function calls:
   616 ;;		Nothing
   617 ;; This function is called by:
   618 ;;		_ISR
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           	psect	text5
   623  000314                     __ptext5:
   624                           	callstack 0
   625  000314                     _rx_char:
   626                           	callstack 28
   627  000314                     i2l72:
   628  000314  AA9E               	btfss	3998,5,c	;volatile
   629  000316  EF8F  F001         	goto	i2u12_41
   630  00031A  EF91  F001         	goto	i2u12_40
   631  00031E                     i2u12_41:
   632  00031E  EF8A  F001         	goto	i2l72
   633  000322                     i2u12_40:
   634  000322                     
   635                           ;motorSim.c: 156: return RCREG;
   636  000322  50AE               	movf	174,w,c	;volatile
   637  000324  0012               	return		;funcret
   638  000326                     __end_of_rx_char:
   639                           	callstack 0
   640                           
   641 ;; *************** function _itoa *****************
   642 ;; Defined at:
   643 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;  buf             2   16[COMRAM] PTR unsigned char 
   646 ;;		 -> stringBuffer(20), 
   647 ;;  val             2   18[COMRAM] int 
   648 ;;  base            2   20[COMRAM] int 
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  cp              2    0        PTR unsigned char 
   651 ;;		 -> stringBuffer(20), 
   652 ;; Return value:  Size  Location     Type
   653 ;;                  2   16[COMRAM] PTR unsigned char 
   654 ;; Registers used:
   655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   661 ;;      Params:         6       0       0       0
   662 ;;      Locals:         0       0       0       0
   663 ;;      Temps:          0       0       0       0
   664 ;;      Totals:         6       0       0       0
   665 ;;Total ram usage:        6 bytes
   666 ;; Hardware stack levels used: 1
   667 ;; Hardware stack levels required when called: 2
   668 ;; This function calls:
   669 ;;		_utoa
   670 ;; This function is called by:
   671 ;;		_ISR
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           	psect	text6
   676  00025C                     __ptext6:
   677                           	callstack 0
   678  00025C                     _itoa:
   679                           	callstack 26
   680  00025C  BE14               	btfsc	(itoa@val+1)^0,7,c
   681  00025E  EF35  F001         	goto	i2u26_40
   682  000262  EF33  F001         	goto	i2u26_41
   683  000266                     i2u26_41:
   684  000266  EF41  F001         	goto	i2l1047
   685  00026A                     i2u26_40:
   686  00026A  C011  FFD9         	movff	itoa@buf,fsr2l
   687  00026E  C012  FFDA         	movff	itoa@buf+1,fsr2h
   688  000272  0E2D               	movlw	45
   689  000274  6EDF               	movwf	indf2,c
   690  000276  4A11               	infsnz	itoa@buf^0,f,c
   691  000278  2A12               	incf	(itoa@buf+1)^0,f,c
   692  00027A  6C13               	negf	itoa@val^0,c
   693  00027C  1E14               	comf	(itoa@val+1)^0,f,c
   694  00027E  B0D8               	btfsc	status,0,c
   695  000280  2A14               	incf	(itoa@val+1)^0,f,c
   696  000282                     i2l1047:
   697  000282  C011  F008         	movff	itoa@buf,utoa@buf
   698  000286  C012  F009         	movff	itoa@buf+1,utoa@buf+1
   699  00028A  C013  F00A         	movff	itoa@val,utoa@val
   700  00028E  C014  F00B         	movff	itoa@val+1,utoa@val+1
   701  000292  C015  F00C         	movff	itoa@base,utoa@base
   702  000296  C016  F00D         	movff	itoa@base+1,utoa@base+1
   703  00029A  EC61  F000         	call	_utoa	;wreg free
   704  00029E  0012               	return		;funcret
   705  0002A0                     __end_of_itoa:
   706                           	callstack 0
   707                           
   708 ;; *************** function _utoa *****************
   709 ;; Defined at:
   710 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;  buf             2    7[COMRAM] PTR unsigned char 
   713 ;;		 -> stringBuffer(20), 
   714 ;;  val             2    9[COMRAM] unsigned int 
   715 ;;  base            2   11[COMRAM] int 
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  v               2   13[COMRAM] unsigned int 
   718 ;;  c               1   15[COMRAM] unsigned char 
   719 ;; Return value:  Size  Location     Type
   720 ;;                  2    7[COMRAM] PTR unsigned char 
   721 ;; Registers used:
   722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   728 ;;      Params:         6       0       0       0
   729 ;;      Locals:         3       0       0       0
   730 ;;      Temps:          0       0       0       0
   731 ;;      Totals:         9       0       0       0
   732 ;;Total ram usage:        9 bytes
   733 ;; Hardware stack levels used: 1
   734 ;; Hardware stack levels required when called: 1
   735 ;; This function calls:
   736 ;;		___lwdiv
   737 ;;		___lwmod
   738 ;; This function is called by:
   739 ;;		_itoa
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text7
   744  0000C2                     __ptext7:
   745                           	callstack 0
   746  0000C2                     _utoa:
   747                           	callstack 26
   748  0000C2  C00A  F00E         	movff	utoa@val,utoa@v
   749  0000C6  C00B  F00F         	movff	utoa@val+1,utoa@v+1
   750  0000CA                     i2l1011:
   751  0000CA  C00E  F001         	movff	utoa@v,___lwdiv@dividend
   752  0000CE  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
   753  0000D2  C00C  F003         	movff	utoa@base,___lwdiv@divisor
   754  0000D6  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
   755  0000DA  ECC2  F000         	call	___lwdiv	;wreg free
   756  0000DE  C001  F00E         	movff	?___lwdiv,utoa@v
   757  0000E2  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
   758  0000E6  4A08               	infsnz	utoa@buf^0,f,c
   759  0000E8  2A09               	incf	(utoa@buf+1)^0,f,c
   760  0000EA  500E               	movf	utoa@v^0,w,c
   761  0000EC  100F               	iorwf	(utoa@v+1)^0,w,c
   762  0000EE  A4D8               	btfss	status,2,c
   763  0000F0  EF7C  F000         	goto	i2u23_41
   764  0000F4  EF7E  F000         	goto	i2u23_40
   765  0000F8                     i2u23_41:
   766  0000F8  EF65  F000         	goto	i2l1011
   767  0000FC                     i2u23_40:
   768  0000FC  C008  FFD9         	movff	utoa@buf,fsr2l
   769  000100  C009  FFDA         	movff	utoa@buf+1,fsr2h
   770  000104  0E00               	movlw	0
   771  000106  6EDF               	movwf	indf2,c
   772  000108  0608               	decf	utoa@buf^0,f,c
   773  00010A  A0D8               	btfss	status,0,c
   774  00010C  0609               	decf	(utoa@buf+1)^0,f,c
   775  00010E                     i2l1021:
   776  00010E  C00A  F001         	movff	utoa@val,___lwmod@dividend
   777  000112  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
   778  000116  C00C  F003         	movff	utoa@base,___lwmod@divisor
   779  00011A  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
   780  00011E  ECFC  F000         	call	___lwmod	;wreg free
   781  000122  5001               	movf	?___lwmod^0,w,c
   782  000124  6E10               	movwf	utoa@c^0,c
   783  000126  C00A  F001         	movff	utoa@val,___lwdiv@dividend
   784  00012A  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
   785  00012E  C00C  F003         	movff	utoa@base,___lwdiv@divisor
   786  000132  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
   787  000136  ECC2  F000         	call	___lwdiv	;wreg free
   788  00013A  C001  F00A         	movff	?___lwdiv,utoa@val
   789  00013E  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
   790  000142  0E09               	movlw	9
   791  000144  6410               	cpfsgt	utoa@c^0,c
   792  000146  EFA7  F000         	goto	i2u24_41
   793  00014A  EFA9  F000         	goto	i2u24_40
   794  00014E                     i2u24_41:
   795  00014E  EFAB  F000         	goto	i2l755
   796  000152                     i2u24_40:
   797  000152  0E07               	movlw	7
   798  000154  2610               	addwf	utoa@c^0,f,c
   799  000156                     i2l755:
   800  000156  0E30               	movlw	48
   801  000158  2610               	addwf	utoa@c^0,f,c
   802  00015A  C008  FFD9         	movff	utoa@buf,fsr2l
   803  00015E  C009  FFDA         	movff	utoa@buf+1,fsr2h
   804  000162  C010  FFDF         	movff	utoa@c,indf2
   805  000166  0608               	decf	utoa@buf^0,f,c
   806  000168  A0D8               	btfss	status,0,c
   807  00016A  0609               	decf	(utoa@buf+1)^0,f,c
   808  00016C  500A               	movf	utoa@val^0,w,c
   809  00016E  100B               	iorwf	(utoa@val+1)^0,w,c
   810  000170  A4D8               	btfss	status,2,c
   811  000172  EFBD  F000         	goto	i2u25_41
   812  000176  EFBF  F000         	goto	i2u25_40
   813  00017A                     i2u25_41:
   814  00017A  EF87  F000         	goto	i2l1021
   815  00017E                     i2u25_40:
   816  00017E                     
   817                           ;	Return value of _utoa is never used
   818  00017E  4A08               	infsnz	utoa@buf^0,f,c
   819  000180  2A09               	incf	(utoa@buf+1)^0,f,c
   820  000182  0012               	return		;funcret
   821  000184                     __end_of_utoa:
   822                           	callstack 0
   823                           
   824 ;; *************** function ___lwmod *****************
   825 ;; Defined at:
   826 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;  dividend        2    0[COMRAM] unsigned int 
   829 ;;  divisor         2    2[COMRAM] unsigned int 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  counter         1    4[COMRAM] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  2    0[COMRAM] unsigned int 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   841 ;;      Params:         4       0       0       0
   842 ;;      Locals:         1       0       0       0
   843 ;;      Temps:          0       0       0       0
   844 ;;      Totals:         5       0       0       0
   845 ;;Total ram usage:        5 bytes
   846 ;; Hardware stack levels used: 1
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_utoa
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text8
   855  0001F8                     __ptext8:
   856                           	callstack 0
   857  0001F8                     ___lwmod:
   858                           	callstack 26
   859  0001F8  5003               	movf	___lwmod@divisor^0,w,c
   860  0001FA  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
   861  0001FC  B4D8               	btfsc	status,2,c
   862  0001FE  EF03  F001         	goto	i2u20_41
   863  000202  EF05  F001         	goto	i2u20_40
   864  000206                     i2u20_41:
   865  000206  EF29  F001         	goto	i2l573
   866  00020A                     i2u20_40:
   867  00020A  0E01               	movlw	1
   868  00020C  6E05               	movwf	___lwmod@counter^0,c
   869  00020E  EF0D  F001         	goto	i2l999
   870  000212                     i2l997:
   871  000212  90D8               	bcf	status,0,c
   872  000214  3603               	rlcf	___lwmod@divisor^0,f,c
   873  000216  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
   874  000218  2A05               	incf	___lwmod@counter^0,f,c
   875  00021A                     i2l999:
   876  00021A  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
   877  00021C  EF12  F001         	goto	i2u21_41
   878  000220  EF14  F001         	goto	i2u21_40
   879  000224                     i2u21_41:
   880  000224  EF09  F001         	goto	i2l997
   881  000228                     i2u21_40:
   882  000228                     i2l1001:
   883  000228  5003               	movf	___lwmod@divisor^0,w,c
   884  00022A  5C01               	subwf	___lwmod@dividend^0,w,c
   885  00022C  5004               	movf	(___lwmod@divisor+1)^0,w,c
   886  00022E  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
   887  000230  A0D8               	btfss	status,0,c
   888  000232  EF1D  F001         	goto	i2u22_41
   889  000236  EF1F  F001         	goto	i2u22_40
   890  00023A                     i2u22_41:
   891  00023A  EF23  F001         	goto	i2l1005
   892  00023E                     i2u22_40:
   893  00023E  5003               	movf	___lwmod@divisor^0,w,c
   894  000240  5E01               	subwf	___lwmod@dividend^0,f,c
   895  000242  5004               	movf	(___lwmod@divisor+1)^0,w,c
   896  000244  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
   897  000246                     i2l1005:
   898  000246  90D8               	bcf	status,0,c
   899  000248  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
   900  00024A  3203               	rrcf	___lwmod@divisor^0,f,c
   901  00024C  2E05               	decfsz	___lwmod@counter^0,f,c
   902  00024E  EF14  F001         	goto	i2l1001
   903  000252                     i2l573:
   904  000252  C001  F001         	movff	___lwmod@dividend,?___lwmod
   905  000256  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
   906  00025A  0012               	return		;funcret
   907  00025C                     __end_of___lwmod:
   908                           	callstack 0
   909                           
   910 ;; *************** function ___lwdiv *****************
   911 ;; Defined at:
   912 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;  dividend        2    0[COMRAM] unsigned int 
   915 ;;  divisor         2    2[COMRAM] unsigned int 
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  quotient        2    4[COMRAM] unsigned int 
   918 ;;  counter         1    6[COMRAM] unsigned char 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  2    0[COMRAM] unsigned int 
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   928 ;;      Params:         4       0       0       0
   929 ;;      Locals:         3       0       0       0
   930 ;;      Temps:          0       0       0       0
   931 ;;      Totals:         7       0       0       0
   932 ;;Total ram usage:        7 bytes
   933 ;; Hardware stack levels used: 1
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_utoa
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text9
   942  000184                     __ptext9:
   943                           	callstack 0
   944  000184                     ___lwdiv:
   945                           	callstack 26
   946  000184  0E00               	movlw	0
   947  000186  6E06               	movwf	(___lwdiv@quotient+1)^0,c
   948  000188  0E00               	movlw	0
   949  00018A  6E05               	movwf	___lwdiv@quotient^0,c
   950  00018C  5003               	movf	___lwdiv@divisor^0,w,c
   951  00018E  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
   952  000190  B4D8               	btfsc	status,2,c
   953  000192  EFCD  F000         	goto	i2u17_41
   954  000196  EFCF  F000         	goto	i2u17_40
   955  00019A                     i2u17_41:
   956  00019A  EFF7  F000         	goto	i2l563
   957  00019E                     i2u17_40:
   958  00019E  0E01               	movlw	1
   959  0001A0  6E07               	movwf	___lwdiv@counter^0,c
   960  0001A2  EFD7  F000         	goto	i2l979
   961  0001A6                     i2l977:
   962  0001A6  90D8               	bcf	status,0,c
   963  0001A8  3603               	rlcf	___lwdiv@divisor^0,f,c
   964  0001AA  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
   965  0001AC  2A07               	incf	___lwdiv@counter^0,f,c
   966  0001AE                     i2l979:
   967  0001AE  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
   968  0001B0  EFDC  F000         	goto	i2u18_41
   969  0001B4  EFDE  F000         	goto	i2u18_40
   970  0001B8                     i2u18_41:
   971  0001B8  EFD3  F000         	goto	i2l977
   972  0001BC                     i2u18_40:
   973  0001BC                     i2l981:
   974  0001BC  90D8               	bcf	status,0,c
   975  0001BE  3605               	rlcf	___lwdiv@quotient^0,f,c
   976  0001C0  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
   977  0001C2  5003               	movf	___lwdiv@divisor^0,w,c
   978  0001C4  5C01               	subwf	___lwdiv@dividend^0,w,c
   979  0001C6  5004               	movf	(___lwdiv@divisor+1)^0,w,c
   980  0001C8  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
   981  0001CA  A0D8               	btfss	status,0,c
   982  0001CC  EFEA  F000         	goto	i2u19_41
   983  0001D0  EFEC  F000         	goto	i2u19_40
   984  0001D4                     i2u19_41:
   985  0001D4  EFF1  F000         	goto	i2l989
   986  0001D8                     i2u19_40:
   987  0001D8  5003               	movf	___lwdiv@divisor^0,w,c
   988  0001DA  5E01               	subwf	___lwdiv@dividend^0,f,c
   989  0001DC  5004               	movf	(___lwdiv@divisor+1)^0,w,c
   990  0001DE  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
   991  0001E0  8005               	bsf	___lwdiv@quotient^0,0,c
   992  0001E2                     i2l989:
   993  0001E2  90D8               	bcf	status,0,c
   994  0001E4  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
   995  0001E6  3203               	rrcf	___lwdiv@divisor^0,f,c
   996  0001E8  2E07               	decfsz	___lwdiv@counter^0,f,c
   997  0001EA  EFDE  F000         	goto	i2l981
   998  0001EE                     i2l563:
   999  0001EE  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1000  0001F2  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1001  0001F6  0012               	return		;funcret
  1002  0001F8                     __end_of___lwdiv:
  1003                           	callstack 0
  1004  0000                     
  1005                           	psect	rparam
  1006  0000                     
  1007                           	psect	temp
  1008  000032                     btemp:
  1009                           	callstack 0
  1010  000032                     	ds	1
  1011  0000                     int$flags	set	btemp
  1012  0000                     wtemp8	set	btemp+1
  1013  0000                     ttemp5	set	btemp+1
  1014  0000                     ttemp6	set	btemp+4
  1015  0000                     ttemp7	set	btemp+8
  1016                           
  1017                           	psect	idloc
  1018                           
  1019                           ;Config register IDLOC0 @ 0x200000
  1020                           ;	unspecified, using default values
  1021  200000                     	org	2097152
  1022  200000  FF                 	db	255
  1023                           
  1024                           ;Config register IDLOC1 @ 0x200001
  1025                           ;	unspecified, using default values
  1026  200001                     	org	2097153
  1027  200001  FF                 	db	255
  1028                           
  1029                           ;Config register IDLOC2 @ 0x200002
  1030                           ;	unspecified, using default values
  1031  200002                     	org	2097154
  1032  200002  FF                 	db	255
  1033                           
  1034                           ;Config register IDLOC3 @ 0x200003
  1035                           ;	unspecified, using default values
  1036  200003                     	org	2097155
  1037  200003  FF                 	db	255
  1038                           
  1039                           ;Config register IDLOC4 @ 0x200004
  1040                           ;	unspecified, using default values
  1041  200004                     	org	2097156
  1042  200004  FF                 	db	255
  1043                           
  1044                           ;Config register IDLOC5 @ 0x200005
  1045                           ;	unspecified, using default values
  1046  200005                     	org	2097157
  1047  200005  FF                 	db	255
  1048                           
  1049                           ;Config register IDLOC6 @ 0x200006
  1050                           ;	unspecified, using default values
  1051  200006                     	org	2097158
  1052  200006  FF                 	db	255
  1053                           
  1054                           ;Config register IDLOC7 @ 0x200007
  1055                           ;	unspecified, using default values
  1056  200007                     	org	2097159
  1057  200007  FF                 	db	255
  1058                           
  1059                           	psect	config
  1060                           
  1061                           ; Padding undefined space
  1062  300000                     	org	3145728
  1063  300000  FF                 	db	255
  1064                           
  1065                           ;Config register CONFIG1H @ 0x300001
  1066                           ;	Oscillator Selection bits
  1067                           ;	OSC = RC, 11XX External RC oscillator, CLKO function on RA6
  1068                           ;	Fail-Safe Clock Monitor Enable bit
  1069                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1070                           ;	Internal External Oscillator Switchover bit
  1071                           ;	IESO = ON, Internal External Switchover mode enabled
  1072  300001                     	org	3145729
  1073  300001  CC                 	db	204
  1074                           
  1075                           ;Config register CONFIG2L @ 0x300002
  1076                           ;	Power-up Timer Enable bit
  1077                           ;	PWRTEN = OFF, PWRT disabled
  1078                           ;	Brown-out Reset Enable bits
  1079                           ;	BOREN = ON, Brown-out Reset enabled
  1080                           ;	Brown Out Reset Voltage bits
  1081                           ;	BORV = 0x3, unprogrammed default
  1082  300002                     	org	3145730
  1083  300002  0F                 	db	15
  1084                           
  1085                           ;Config register CONFIG2H @ 0x300003
  1086                           ;	Watchdog Timer Enable bit
  1087                           ;	WDTEN = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1088                           ;	Watchdog Timer Postscale Select bits
  1089                           ;	WDPS = 32768, 1:32768
  1090                           ;	Watchdog Timer Window Enable bit
  1091                           ;	WINEN = OFF, WDT window disabled
  1092  300003                     	org	3145731
  1093  300003  3E                 	db	62
  1094                           
  1095                           ;Config register CONFIG3L @ 0x300004
  1096                           ;	PWM output pins Reset state control
  1097                           ;	PWMPIN = OFF, PWM outputs disabled upon Reset (default)
  1098                           ;	Low-Side Transistors Polarity
  1099                           ;	LPOL = HIGH, PWM0, 2, 4 and 6 are active-high
  1100                           ;	High-Side Transistors Polarity
  1101                           ;	HPOL = HIGH, PWM1, 3, 5 and 7 are active-high
  1102                           ;	Timer1 Oscillator MUX
  1103                           ;	T1OSCMX = ON, Low-power Timer1 operation when microcontroller is in Sleep mode
  1104  300004                     	org	3145732
  1105  300004  3C                 	db	60
  1106                           
  1107                           ;Config register CONFIG3H @ 0x300005
  1108                           ;	FLTA MUX bit
  1109                           ;	FLTAMX = RC1, FLTA input is multiplexed with RC1
  1110                           ;	SSP I/O MUX bit
  1111                           ;	SSPMX = RD1, SCK/SCL clocks and SDA/SDI data are multiplexed with RD3 and RD2, respect
      +                          ively. SDO output is multiplexed with RD1.
  1112                           ;	PWM4 MUX bit
  1113                           ;	PWM4MX = RB5, PWM4 output is multiplexed with RB5
  1114                           ;	TMR0/T5CKI External clock MUX bit
  1115                           ;	EXCLKMX = RC3, TMR0/T5CKI external clock input is multiplexed with RC3
  1116                           ;	MCLR Pin Enable bit
  1117                           ;	MCLRE = ON, Enabled
  1118  300005                     	org	3145733
  1119  300005  99                 	db	153
  1120                           
  1121                           ;Config register CONFIG4L @ 0x300006
  1122                           ;	Stack Full/Underflow Reset Enable bit
  1123                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1124                           ;	Low-Voltage ICSP Enable bit
  1125                           ;	LVP = ON, Low-voltage ICSP enabled
  1126                           ;	Background Debugger Enable bit
  1127                           ;	DEBUG = 0x1, unprogrammed default
  1128  300006                     	org	3145734
  1129  300006  85                 	db	133
  1130                           
  1131                           ; Padding undefined space
  1132  300007                     	org	3145735
  1133  300007  FF                 	db	255
  1134                           
  1135                           ;Config register CONFIG5L @ 0x300008
  1136                           ;	Code Protection bit
  1137                           ;	CP0 = OFF, Block 0 (000200-000FFFh) not code-protected
  1138                           ;	Code Protection bit
  1139                           ;	CP1 = OFF, Block 1 (001000-001FFF) not code-protected
  1140                           ;	Code Protection bit
  1141                           ;	CP2 = OFF, Block 2 (002000-002FFFh) not code-protected
  1142                           ;	Code Protection bit
  1143                           ;	CP3 = OFF, Block 3 (003000-003FFFh) not code-protected
  1144  300008                     	org	3145736
  1145  300008  0F                 	db	15
  1146                           
  1147                           ;Config register CONFIG5H @ 0x300009
  1148                           ;	Boot Block Code Protection bit
  1149                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code-protected
  1150                           ;	Data EEPROM Code Protection bit
  1151                           ;	CPD = OFF, Data EEPROM not code-protected
  1152  300009                     	org	3145737
  1153  300009  C0                 	db	192
  1154                           
  1155                           ;Config register CONFIG6L @ 0x30000A
  1156                           ;	Write Protection bit
  1157                           ;	WRT0 = OFF, Block 0 (000200-000FFFh) not write-protected
  1158                           ;	Write Protection bit
  1159                           ;	WRT1 = OFF, Block 1 (001000-001FFF) not write-protected
  1160                           ;	Write Protection bit
  1161                           ;	WRT2 = OFF, Block 2 (002000-002FFFh) not write-protected
  1162                           ;	Write Protection bit
  1163                           ;	WRT3 = OFF, Block 3 (003000-003FFFh) not write-protected
  1164  30000A                     	org	3145738
  1165  30000A  0F                 	db	15
  1166                           
  1167                           ;Config register CONFIG6H @ 0x30000B
  1168                           ;	Configuration Register Write Protection bit
  1169                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1170                           ;	Boot Block Write Protection bit
  1171                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
  1172                           ;	Data EEPROM Write Protection bit
  1173                           ;	WRTD = OFF, Data EEPROM not write-protected
  1174  30000B                     	org	3145739
  1175  30000B  E0                 	db	224
  1176                           
  1177                           ;Config register CONFIG7L @ 0x30000C
  1178                           ;	Table Read Protection bit
  1179                           ;	EBTR0 = OFF, Block 0 (000200-000FFFh) not protected from table reads executed in other
      +                           blocks
  1180                           ;	Table Read Protection bit
  1181                           ;	EBTR1 = OFF, Block 1 (001000-001FFF) not protected from table reads executed in other 
      +                          blocks
  1182                           ;	Table Read Protection bit
  1183                           ;	EBTR2 = OFF, Block 2 (002000-002FFFh) not protected from table reads executed in other
      +                           blocks
  1184                           ;	Table Read Protection bit
  1185                           ;	EBTR3 = OFF, Block 3 (003000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1186  30000C                     	org	3145740
  1187  30000C  0F                 	db	15
  1188                           
  1189                           ;Config register CONFIG7H @ 0x30000D
  1190                           ;	Boot Block Table Read Protection bit
  1191                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
  1192  30000D                     	org	3145741
  1193  30000D  40                 	db	64
  1194                           tosu	equ	0xFFF
  1195                           tosh	equ	0xFFE
  1196                           tosl	equ	0xFFD
  1197                           stkptr	equ	0xFFC
  1198                           pclatu	equ	0xFFB
  1199                           pclath	equ	0xFFA
  1200                           pcl	equ	0xFF9
  1201                           tblptru	equ	0xFF8
  1202                           tblptrh	equ	0xFF7
  1203                           tblptrl	equ	0xFF6
  1204                           tablat	equ	0xFF5
  1205                           prodh	equ	0xFF4
  1206                           prodl	equ	0xFF3
  1207                           indf0	equ	0xFEF
  1208                           postinc0	equ	0xFEE
  1209                           postdec0	equ	0xFED
  1210                           preinc0	equ	0xFEC
  1211                           plusw0	equ	0xFEB
  1212                           fsr0h	equ	0xFEA
  1213                           fsr0l	equ	0xFE9
  1214                           wreg	equ	0xFE8
  1215                           indf1	equ	0xFE7
  1216                           postinc1	equ	0xFE6
  1217                           postdec1	equ	0xFE5
  1218                           preinc1	equ	0xFE4
  1219                           plusw1	equ	0xFE3
  1220                           fsr1h	equ	0xFE2
  1221                           fsr1l	equ	0xFE1
  1222                           bsr	equ	0xFE0
  1223                           indf2	equ	0xFDF
  1224                           postinc2	equ	0xFDE
  1225                           postdec2	equ	0xFDD
  1226                           preinc2	equ	0xFDC
  1227                           plusw2	equ	0xFDB
  1228                           fsr2h	equ	0xFDA
  1229                           fsr2l	equ	0xFD9
  1230                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      49
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_itoa
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _setupTimer0
                          _setupUART
 ---------------------------------------------------------------------------------
 (1) _setupUART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0    1760
                                             22 COMRAM     4     4      0
                               _itoa
                            _rx_char
                            _tx_char
 ---------------------------------------------------------------------------------
 (3) _tx_char                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _rx_char                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1698
                                             16 COMRAM     6     0      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1307
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setupTimer0
   _setupUART

 _ISR (ROOT)
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _rx_char
   _tx_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      31       1       52.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      31       3        0.0%
DATA                 0      0      31      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Nov 27 01:43:07 2021

                     l60 02F6                       l61 02F6                       l66 02B8  
                     l69 02D0                      l931 02BA                      l933 02CC  
                    l935 02A0                      l937 02AE                      l939 02B6  
                    l967 02E8                      l969 02EE                      _ISR 0008  
                    wreg 000FE8                     ?_ISR 0001                     ISR@i 0019  
                   _RCIF 007CF5                     i2l55 00B2                     i2l72 0314  
                   i2l81 0312                     i2l75 0324                     i2l78 0304  
                   _TMR0 000FD6                     _TRMT 007D61                     _main 02E8  
                   _itoa 025C                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9                     btemp 0032                     _utoa 00C2  
                   start 00BE             ___param_bank 000000                    ??_ISR 0017  
                  ?_main 0001                    ?_itoa 0011                    ?_utoa 0008  
        __end_of___lwdiv 01F8          __end_of___lwmod 025C                    i2l570 01F6  
                  i2l563 01EE                    i2l580 025A                    i2l573 0252  
                  i2l755 0156                    i2l923 0300                    i2l757 0182  
                  i2l749 029E                    i2l925 0314                    i2l927 0322  
                  i2l971 0184                    i2l981 01BC                    i2l973 018C  
                  i2l991 01E8                    i2l983 01C2                    i2l975 019E  
                  i2l985 01D8                    i2l977 01A6                    i2l993 01F8  
                  i2l987 01E0                    i2l979 01AE                    i2l995 020A  
                  i2l989 01E2                    i2l997 0212                    i2l999 021A  
                  _RCREG 000FAE                    _SPBRG 000FAF                    _PORTB 000F81  
                  _TRISB 000F93                    _TXREG 000FAD                    _count 001B  
                  _speed 001D          __end_of_rx_char 0326                    ttemp5 0033  
                  ttemp6 0036                    ttemp7 003A                    utoa@c 0010  
        __end_of_tx_char 0314                    utoa@v 000E                    status 000FD8  
                  wtemp8 0033             _stringBuffer 001E          __initialization 02D2  
           __end_of_main 02FE             __end_of_itoa 02A0             __end_of_utoa 0184  
                 ??_main 001B                   ??_itoa 0017                   ??_utoa 000E  
          __activetblptr 000000                   i2l1001 0228                   i2l1003 023E  
                 i2l1011 00CA                   i2l1005 0246                   i2l1021 010E  
                 i2l1013 00E6                   i2l1007 024C                   i2l1031 0166  
                 i2l1023 0126                   i2l1015 00EA                   i2l1033 016C  
                 i2l1025 0142                   i2l1017 00FC                   i2l1009 00C2  
                 i2l1041 026A                   i2l1035 017E                   i2l1027 0152  
                 i2l1019 0108                   i2l1043 0276                   i2l1051 0012  
                 i2l1029 015A                   i2l1045 027A                   i2l1061 0054  
                 i2l1053 0020                   i2l1047 0282                   i2l1039 025C  
                 i2l1071 0098                   i2l1063 0060                   i2l1055 0024  
                 i2l1065 0072                   i2l1057 0036                   i2l1073 00A0  
                 i2l1075 00AE                   i2l1067 0076                   i2l1059 003A  
                 i2l1069 0092                ??___lwdiv 0005                ??___lwmod 0005  
                 clear_0 02D8                   isa$std 000001                ??_rx_char 0001  
              ??_tx_char 0001             ?_setupTimer0 0001               __accesstop 0060  
__end_of__initialization 02DE            ___rparam_used 000001           __pcstackCOMRAM 0001  
     __size_of_setupUART 0018                  i2u11_40 0312                  i2u11_41 030E  
                i2u20_40 020A                  i2u12_40 0322                  i2u20_41 0206  
                i2u12_41 031E                  i2u21_40 0228                  i2u21_41 0224  
                i2u22_40 023E                  i2u30_40 00AE                  i2u22_41 023A  
                i2u30_41 00AA                  i2u23_40 00FC                  i2u23_41 00F8  
                i2u24_40 0152                  i2u24_41 014E                  i2u17_40 019E  
                i2u25_40 017E                  i2u17_41 019A                  i2u25_41 017A  
                i2u18_40 01BC                  i2u26_40 026A                  i2u18_41 01B8  
                i2u26_41 0266                  i2u19_40 01D8                  i2u27_40 0020  
                i2u19_41 01D4                  i2u27_41 001C                  i2u28_40 0036  
                i2u28_41 0032                  i2u29_40 0092                  i2u29_41 008E  
                __Hparam 0000                  __Lparam 0000                  ___lwdiv 0184  
                ___lwmod 01F8                  __pcinit 02D2                  __ramtop 0300  
                __ptext0 02E8                  __ptext1 02BA                  __ptext2 02A0  
                __ptext4 02FE                  __ptext5 0314                  __ptext6 025C  
                __ptext7 00C2                  __ptext8 01F8                  __ptext9 0184  
              _T0CONbits 000FD5             __size_of_ISR 00B6                  _rx_char 0314  
                _tx_char 02FE     end_of_initialization 02DE     __size_of_setupTimer0 001A  
                itoa@buf 0011                  itoa@val 0013        __end_of_setupUART 02D2  
              _RCSTAbits 000FAB                  postinc0 000FEE                  utoa@buf 0008  
                utoa@val 000A                _TRISCbits 000F94                _TXSTAbits 000FAC  
    start_initialization 02D2              __end_of_ISR 00BE              __pbssCOMRAM 001B  
       ___lwdiv@dividend 0001                __pintcode 0008                 ?___lwdiv 0001  
               ?___lwmod 0001                 ?_rx_char 0001         ___lwdiv@quotient 0005  
               ?_tx_char 0001                 _PIE1bits 000F9D                _setupUART 02BA  
          ??_setupTimer0 001B                 __Hrparam 0000                 __Lrparam 0000  
             ?_setupUART 0001         __size_of___lwdiv 0074         __size_of___lwmod 0064  
        ___lwdiv@divisor 0003          ___lwdiv@counter 0007         __size_of_rx_char 0012  
       __size_of_tx_char 0016            __size_of_main 0016            __size_of_itoa 0044  
          __size_of_utoa 00C2      __end_of_setupTimer0 02BA                 isa$xinst 000000  
               int$flags 0032               _INTCONbits 000FF2                 itoa@base 0015  
               intlevel2 0000         ___lwmod@dividend 0001              ??_setupUART 001B  
               tx_char@a 0001                 utoa@base 000C          ___lwmod@divisor 0003  
        ___lwmod@counter 0005              _setupTimer0 02A0  
