

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 01 16:23:35 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4431 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     _TMR0	set	4054
    58  0000                     _TXREG	set	4013
    59  0000                     _RCREG	set	4014
    60  0000                     _SPBRG	set	4015
    61  0000                     _PIE1bits	set	3997
    62  0000                     _RCSTAbits	set	4011
    63  0000                     _TXSTAbits	set	4012
    64  0000                     _TRISCbits	set	3988
    65  0000                     _T0CONbits	set	4053
    66  0000                     _TRISB	set	3987
    67  0000                     _PORTB	set	3969
    68  0000                     _INTCONbits	set	4082
    69  0000                     _TRMT	set	32097
    70  0000                     _RCIF	set	31989
    71                           
    72                           ; #config settings
    73                           
    74                           	psect	cinit
    75  0002C0                     __pcinit:
    76                           	callstack 0
    77  0002C0                     start_initialization:
    78                           	callstack 0
    79  0002C0                     __initialization:
    80                           	callstack 0
    81                           
    82                           ; Clear objects allocated to COMRAM (23 bytes)
    83  0002C0  EE00  F01B         	lfsr	0,__pbssCOMRAM
    84  0002C4  0E17               	movlw	23
    85  0002C6                     clear_0:
    86  0002C6  6AEE               	clrf	postinc0,c
    87  0002C8  06E8               	decf	wreg,f,c
    88  0002CA  E1FD               	bnz	clear_0
    89  0002CC                     end_of_initialization:
    90                           	callstack 0
    91  0002CC                     __end_of__initialization:
    92                           	callstack 0
    93  0002CC  9032               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    94  0002CE  9232               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    95  0002D0  0100               	movlb	0
    96  0002D2  EF6B  F001         	goto	_main	;jump to C main() function
    97                           
    98                           	psect	bssCOMRAM
    99  00001B                     __pbssCOMRAM:
   100                           	callstack 0
   101  00001B                     _count:
   102                           	callstack 0
   103  00001B                     	ds	2
   104  00001D                     _speed:
   105                           	callstack 0
   106  00001D                     	ds	1
   107  00001E                     _stringBuffer:
   108                           	callstack 0
   109  00001E                     	ds	20
   110                           
   111                           	psect	cstackCOMRAM
   112  000001                     __pcstackCOMRAM:
   113                           	callstack 0
   114  000001                     ?___lwdiv:
   115                           	callstack 0
   116  000001                     ?___lwmod:
   117                           	callstack 0
   118  000001                     tx_char@a:
   119                           	callstack 0
   120  000001                     ___lwdiv@dividend:
   121                           	callstack 0
   122  000001                     ___lwmod@dividend:
   123                           	callstack 0
   124                           
   125                           ; 2 bytes @ 0x0
   126  000001                     	ds	2
   127  000003                     ___lwdiv@divisor:
   128                           	callstack 0
   129  000003                     ___lwmod@divisor:
   130                           	callstack 0
   131                           
   132                           ; 2 bytes @ 0x2
   133  000003                     	ds	2
   134  000005                     ___lwmod@counter:
   135                           	callstack 0
   136  000005                     ___lwdiv@quotient:
   137                           	callstack 0
   138                           
   139                           ; 2 bytes @ 0x4
   140  000005                     	ds	2
   141  000007                     ___lwdiv@counter:
   142                           	callstack 0
   143                           
   144                           ; 1 bytes @ 0x6
   145  000007                     	ds	1
   146  000008                     utoa@buf:
   147                           	callstack 0
   148                           
   149                           ; 2 bytes @ 0x7
   150  000008                     	ds	2
   151  00000A                     utoa@val:
   152                           	callstack 0
   153                           
   154                           ; 2 bytes @ 0x9
   155  00000A                     	ds	2
   156  00000C                     utoa@base:
   157                           	callstack 0
   158                           
   159                           ; 2 bytes @ 0xB
   160  00000C                     	ds	2
   161  00000E                     utoa@v:
   162                           	callstack 0
   163                           
   164                           ; 2 bytes @ 0xD
   165  00000E                     	ds	2
   166  000010                     utoa@c:
   167                           	callstack 0
   168                           
   169                           ; 1 bytes @ 0xF
   170  000010                     	ds	1
   171  000011                     itoa@buf:
   172                           	callstack 0
   173                           
   174                           ; 2 bytes @ 0x10
   175  000011                     	ds	2
   176  000013                     itoa@val:
   177                           	callstack 0
   178                           
   179                           ; 2 bytes @ 0x12
   180  000013                     	ds	2
   181  000015                     itoa@base:
   182                           	callstack 0
   183                           
   184                           ; 2 bytes @ 0x14
   185  000015                     	ds	2
   186  000017                     ??_ISR:
   187                           
   188                           ; 1 bytes @ 0x16
   189  000017                     	ds	2
   190  000019                     ISR@i:
   191                           	callstack 0
   192                           
   193                           ; 2 bytes @ 0x18
   194  000019                     	ds	2
   195  00001B                     
   196                           ; 1 bytes @ 0x1A
   197 ;;
   198 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   199 ;;
   200 ;; *************** function _main *****************
   201 ;; Defined at:
   202 ;;		line 113 in file "motorSim.c"
   203 ;; Parameters:    Size  Location     Type
   204 ;;		None
   205 ;; Auto vars:     Size  Location     Type
   206 ;;		None
   207 ;; Return value:  Size  Location     Type
   208 ;;                  1    wreg      void 
   209 ;; Registers used:
   210 ;;		wreg, status,2, cstack
   211 ;; Tracked objects:
   212 ;;		On entry : 0/0
   213 ;;		On exit  : 0/0
   214 ;;		Unchanged: 0/0
   215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   216 ;;      Params:         0       0       0       0
   217 ;;      Locals:         0       0       0       0
   218 ;;      Temps:          0       0       0       0
   219 ;;      Totals:         0       0       0       0
   220 ;;Total ram usage:        0 bytes
   221 ;; Hardware stack levels required when called: 5
   222 ;; This function calls:
   223 ;;		_setupTimer0
   224 ;;		_setupUART
   225 ;; This function is called by:
   226 ;;		Startup code after reset
   227 ;; This function uses a non-reentrant model
   228 ;;
   229                           
   230                           	psect	text0
   231  0002D6                     __ptext0:
   232                           	callstack 0
   233  0002D6                     _main:
   234                           	callstack 26
   235  0002D6                     
   236                           ;motorSim.c: 114: TRISB = 0xFF;
   237  0002D6  6893               	setf	147,c	;volatile
   238                           
   239                           ;motorSim.c: 115: INTCONbits.GIE = 1; INTCONbits.PEIE = 1;
   240  0002D8  8EF2               	bsf	242,7,c	;volatile
   241  0002DA  8CF2               	bsf	242,6,c	;volatile
   242  0002DC                     
   243                           ;motorSim.c: 116: setupUART();
   244  0002DC  EC54  F001         	call	_setupUART	;wreg free
   245                           
   246                           ;motorSim.c: 117: setupTimer0();
   247  0002E0  EC47  F001         	call	_setupTimer0	;wreg free
   248  0002E4                     l57:
   249  0002E4  EF72  F001         	goto	l57
   250  0002E8  EF56  F000         	goto	start
   251  0002EC                     __end_of_main:
   252                           	callstack 0
   253                           
   254 ;; *************** function _setupUART *****************
   255 ;; Defined at:
   256 ;;		line 138 in file "motorSim.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, status,2
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   270 ;;      Params:         0       0       0       0
   271 ;;      Locals:         0       0       0       0
   272 ;;      Temps:          0       0       0       0
   273 ;;      Totals:         0       0       0       0
   274 ;;Total ram usage:        0 bytes
   275 ;; Hardware stack levels used: 1
   276 ;; Hardware stack levels required when called: 4
   277 ;; This function calls:
   278 ;;		Nothing
   279 ;; This function is called by:
   280 ;;		_main
   281 ;; This function uses a non-reentrant model
   282 ;;
   283                           
   284                           	psect	text1
   285  0002A8                     __ptext1:
   286                           	callstack 0
   287  0002A8                     _setupUART:
   288                           	callstack 26
   289  0002A8                     
   290                           ;motorSim.c: 139: TRISCbits.RC6 = 0;
   291  0002A8  9C94               	bcf	148,6,c	;volatile
   292                           
   293                           ;motorSim.c: 140: TRISCbits.RC7 = 1;
   294  0002AA  8E94               	bsf	148,7,c	;volatile
   295                           
   296                           ;motorSim.c: 141: TXSTAbits.BRGH = 0;
   297  0002AC  94AC               	bcf	172,2,c	;volatile
   298                           
   299                           ;motorSim.c: 142: TXSTAbits.SYNC = 0;
   300  0002AE  98AC               	bcf	172,4,c	;volatile
   301                           
   302                           ;motorSim.c: 143: TXSTAbits.TXEN = 1;
   303  0002B0  8AAC               	bsf	172,5,c	;volatile
   304                           
   305                           ;motorSim.c: 144: RCSTAbits.SPEN = 1;
   306  0002B2  8EAB               	bsf	171,7,c	;volatile
   307                           
   308                           ;motorSim.c: 145: RCSTAbits.CREN = 1;
   309  0002B4  88AB               	bsf	171,4,c	;volatile
   310                           
   311                           ;motorSim.c: 146: PIE1bits.RCIE = 1;
   312  0002B6  8A9D               	bsf	157,5,c	;volatile
   313                           
   314                           ;motorSim.c: 147: PIE1bits.TXIE = 0;
   315  0002B8  989D               	bcf	157,4,c	;volatile
   316  0002BA                     
   317                           ;motorSim.c: 148: SPBRG = 31;
   318  0002BA  0E1F               	movlw	31
   319  0002BC  6EAF               	movwf	175,c	;volatile
   320  0002BE  0012               	return		;funcret
   321  0002C0                     __end_of_setupUART:
   322                           	callstack 0
   323                           
   324 ;; *************** function _setupTimer0 *****************
   325 ;; Defined at:
   326 ;;		line 124 in file "motorSim.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;		None
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, status,2
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   340 ;;      Params:         0       0       0       0
   341 ;;      Locals:         0       0       0       0
   342 ;;      Temps:          0       0       0       0
   343 ;;      Totals:         0       0       0       0
   344 ;;Total ram usage:        0 bytes
   345 ;; Hardware stack levels used: 1
   346 ;; Hardware stack levels required when called: 4
   347 ;; This function calls:
   348 ;;		Nothing
   349 ;; This function is called by:
   350 ;;		_main
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	text2
   355  00028E                     __ptext2:
   356                           	callstack 0
   357  00028E                     _setupTimer0:
   358                           	callstack 26
   359  00028E                     
   360                           ;motorSim.c: 125: INTCONbits.TMR0IE = 1;
   361  00028E  8AF2               	bsf	242,5,c	;volatile
   362                           
   363                           ;motorSim.c: 126: T0CONbits.T016BIT = 1;
   364  000290  8CD5               	bsf	213,6,c	;volatile
   365                           
   366                           ;motorSim.c: 127: T0CONbits.T0CS = 0;
   367  000292  9AD5               	bcf	213,5,c	;volatile
   368                           
   369                           ;motorSim.c: 130: T0CONbits.PSA = 0;
   370  000294  96D5               	bcf	213,3,c	;volatile
   371                           
   372                           ;motorSim.c: 131: T0CONbits.T0PS2 = 1;
   373  000296  84D5               	bsf	213,2,c	;volatile
   374                           
   375                           ;motorSim.c: 132: T0CONbits.T0PS1 = 1;
   376  000298  82D5               	bsf	213,1,c	;volatile
   377                           
   378                           ;motorSim.c: 133: T0CONbits.T0PS0 = 0;
   379  00029A  90D5               	bcf	213,0,c	;volatile
   380  00029C                     
   381                           ;motorSim.c: 134: TMR0 = 250;
   382  00029C  0E00               	movlw	0
   383  00029E  6ED7               	movwf	215,c	;volatile
   384  0002A0  0EFA               	movlw	250
   385  0002A2  6ED6               	movwf	214,c	;volatile
   386  0002A4                     
   387                           ;motorSim.c: 135: T0CONbits.TMR0ON = 1;
   388  0002A4  8ED5               	bsf	213,7,c	;volatile
   389  0002A6  0012               	return		;funcret
   390  0002A8                     __end_of_setupTimer0:
   391                           	callstack 0
   392                           
   393 ;; *************** function _ISR *****************
   394 ;; Defined at:
   395 ;;		line 96 in file "motorSim.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;  i               2   24[COMRAM] int 
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   409 ;;      Params:         0       0       0       0
   410 ;;      Locals:         2       0       0       0
   411 ;;      Temps:          2       0       0       0
   412 ;;      Totals:         4       0       0       0
   413 ;;Total ram usage:        4 bytes
   414 ;; Hardware stack levels used: 1
   415 ;; Hardware stack levels required when called: 3
   416 ;; This function calls:
   417 ;;		_itoa
   418 ;;		_tx_char
   419 ;; This function is called by:
   420 ;;		Interrupt level 2
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           	psect	intcode
   425  000008                     __pintcode:
   426                           	callstack 0
   427  000008                     _ISR:
   428                           	callstack 26
   429                           
   430                           ;incstack = 0
   431  000008  8232               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   432  00000A  CFD9 F017          	movff	fsr2l,??_ISR
   433  00000E  CFDA F018          	movff	fsr2h,??_ISR+1
   434  000012                     
   435                           ;motorSim.c: 97: if(INTCONbits.TMR0IF == 1) {
   436  000012  A4F2               	btfss	242,2,c	;volatile
   437  000014  EF0E  F000         	goto	i2u26_41
   438  000018  EF10  F000         	goto	i2u26_40
   439  00001C                     i2u26_41:
   440  00001C  EF50  F000         	goto	i2l52
   441  000020                     i2u26_40:
   442  000020                     
   443                           ;motorSim.c: 98: count++;
   444  000020  4A1B               	infsnz	_count^0,f,c
   445  000022  2A1C               	incf	(_count+1)^0,f,c
   446  000024                     
   447                           ;motorSim.c: 99: if (count == 1) {
   448  000024  041B               	decf	_count^0,w,c
   449  000026  101C               	iorwf	(_count+1)^0,w,c
   450  000028  A4D8               	btfss	status,2,c
   451  00002A  EF19  F000         	goto	i2u27_41
   452  00002E  EF1B  F000         	goto	i2u27_40
   453  000032                     i2u27_41:
   454  000032  EF50  F000         	goto	i2l52
   455  000036                     i2u27_40:
   456  000036                     
   457                           ;motorSim.c: 100: speed = PORTB;
   458  000036  CF81 F01D          	movff	3969,_speed	;volatile
   459  00003A                     
   460                           ;motorSim.c: 101: itoa(stringBuffer,speed,10);
   461  00003A  0E1E               	movlw	low _stringBuffer
   462  00003C  6E11               	movwf	itoa@buf^0,c
   463  00003E  0E00               	movlw	high _stringBuffer
   464  000040  6E12               	movwf	(itoa@buf+1)^0,c
   465  000042  C01D  F013         	movff	_speed,itoa@val
   466  000046  6A14               	clrf	(itoa@val+1)^0,c
   467  000048  0E00               	movlw	0
   468  00004A  6E16               	movwf	(itoa@base+1)^0,c
   469  00004C  0E0A               	movlw	10
   470  00004E  6E15               	movwf	itoa@base^0,c
   471  000050  EC25  F001         	call	_itoa	;wreg free
   472  000054                     
   473                           ;motorSim.c: 102: int i = 0;
   474  000054  0E00               	movlw	0
   475  000056  6E1A               	movwf	(ISR@i+1)^0,c
   476  000058  0E00               	movlw	0
   477  00005A  6E19               	movwf	ISR@i^0,c
   478                           
   479                           ;motorSim.c: 103: while (stringBuffer[i]) {
   480  00005C  EF3B  F000         	goto	i2l1060
   481  000060                     i2l1056:
   482                           
   483                           ;motorSim.c: 104: tx_char(stringBuffer[i]);
   484  000060  0E1E               	movlw	low _stringBuffer
   485  000062  2419               	addwf	ISR@i^0,w,c
   486  000064  6ED9               	movwf	fsr2l,c
   487  000066  0E00               	movlw	high _stringBuffer
   488  000068  201A               	addwfc	(ISR@i+1)^0,w,c
   489  00006A  6EDA               	movwf	fsr2h,c
   490  00006C  50DF               	movf	indf2,w,c
   491  00006E  EC76  F001         	call	_tx_char
   492  000072                     
   493                           ;motorSim.c: 105: i++;
   494  000072  4A19               	infsnz	ISR@i^0,f,c
   495  000074  2A1A               	incf	(ISR@i+1)^0,f,c
   496  000076                     i2l1060:
   497  000076  0E1E               	movlw	low _stringBuffer
   498  000078  2419               	addwf	ISR@i^0,w,c
   499  00007A  6ED9               	movwf	fsr2l,c
   500  00007C  0E00               	movlw	high _stringBuffer
   501  00007E  201A               	addwfc	(ISR@i+1)^0,w,c
   502  000080  6EDA               	movwf	fsr2h,c
   503  000082  50DF               	movf	indf2,w,c
   504  000084  A4D8               	btfss	status,2,c
   505  000086  EF47  F000         	goto	i2u28_41
   506  00008A  EF49  F000         	goto	i2u28_40
   507  00008E                     i2u28_41:
   508  00008E  EF30  F000         	goto	i2l1056
   509  000092                     i2u28_40:
   510  000092                     
   511                           ;motorSim.c: 106: };motorSim.c: 107: tx_char(0x0a);
   512  000092  0E0A               	movlw	10
   513  000094  EC76  F001         	call	_tx_char
   514  000098                     
   515                           ;motorSim.c: 108: count = 0;
   516  000098  0E00               	movlw	0
   517  00009A  6E1C               	movwf	(_count+1)^0,c
   518  00009C  0E00               	movlw	0
   519  00009E  6E1B               	movwf	_count^0,c
   520  0000A0                     i2l52:
   521  0000A0  C018  FFDA         	movff	??_ISR+1,fsr2h
   522  0000A4  C017  FFD9         	movff	??_ISR,fsr2l
   523  0000A8  9232               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   524  0000AA  0011               	retfie		f
   525  0000AC                     __end_of_ISR:
   526                           	callstack 0
   527                           
   528 ;; *************** function _tx_char *****************
   529 ;; Defined at:
   530 ;;		line 156 in file "motorSim.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;  a               1    wreg     unsigned char 
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  a               1    0[COMRAM] unsigned char 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   544 ;;      Params:         0       0       0       0
   545 ;;      Locals:         1       0       0       0
   546 ;;      Temps:          0       0       0       0
   547 ;;      Totals:         1       0       0       0
   548 ;;Total ram usage:        1 bytes
   549 ;; Hardware stack levels used: 1
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_ISR
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text4
   558  0002EC                     __ptext4:
   559                           	callstack 0
   560  0002EC                     _tx_char:
   561                           	callstack 28
   562                           
   563                           ;incstack = 0
   564                           ;tx_char@a stored from wreg
   565  0002EC  6E01               	movwf	tx_char@a^0,c
   566  0002EE                     
   567                           ;motorSim.c: 157: TXREG=a;
   568  0002EE  C001  FFAD         	movff	tx_char@a,4013	;volatile
   569  0002F2                     i2l75:
   570  0002F2  A2AC               	btfss	4012,1,c	;volatile
   571  0002F4  EF7E  F001         	goto	i2u11_41
   572  0002F8  EF80  F001         	goto	i2u11_40
   573  0002FC                     i2u11_41:
   574  0002FC  EF79  F001         	goto	i2l75
   575  000300                     i2u11_40:
   576  000300  0012               	return		;funcret
   577  000302                     __end_of_tx_char:
   578                           	callstack 0
   579                           
   580 ;; *************** function _itoa *****************
   581 ;; Defined at:
   582 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;  buf             2   16[COMRAM] PTR unsigned char 
   585 ;;		 -> stringBuffer(20), 
   586 ;;  val             2   18[COMRAM] int 
   587 ;;  base            2   20[COMRAM] int 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  cp              2    0        PTR unsigned char 
   590 ;;		 -> stringBuffer(20), 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  2   16[COMRAM] PTR unsigned char 
   593 ;; Registers used:
   594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   600 ;;      Params:         6       0       0       0
   601 ;;      Locals:         0       0       0       0
   602 ;;      Temps:          0       0       0       0
   603 ;;      Totals:         6       0       0       0
   604 ;;Total ram usage:        6 bytes
   605 ;; Hardware stack levels used: 1
   606 ;; Hardware stack levels required when called: 2
   607 ;; This function calls:
   608 ;;		_utoa
   609 ;; This function is called by:
   610 ;;		_ISR
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text5
   615  00024A                     __ptext5:
   616                           	callstack 0
   617  00024A                     _itoa:
   618                           	callstack 26
   619  00024A  BE14               	btfsc	(itoa@val+1)^0,7,c
   620  00024C  EF2C  F001         	goto	i2u25_40
   621  000250  EF2A  F001         	goto	i2u25_41
   622  000254                     i2u25_41:
   623  000254  EF38  F001         	goto	i2l1040
   624  000258                     i2u25_40:
   625  000258  C011  FFD9         	movff	itoa@buf,fsr2l
   626  00025C  C012  FFDA         	movff	itoa@buf+1,fsr2h
   627  000260  0E2D               	movlw	45
   628  000262  6EDF               	movwf	indf2,c
   629  000264  4A11               	infsnz	itoa@buf^0,f,c
   630  000266  2A12               	incf	(itoa@buf+1)^0,f,c
   631  000268  6C13               	negf	itoa@val^0,c
   632  00026A  1E14               	comf	(itoa@val+1)^0,f,c
   633  00026C  B0D8               	btfsc	status,0,c
   634  00026E  2A14               	incf	(itoa@val+1)^0,f,c
   635  000270                     i2l1040:
   636  000270  C011  F008         	movff	itoa@buf,utoa@buf
   637  000274  C012  F009         	movff	itoa@buf+1,utoa@buf+1
   638  000278  C013  F00A         	movff	itoa@val,utoa@val
   639  00027C  C014  F00B         	movff	itoa@val+1,utoa@val+1
   640  000280  C015  F00C         	movff	itoa@base,utoa@base
   641  000284  C016  F00D         	movff	itoa@base+1,utoa@base+1
   642  000288  EC58  F000         	call	_utoa	;wreg free
   643  00028C  0012               	return		;funcret
   644  00028E                     __end_of_itoa:
   645                           	callstack 0
   646                           
   647 ;; *************** function _utoa *****************
   648 ;; Defined at:
   649 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;  buf             2    7[COMRAM] PTR unsigned char 
   652 ;;		 -> stringBuffer(20), 
   653 ;;  val             2    9[COMRAM] unsigned int 
   654 ;;  base            2   11[COMRAM] int 
   655 ;; Auto vars:     Size  Location     Type
   656 ;;  v               2   13[COMRAM] unsigned int 
   657 ;;  c               1   15[COMRAM] unsigned char 
   658 ;; Return value:  Size  Location     Type
   659 ;;                  2    7[COMRAM] PTR unsigned char 
   660 ;; Registers used:
   661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   667 ;;      Params:         6       0       0       0
   668 ;;      Locals:         3       0       0       0
   669 ;;      Temps:          0       0       0       0
   670 ;;      Totals:         9       0       0       0
   671 ;;Total ram usage:        9 bytes
   672 ;; Hardware stack levels used: 1
   673 ;; Hardware stack levels required when called: 1
   674 ;; This function calls:
   675 ;;		___lwdiv
   676 ;;		___lwmod
   677 ;; This function is called by:
   678 ;;		_itoa
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text6
   683  0000B0                     __ptext6:
   684                           	callstack 0
   685  0000B0                     _utoa:
   686                           	callstack 26
   687  0000B0  C00A  F00E         	movff	utoa@val,utoa@v
   688  0000B4  C00B  F00F         	movff	utoa@val+1,utoa@v+1
   689  0000B8                     i2l1004:
   690  0000B8  C00E  F001         	movff	utoa@v,___lwdiv@dividend
   691  0000BC  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
   692  0000C0  C00C  F003         	movff	utoa@base,___lwdiv@divisor
   693  0000C4  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
   694  0000C8  ECB9  F000         	call	___lwdiv	;wreg free
   695  0000CC  C001  F00E         	movff	?___lwdiv,utoa@v
   696  0000D0  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
   697  0000D4  4A08               	infsnz	utoa@buf^0,f,c
   698  0000D6  2A09               	incf	(utoa@buf+1)^0,f,c
   699  0000D8  500E               	movf	utoa@v^0,w,c
   700  0000DA  100F               	iorwf	(utoa@v+1)^0,w,c
   701  0000DC  A4D8               	btfss	status,2,c
   702  0000DE  EF73  F000         	goto	i2u22_41
   703  0000E2  EF75  F000         	goto	i2u22_40
   704  0000E6                     i2u22_41:
   705  0000E6  EF5C  F000         	goto	i2l1004
   706  0000EA                     i2u22_40:
   707  0000EA  C008  FFD9         	movff	utoa@buf,fsr2l
   708  0000EE  C009  FFDA         	movff	utoa@buf+1,fsr2h
   709  0000F2  0E00               	movlw	0
   710  0000F4  6EDF               	movwf	indf2,c
   711  0000F6  0608               	decf	utoa@buf^0,f,c
   712  0000F8  A0D8               	btfss	status,0,c
   713  0000FA  0609               	decf	(utoa@buf+1)^0,f,c
   714  0000FC                     i2l1014:
   715  0000FC  C00A  F001         	movff	utoa@val,___lwmod@dividend
   716  000100  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
   717  000104  C00C  F003         	movff	utoa@base,___lwmod@divisor
   718  000108  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
   719  00010C  ECF3  F000         	call	___lwmod	;wreg free
   720  000110  5001               	movf	?___lwmod^0,w,c
   721  000112  6E10               	movwf	utoa@c^0,c
   722  000114  C00A  F001         	movff	utoa@val,___lwdiv@dividend
   723  000118  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
   724  00011C  C00C  F003         	movff	utoa@base,___lwdiv@divisor
   725  000120  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
   726  000124  ECB9  F000         	call	___lwdiv	;wreg free
   727  000128  C001  F00A         	movff	?___lwdiv,utoa@val
   728  00012C  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
   729  000130  0E09               	movlw	9
   730  000132  6410               	cpfsgt	utoa@c^0,c
   731  000134  EF9E  F000         	goto	i2u23_41
   732  000138  EFA0  F000         	goto	i2u23_40
   733  00013C                     i2u23_41:
   734  00013C  EFA2  F000         	goto	i2l752
   735  000140                     i2u23_40:
   736  000140  0E07               	movlw	7
   737  000142  2610               	addwf	utoa@c^0,f,c
   738  000144                     i2l752:
   739  000144  0E30               	movlw	48
   740  000146  2610               	addwf	utoa@c^0,f,c
   741  000148  C008  FFD9         	movff	utoa@buf,fsr2l
   742  00014C  C009  FFDA         	movff	utoa@buf+1,fsr2h
   743  000150  C010  FFDF         	movff	utoa@c,indf2
   744  000154  0608               	decf	utoa@buf^0,f,c
   745  000156  A0D8               	btfss	status,0,c
   746  000158  0609               	decf	(utoa@buf+1)^0,f,c
   747  00015A  500A               	movf	utoa@val^0,w,c
   748  00015C  100B               	iorwf	(utoa@val+1)^0,w,c
   749  00015E  A4D8               	btfss	status,2,c
   750  000160  EFB4  F000         	goto	i2u24_41
   751  000164  EFB6  F000         	goto	i2u24_40
   752  000168                     i2u24_41:
   753  000168  EF7E  F000         	goto	i2l1014
   754  00016C                     i2u24_40:
   755  00016C                     
   756                           ;	Return value of _utoa is never used
   757  00016C  4A08               	infsnz	utoa@buf^0,f,c
   758  00016E  2A09               	incf	(utoa@buf+1)^0,f,c
   759  000170  0012               	return		;funcret
   760  000172                     __end_of_utoa:
   761                           	callstack 0
   762                           
   763 ;; *************** function ___lwmod *****************
   764 ;; Defined at:
   765 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  dividend        2    0[COMRAM] unsigned int 
   768 ;;  divisor         2    2[COMRAM] unsigned int 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  counter         1    4[COMRAM] unsigned char 
   771 ;; Return value:  Size  Location     Type
   772 ;;                  2    0[COMRAM] unsigned int 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   780 ;;      Params:         4       0       0       0
   781 ;;      Locals:         1       0       0       0
   782 ;;      Temps:          0       0       0       0
   783 ;;      Totals:         5       0       0       0
   784 ;;Total ram usage:        5 bytes
   785 ;; Hardware stack levels used: 1
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_utoa
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text7
   794  0001E6                     __ptext7:
   795                           	callstack 0
   796  0001E6                     ___lwmod:
   797                           	callstack 26
   798  0001E6  5003               	movf	___lwmod@divisor^0,w,c
   799  0001E8  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
   800  0001EA  B4D8               	btfsc	status,2,c
   801  0001EC  EFFA  F000         	goto	i2u19_41
   802  0001F0  EFFC  F000         	goto	i2u19_40
   803  0001F4                     i2u19_41:
   804  0001F4  EF20  F001         	goto	i2l570
   805  0001F8                     i2u19_40:
   806  0001F8  0E01               	movlw	1
   807  0001FA  6E05               	movwf	___lwmod@counter^0,c
   808  0001FC  EF04  F001         	goto	i2l992
   809  000200                     i2l990:
   810  000200  90D8               	bcf	status,0,c
   811  000202  3603               	rlcf	___lwmod@divisor^0,f,c
   812  000204  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
   813  000206  2A05               	incf	___lwmod@counter^0,f,c
   814  000208                     i2l992:
   815  000208  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
   816  00020A  EF09  F001         	goto	i2u20_41
   817  00020E  EF0B  F001         	goto	i2u20_40
   818  000212                     i2u20_41:
   819  000212  EF00  F001         	goto	i2l990
   820  000216                     i2u20_40:
   821  000216                     i2l994:
   822  000216  5003               	movf	___lwmod@divisor^0,w,c
   823  000218  5C01               	subwf	___lwmod@dividend^0,w,c
   824  00021A  5004               	movf	(___lwmod@divisor+1)^0,w,c
   825  00021C  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
   826  00021E  A0D8               	btfss	status,0,c
   827  000220  EF14  F001         	goto	i2u21_41
   828  000224  EF16  F001         	goto	i2u21_40
   829  000228                     i2u21_41:
   830  000228  EF1A  F001         	goto	i2l998
   831  00022C                     i2u21_40:
   832  00022C  5003               	movf	___lwmod@divisor^0,w,c
   833  00022E  5E01               	subwf	___lwmod@dividend^0,f,c
   834  000230  5004               	movf	(___lwmod@divisor+1)^0,w,c
   835  000232  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
   836  000234                     i2l998:
   837  000234  90D8               	bcf	status,0,c
   838  000236  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
   839  000238  3203               	rrcf	___lwmod@divisor^0,f,c
   840  00023A  2E05               	decfsz	___lwmod@counter^0,f,c
   841  00023C  EF0B  F001         	goto	i2l994
   842  000240                     i2l570:
   843  000240  C001  F001         	movff	___lwmod@dividend,?___lwmod
   844  000244  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
   845  000248  0012               	return		;funcret
   846  00024A                     __end_of___lwmod:
   847                           	callstack 0
   848                           
   849 ;; *************** function ___lwdiv *****************
   850 ;; Defined at:
   851 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;  dividend        2    0[COMRAM] unsigned int 
   854 ;;  divisor         2    2[COMRAM] unsigned int 
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  quotient        2    4[COMRAM] unsigned int 
   857 ;;  counter         1    6[COMRAM] unsigned char 
   858 ;; Return value:  Size  Location     Type
   859 ;;                  2    0[COMRAM] unsigned int 
   860 ;; Registers used:
   861 ;;		wreg, status,2, status,0
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   867 ;;      Params:         4       0       0       0
   868 ;;      Locals:         3       0       0       0
   869 ;;      Temps:          0       0       0       0
   870 ;;      Totals:         7       0       0       0
   871 ;;Total ram usage:        7 bytes
   872 ;; Hardware stack levels used: 1
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_utoa
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text8
   881  000172                     __ptext8:
   882                           	callstack 0
   883  000172                     ___lwdiv:
   884                           	callstack 26
   885  000172  0E00               	movlw	0
   886  000174  6E06               	movwf	(___lwdiv@quotient+1)^0,c
   887  000176  0E00               	movlw	0
   888  000178  6E05               	movwf	___lwdiv@quotient^0,c
   889  00017A  5003               	movf	___lwdiv@divisor^0,w,c
   890  00017C  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
   891  00017E  B4D8               	btfsc	status,2,c
   892  000180  EFC4  F000         	goto	i2u16_41
   893  000184  EFC6  F000         	goto	i2u16_40
   894  000188                     i2u16_41:
   895  000188  EFEE  F000         	goto	i2l560
   896  00018C                     i2u16_40:
   897  00018C  0E01               	movlw	1
   898  00018E  6E07               	movwf	___lwdiv@counter^0,c
   899  000190  EFCE  F000         	goto	i2l972
   900  000194                     i2l970:
   901  000194  90D8               	bcf	status,0,c
   902  000196  3603               	rlcf	___lwdiv@divisor^0,f,c
   903  000198  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
   904  00019A  2A07               	incf	___lwdiv@counter^0,f,c
   905  00019C                     i2l972:
   906  00019C  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
   907  00019E  EFD3  F000         	goto	i2u17_41
   908  0001A2  EFD5  F000         	goto	i2u17_40
   909  0001A6                     i2u17_41:
   910  0001A6  EFCA  F000         	goto	i2l970
   911  0001AA                     i2u17_40:
   912  0001AA                     i2l974:
   913  0001AA  90D8               	bcf	status,0,c
   914  0001AC  3605               	rlcf	___lwdiv@quotient^0,f,c
   915  0001AE  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
   916  0001B0  5003               	movf	___lwdiv@divisor^0,w,c
   917  0001B2  5C01               	subwf	___lwdiv@dividend^0,w,c
   918  0001B4  5004               	movf	(___lwdiv@divisor+1)^0,w,c
   919  0001B6  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
   920  0001B8  A0D8               	btfss	status,0,c
   921  0001BA  EFE1  F000         	goto	i2u18_41
   922  0001BE  EFE3  F000         	goto	i2u18_40
   923  0001C2                     i2u18_41:
   924  0001C2  EFE8  F000         	goto	i2l982
   925  0001C6                     i2u18_40:
   926  0001C6  5003               	movf	___lwdiv@divisor^0,w,c
   927  0001C8  5E01               	subwf	___lwdiv@dividend^0,f,c
   928  0001CA  5004               	movf	(___lwdiv@divisor+1)^0,w,c
   929  0001CC  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
   930  0001CE  8005               	bsf	___lwdiv@quotient^0,0,c
   931  0001D0                     i2l982:
   932  0001D0  90D8               	bcf	status,0,c
   933  0001D2  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
   934  0001D4  3203               	rrcf	___lwdiv@divisor^0,f,c
   935  0001D6  2E07               	decfsz	___lwdiv@counter^0,f,c
   936  0001D8  EFD5  F000         	goto	i2l974
   937  0001DC                     i2l560:
   938  0001DC  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
   939  0001E0  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
   940  0001E4  0012               	return		;funcret
   941  0001E6                     __end_of___lwdiv:
   942                           	callstack 0
   943  0000                     
   944                           	psect	rparam
   945  0000                     
   946                           	psect	temp
   947  000032                     btemp:
   948                           	callstack 0
   949  000032                     	ds	1
   950  0000                     int$flags	set	btemp
   951  0000                     wtemp8	set	btemp+1
   952  0000                     ttemp5	set	btemp+1
   953  0000                     ttemp6	set	btemp+4
   954  0000                     ttemp7	set	btemp+8
   955                           
   956                           	psect	idloc
   957                           
   958                           ;Config register IDLOC0 @ 0x200000
   959                           ;	unspecified, using default values
   960  200000                     	org	2097152
   961  200000  FF                 	db	255
   962                           
   963                           ;Config register IDLOC1 @ 0x200001
   964                           ;	unspecified, using default values
   965  200001                     	org	2097153
   966  200001  FF                 	db	255
   967                           
   968                           ;Config register IDLOC2 @ 0x200002
   969                           ;	unspecified, using default values
   970  200002                     	org	2097154
   971  200002  FF                 	db	255
   972                           
   973                           ;Config register IDLOC3 @ 0x200003
   974                           ;	unspecified, using default values
   975  200003                     	org	2097155
   976  200003  FF                 	db	255
   977                           
   978                           ;Config register IDLOC4 @ 0x200004
   979                           ;	unspecified, using default values
   980  200004                     	org	2097156
   981  200004  FF                 	db	255
   982                           
   983                           ;Config register IDLOC5 @ 0x200005
   984                           ;	unspecified, using default values
   985  200005                     	org	2097157
   986  200005  FF                 	db	255
   987                           
   988                           ;Config register IDLOC6 @ 0x200006
   989                           ;	unspecified, using default values
   990  200006                     	org	2097158
   991  200006  FF                 	db	255
   992                           
   993                           ;Config register IDLOC7 @ 0x200007
   994                           ;	unspecified, using default values
   995  200007                     	org	2097159
   996  200007  FF                 	db	255
   997                           
   998                           	psect	config
   999                           
  1000                           ; Padding undefined space
  1001  300000                     	org	3145728
  1002  300000  FF                 	db	255
  1003                           
  1004                           ;Config register CONFIG1H @ 0x300001
  1005                           ;	Oscillator Selection bits
  1006                           ;	OSC = RC, 11XX External RC oscillator, CLKO function on RA6
  1007                           ;	Fail-Safe Clock Monitor Enable bit
  1008                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1009                           ;	Internal External Oscillator Switchover bit
  1010                           ;	IESO = ON, Internal External Switchover mode enabled
  1011  300001                     	org	3145729
  1012  300001  CC                 	db	204
  1013                           
  1014                           ;Config register CONFIG2L @ 0x300002
  1015                           ;	Power-up Timer Enable bit
  1016                           ;	PWRTEN = OFF, PWRT disabled
  1017                           ;	Brown-out Reset Enable bits
  1018                           ;	BOREN = ON, Brown-out Reset enabled
  1019                           ;	Brown Out Reset Voltage bits
  1020                           ;	BORV = 0x3, unprogrammed default
  1021  300002                     	org	3145730
  1022  300002  0F                 	db	15
  1023                           
  1024                           ;Config register CONFIG2H @ 0x300003
  1025                           ;	Watchdog Timer Enable bit
  1026                           ;	WDTEN = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1027                           ;	Watchdog Timer Postscale Select bits
  1028                           ;	WDPS = 32768, 1:32768
  1029                           ;	Watchdog Timer Window Enable bit
  1030                           ;	WINEN = OFF, WDT window disabled
  1031  300003                     	org	3145731
  1032  300003  3E                 	db	62
  1033                           
  1034                           ;Config register CONFIG3L @ 0x300004
  1035                           ;	PWM output pins Reset state control
  1036                           ;	PWMPIN = OFF, PWM outputs disabled upon Reset (default)
  1037                           ;	Low-Side Transistors Polarity
  1038                           ;	LPOL = HIGH, PWM0, 2, 4 and 6 are active-high
  1039                           ;	High-Side Transistors Polarity
  1040                           ;	HPOL = HIGH, PWM1, 3, 5 and 7 are active-high
  1041                           ;	Timer1 Oscillator MUX
  1042                           ;	T1OSCMX = ON, Low-power Timer1 operation when microcontroller is in Sleep mode
  1043  300004                     	org	3145732
  1044  300004  3C                 	db	60
  1045                           
  1046                           ;Config register CONFIG3H @ 0x300005
  1047                           ;	FLTA MUX bit
  1048                           ;	FLTAMX = RC1, FLTA input is multiplexed with RC1
  1049                           ;	SSP I/O MUX bit
  1050                           ;	SSPMX = RD1, SCK/SCL clocks and SDA/SDI data are multiplexed with RD3 and RD2, respect
      +                          ively. SDO output is multiplexed with RD1.
  1051                           ;	PWM4 MUX bit
  1052                           ;	PWM4MX = RB5, PWM4 output is multiplexed with RB5
  1053                           ;	TMR0/T5CKI External clock MUX bit
  1054                           ;	EXCLKMX = RC3, TMR0/T5CKI external clock input is multiplexed with RC3
  1055                           ;	MCLR Pin Enable bit
  1056                           ;	MCLRE = ON, Enabled
  1057  300005                     	org	3145733
  1058  300005  99                 	db	153
  1059                           
  1060                           ;Config register CONFIG4L @ 0x300006
  1061                           ;	Stack Full/Underflow Reset Enable bit
  1062                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1063                           ;	Low-Voltage ICSP Enable bit
  1064                           ;	LVP = ON, Low-voltage ICSP enabled
  1065                           ;	Background Debugger Enable bit
  1066                           ;	DEBUG = 0x1, unprogrammed default
  1067  300006                     	org	3145734
  1068  300006  85                 	db	133
  1069                           
  1070                           ; Padding undefined space
  1071  300007                     	org	3145735
  1072  300007  FF                 	db	255
  1073                           
  1074                           ;Config register CONFIG5L @ 0x300008
  1075                           ;	Code Protection bit
  1076                           ;	CP0 = OFF, Block 0 (000200-000FFFh) not code-protected
  1077                           ;	Code Protection bit
  1078                           ;	CP1 = OFF, Block 1 (001000-001FFF) not code-protected
  1079                           ;	Code Protection bit
  1080                           ;	CP2 = OFF, Block 2 (002000-002FFFh) not code-protected
  1081                           ;	Code Protection bit
  1082                           ;	CP3 = OFF, Block 3 (003000-003FFFh) not code-protected
  1083  300008                     	org	3145736
  1084  300008  0F                 	db	15
  1085                           
  1086                           ;Config register CONFIG5H @ 0x300009
  1087                           ;	Boot Block Code Protection bit
  1088                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code-protected
  1089                           ;	Data EEPROM Code Protection bit
  1090                           ;	CPD = OFF, Data EEPROM not code-protected
  1091  300009                     	org	3145737
  1092  300009  C0                 	db	192
  1093                           
  1094                           ;Config register CONFIG6L @ 0x30000A
  1095                           ;	Write Protection bit
  1096                           ;	WRT0 = OFF, Block 0 (000200-000FFFh) not write-protected
  1097                           ;	Write Protection bit
  1098                           ;	WRT1 = OFF, Block 1 (001000-001FFF) not write-protected
  1099                           ;	Write Protection bit
  1100                           ;	WRT2 = OFF, Block 2 (002000-002FFFh) not write-protected
  1101                           ;	Write Protection bit
  1102                           ;	WRT3 = OFF, Block 3 (003000-003FFFh) not write-protected
  1103  30000A                     	org	3145738
  1104  30000A  0F                 	db	15
  1105                           
  1106                           ;Config register CONFIG6H @ 0x30000B
  1107                           ;	Configuration Register Write Protection bit
  1108                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1109                           ;	Boot Block Write Protection bit
  1110                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
  1111                           ;	Data EEPROM Write Protection bit
  1112                           ;	WRTD = OFF, Data EEPROM not write-protected
  1113  30000B                     	org	3145739
  1114  30000B  E0                 	db	224
  1115                           
  1116                           ;Config register CONFIG7L @ 0x30000C
  1117                           ;	Table Read Protection bit
  1118                           ;	EBTR0 = OFF, Block 0 (000200-000FFFh) not protected from table reads executed in other
      +                           blocks
  1119                           ;	Table Read Protection bit
  1120                           ;	EBTR1 = OFF, Block 1 (001000-001FFF) not protected from table reads executed in other 
      +                          blocks
  1121                           ;	Table Read Protection bit
  1122                           ;	EBTR2 = OFF, Block 2 (002000-002FFFh) not protected from table reads executed in other
      +                           blocks
  1123                           ;	Table Read Protection bit
  1124                           ;	EBTR3 = OFF, Block 3 (003000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1125  30000C                     	org	3145740
  1126  30000C  0F                 	db	15
  1127                           
  1128                           ;Config register CONFIG7H @ 0x30000D
  1129                           ;	Boot Block Table Read Protection bit
  1130                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
  1131  30000D                     	org	3145741
  1132  30000D  40                 	db	64
  1133                           tosu	equ	0xFFF
  1134                           tosh	equ	0xFFE
  1135                           tosl	equ	0xFFD
  1136                           stkptr	equ	0xFFC
  1137                           pclatu	equ	0xFFB
  1138                           pclath	equ	0xFFA
  1139                           pcl	equ	0xFF9
  1140                           tblptru	equ	0xFF8
  1141                           tblptrh	equ	0xFF7
  1142                           tblptrl	equ	0xFF6
  1143                           tablat	equ	0xFF5
  1144                           prodh	equ	0xFF4
  1145                           prodl	equ	0xFF3
  1146                           indf0	equ	0xFEF
  1147                           postinc0	equ	0xFEE
  1148                           postdec0	equ	0xFED
  1149                           preinc0	equ	0xFEC
  1150                           plusw0	equ	0xFEB
  1151                           fsr0h	equ	0xFEA
  1152                           fsr0l	equ	0xFE9
  1153                           wreg	equ	0xFE8
  1154                           indf1	equ	0xFE7
  1155                           postinc1	equ	0xFE6
  1156                           postdec1	equ	0xFE5
  1157                           preinc1	equ	0xFE4
  1158                           plusw1	equ	0xFE3
  1159                           fsr1h	equ	0xFE2
  1160                           fsr1l	equ	0xFE1
  1161                           bsr	equ	0xFE0
  1162                           indf2	equ	0xFDF
  1163                           postinc2	equ	0xFDE
  1164                           postdec2	equ	0xFDD
  1165                           preinc2	equ	0xFDC
  1166                           plusw2	equ	0xFDB
  1167                           fsr2h	equ	0xFDA
  1168                           fsr2l	equ	0xFD9
  1169                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      49
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_itoa
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _setupTimer0
                          _setupUART
 ---------------------------------------------------------------------------------
 (1) _setupUART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0    1759
                                             22 COMRAM     4     4      0
                               _itoa
                            _tx_char
 ---------------------------------------------------------------------------------
 (3) _tx_char                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1698
                                             16 COMRAM     6     0      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1307
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setupTimer0
   _setupUART

 _ISR (ROOT)
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _tx_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      31       1       52.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      31       3        0.0%
DATA                 0      0      31      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 01 16:23:35 2021

                     l63 02A6                       l57 02E4                       l66 02BE  
                     l58 02E4                      l930 02A4                      l922 02A8  
                    l924 02BA                      l926 028E                      l928 029C  
                    l954 02D6                      l956 02DC                      _ISR 0008  
                    wreg 000FE8                     ?_ISR 0001                     ISR@i 0019  
                   _RCIF 007CF5                     i2l52 00A0                     i2l75 02F2  
                   i2l78 0300                     _TMR0 000FD6                     _TRMT 007D61  
                   _main 02D6                     _itoa 024A                     fsr2h 000FDA  
                   indf2 000FDF                     fsr2l 000FD9                     btemp 0032  
                   _utoa 00B0                     start 00AC             ___param_bank 000000  
                  ??_ISR 0017                    ?_main 0001                    ?_itoa 0011  
                  ?_utoa 0008          __end_of___lwdiv 01E6          __end_of___lwmod 024A  
                  i2l560 01DC                    i2l570 0240                    i2l567 01E4  
                  i2l752 0144                    i2l920 02EE                    i2l577 0248  
                  i2l754 0170                    i2l746 028C                    i2l970 0194  
                  i2l980 01CE                    i2l972 019C                    i2l964 0172  
                  i2l982 01D0                    i2l974 01AA                    i2l966 017A  
                  i2l990 0200                    i2l984 01D6                    i2l976 01B0  
                  i2l968 018C                    i2l992 0208                    i2l978 01C6  
                  i2l994 0216                    i2l986 01E6                    i2l996 022C  
                  i2l988 01F8                    i2l998 0234                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _PORTB 000F81                    _TRISB 000F93  
                  _TXREG 000FAD                    _count 001B                    _speed 001D  
                  ttemp5 0033                    ttemp6 0036                    ttemp7 003A  
                  utoa@c 0010          __end_of_tx_char 0302                    utoa@v 000E  
                  status 000FD8                    wtemp8 0033             _stringBuffer 001E  
        __initialization 02C0             __end_of_main 02EC             __end_of_itoa 028E  
           __end_of_utoa 0172                   ??_main 001B                   ??_itoa 0017  
                 ??_utoa 000E            __activetblptr 000000                   i2l1000 023A  
                 i2l1010 00EA                   i2l1002 00B0                   i2l1020 0140  
                 i2l1012 00F6                   i2l1004 00B8                   i2l1022 0148  
                 i2l1014 00FC                   i2l1006 00D4                   i2l1024 0154  
                 i2l1016 0114                   i2l1008 00D8                   i2l1040 0270  
                 i2l1032 024A                   i2l1026 015A                   i2l1018 0130  
                 i2l1034 0258                   i2l1050 0036                   i2l1028 016C  
                 i2l1036 0264                   i2l1060 0076                   i2l1052 003A  
                 i2l1044 0012                   i2l1038 0268                   i2l1062 0092  
                 i2l1054 0054                   i2l1046 0020                   i2l1064 0098  
                 i2l1056 0060                   i2l1048 0024                   i2l1058 0072  
              ??___lwdiv 0005                ??___lwmod 0005                   clear_0 02C6  
                 isa$std 000001                ??_tx_char 0001             ?_setupTimer0 0001  
             __accesstop 0060  __end_of__initialization 02CC            ___rparam_used 000001  
         __pcstackCOMRAM 0001       __size_of_setupUART 0018                  i2u11_40 0300  
                i2u11_41 02FC                  i2u20_40 0216                  i2u20_41 0212  
                i2u21_40 022C                  i2u21_41 0228                  i2u22_40 00EA  
                i2u22_41 00E6                  i2u23_40 0140                  i2u23_41 013C  
                i2u16_40 018C                  i2u24_40 016C                  i2u16_41 0188  
                i2u24_41 0168                  i2u17_40 01AA                  i2u25_40 0258  
                i2u17_41 01A6                  i2u25_41 0254                  i2u18_40 01C6  
                i2u26_40 0020                  i2u18_41 01C2                  i2u26_41 001C  
                i2u19_40 01F8                  i2u27_40 0036                  i2u19_41 01F4  
                i2u27_41 0032                  i2u28_40 0092                  i2u28_41 008E  
                __Hparam 0000                  __Lparam 0000                  ___lwdiv 0172  
                ___lwmod 01E6                  __pcinit 02C0                  __ramtop 0300  
                __ptext0 02D6                  __ptext1 02A8                  __ptext2 028E  
                __ptext4 02EC                  __ptext5 024A                  __ptext6 00B0  
                __ptext7 01E6                  __ptext8 0172                _T0CONbits 000FD5  
           __size_of_ISR 00A4                  _tx_char 02EC     end_of_initialization 02CC  
   __size_of_setupTimer0 001A                  itoa@buf 0011                  itoa@val 0013  
      __end_of_setupUART 02C0                _RCSTAbits 000FAB                  postinc0 000FEE  
                utoa@buf 0008                  utoa@val 000A                _TRISCbits 000F94  
              _TXSTAbits 000FAC      start_initialization 02C0              __end_of_ISR 00AC  
            __pbssCOMRAM 001B         ___lwdiv@dividend 0001                __pintcode 0008  
               ?___lwdiv 0001                 ?___lwmod 0001         ___lwdiv@quotient 0005  
               ?_tx_char 0001                 _PIE1bits 000F9D                _setupUART 02A8  
          ??_setupTimer0 001B                 __Hrparam 0000                 __Lrparam 0000  
             ?_setupUART 0001         __size_of___lwdiv 0074         __size_of___lwmod 0064  
        ___lwdiv@divisor 0003          ___lwdiv@counter 0007         __size_of_tx_char 0016  
          __size_of_main 0016            __size_of_itoa 0044            __size_of_utoa 00C2  
    __end_of_setupTimer0 02A8                 isa$xinst 000000                 int$flags 0032  
             _INTCONbits 000FF2                 itoa@base 0015                 intlevel2 0000  
       ___lwmod@dividend 0001              ??_setupUART 001B                 tx_char@a 0001  
               utoa@base 000C          ___lwmod@divisor 0003          ___lwmod@counter 0005  
            _setupTimer0 028E  
