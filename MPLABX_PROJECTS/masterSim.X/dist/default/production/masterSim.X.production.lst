

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 15 13:03:16 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4431 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     _TMR0	set	4054
    58  0000                     _TXREG	set	4013
    59  0000                     _RCREG	set	4014
    60  0000                     _SPBRG	set	4015
    61  0000                     _PIE1bits	set	3997
    62  0000                     _RCSTAbits	set	4011
    63  0000                     _TXSTAbits	set	4012
    64  0000                     _TRISCbits	set	3988
    65  0000                     _T0CONbits	set	4053
    66  0000                     _TRISEbits	set	3990
    67  0000                     _TRISD	set	3989
    68  0000                     _TRISB	set	3987
    69  0000                     _PORTD	set	3971
    70  0000                     _PORTB	set	3969
    71  0000                     _INTCONbits	set	4082
    72  0000                     _TRMT	set	32097
    73  0000                     _RCIF	set	31989
    74                           
    75                           ; #config settings
    76                           
    77                           	psect	cinit
    78  0003C6                     __pcinit:
    79                           	callstack 0
    80  0003C6                     start_initialization:
    81                           	callstack 0
    82  0003C6                     __initialization:
    83                           	callstack 0
    84                           
    85                           ; Clear objects allocated to COMRAM (24 bytes)
    86  0003C6  EE00  F01B         	lfsr	0,__pbssCOMRAM
    87  0003CA  0E18               	movlw	24
    88  0003CC                     clear_0:
    89  0003CC  6AEE               	clrf	postinc0,c
    90  0003CE  06E8               	decf	wreg,f,c
    91  0003D0  E1FD               	bnz	clear_0
    92  0003D2                     end_of_initialization:
    93                           	callstack 0
    94  0003D2                     __end_of__initialization:
    95                           	callstack 0
    96  0003D2  9033               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    97  0003D4  9233               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    98  0003D6  0100               	movlb	0
    99  0003D8  EFBB  F001         	goto	_main	;jump to C main() function
   100                           
   101                           	psect	bssCOMRAM
   102  00001B                     __pbssCOMRAM:
   103                           	callstack 0
   104  00001B                     _count:
   105                           	callstack 0
   106  00001B                     	ds	2
   107  00001D                     _u2:
   108                           	callstack 0
   109  00001D                     	ds	1
   110  00001E                     _u1:
   111                           	callstack 0
   112  00001E                     	ds	1
   113  00001F                     _stringBuffer:
   114                           	callstack 0
   115  00001F                     	ds	20
   116                           
   117                           	psect	cstackCOMRAM
   118  000001                     __pcstackCOMRAM:
   119                           	callstack 0
   120  000001                     ?___lwdiv:
   121                           	callstack 0
   122  000001                     ?___lwmod:
   123                           	callstack 0
   124  000001                     tx_char@a:
   125                           	callstack 0
   126  000001                     ___lwdiv@dividend:
   127                           	callstack 0
   128  000001                     ___lwmod@dividend:
   129                           	callstack 0
   130                           
   131                           ; 2 bytes @ 0x0
   132  000001                     	ds	2
   133  000003                     ___lwdiv@divisor:
   134                           	callstack 0
   135  000003                     ___lwmod@divisor:
   136                           	callstack 0
   137                           
   138                           ; 2 bytes @ 0x2
   139  000003                     	ds	2
   140  000005                     ___lwmod@counter:
   141                           	callstack 0
   142  000005                     ___lwdiv@quotient:
   143                           	callstack 0
   144                           
   145                           ; 2 bytes @ 0x4
   146  000005                     	ds	2
   147  000007                     ___lwdiv@counter:
   148                           	callstack 0
   149                           
   150                           ; 1 bytes @ 0x6
   151  000007                     	ds	1
   152  000008                     utoa@buf:
   153                           	callstack 0
   154                           
   155                           ; 2 bytes @ 0x7
   156  000008                     	ds	2
   157  00000A                     utoa@val:
   158                           	callstack 0
   159                           
   160                           ; 2 bytes @ 0x9
   161  00000A                     	ds	2
   162  00000C                     utoa@base:
   163                           	callstack 0
   164                           
   165                           ; 2 bytes @ 0xB
   166  00000C                     	ds	2
   167  00000E                     utoa@v:
   168                           	callstack 0
   169                           
   170                           ; 2 bytes @ 0xD
   171  00000E                     	ds	2
   172  000010                     utoa@c:
   173                           	callstack 0
   174                           
   175                           ; 1 bytes @ 0xF
   176  000010                     	ds	1
   177  000011                     itoa@buf:
   178                           	callstack 0
   179                           
   180                           ; 2 bytes @ 0x10
   181  000011                     	ds	2
   182  000013                     itoa@val:
   183                           	callstack 0
   184                           
   185                           ; 2 bytes @ 0x12
   186  000013                     	ds	2
   187  000015                     itoa@base:
   188                           	callstack 0
   189                           
   190                           ; 2 bytes @ 0x14
   191  000015                     	ds	2
   192  000017                     ??_ISR:
   193                           
   194                           ; 1 bytes @ 0x16
   195  000017                     	ds	2
   196  000019                     ISR@i:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x18
   200  000019                     	ds	2
   201  00001B                     
   202                           ; 1 bytes @ 0x1A
   203 ;;
   204 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   205 ;;
   206 ;; *************** function _main *****************
   207 ;; Defined at:
   208 ;;		line 134 in file "masterSim.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;		None
   213 ;; Return value:  Size  Location     Type
   214 ;;                  1    wreg      void 
   215 ;; Registers used:
   216 ;;		wreg, status,2, cstack
   217 ;; Tracked objects:
   218 ;;		On entry : 0/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   222 ;;      Params:         0       0       0       0
   223 ;;      Locals:         0       0       0       0
   224 ;;      Temps:          0       0       0       0
   225 ;;      Totals:         0       0       0       0
   226 ;;Total ram usage:        0 bytes
   227 ;; Hardware stack levels required when called: 5
   228 ;; This function calls:
   229 ;;		_setupTimer0
   230 ;;		_setupUART
   231 ;; This function is called by:
   232 ;;		Startup code after reset
   233 ;; This function uses a non-reentrant model
   234 ;;
   235                           
   236                           	psect	text0
   237  000376                     __ptext0:
   238                           	callstack 0
   239  000376                     _main:
   240                           	callstack 26
   241  000376                     
   242                           ;masterSim.c: 135: TRISB = 0xFF;
   243  000376  6893               	setf	147,c	;volatile
   244                           
   245                           ;masterSim.c: 136: TRISD = 0xFF;
   246  000378  6895               	setf	149,c	;volatile
   247                           
   248                           ;masterSim.c: 138: TRISEbits.RE0 = 0;
   249  00037A  9096               	bcf	150,0,c	;volatile
   250                           
   251                           ;masterSim.c: 139: TRISEbits.RE1 = 0;
   252  00037C  9296               	bcf	150,1,c	;volatile
   253                           
   254                           ;masterSim.c: 140: TRISEbits.RE2 = 0;
   255  00037E  9496               	bcf	150,2,c	;volatile
   256                           
   257                           ;masterSim.c: 141: INTCONbits.GIE = 1; INTCONbits.PEIE = 1;
   258  000380  8EF2               	bsf	242,7,c	;volatile
   259  000382  8CF2               	bsf	242,6,c	;volatile
   260  000384                     
   261                           ;masterSim.c: 142: setupUART();
   262  000384  ECD7  F001         	call	_setupUART	;wreg free
   263                           
   264                           ;masterSim.c: 143: setupTimer0();
   265  000388  ECCA  F001         	call	_setupTimer0	;wreg free
   266  00038C                     l74:
   267  00038C  EFC6  F001         	goto	l74
   268  000390  EFCA  F000         	goto	start
   269  000394                     __end_of_main:
   270                           	callstack 0
   271                           
   272 ;; *************** function _setupUART *****************
   273 ;; Defined at:
   274 ;;		line 165 in file "masterSim.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		wreg, status,2
   283 ;; Tracked objects:
   284 ;;		On entry : 0/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   288 ;;      Params:         0       0       0       0
   289 ;;      Locals:         0       0       0       0
   290 ;;      Temps:          0       0       0       0
   291 ;;      Totals:         0       0       0       0
   292 ;;Total ram usage:        0 bytes
   293 ;; Hardware stack levels used: 1
   294 ;; Hardware stack levels required when called: 4
   295 ;; This function calls:
   296 ;;		Nothing
   297 ;; This function is called by:
   298 ;;		_main
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302                           	psect	text1
   303  0003AE                     __ptext1:
   304                           	callstack 0
   305  0003AE                     _setupUART:
   306                           	callstack 26
   307  0003AE                     
   308                           ;masterSim.c: 166: TRISCbits.RC6 = 0;
   309  0003AE  9C94               	bcf	148,6,c	;volatile
   310                           
   311                           ;masterSim.c: 167: TRISCbits.RC7 = 1;
   312  0003B0  8E94               	bsf	148,7,c	;volatile
   313                           
   314                           ;masterSim.c: 168: TXSTAbits.BRGH = 0;
   315  0003B2  94AC               	bcf	172,2,c	;volatile
   316                           
   317                           ;masterSim.c: 169: TXSTAbits.SYNC = 0;
   318  0003B4  98AC               	bcf	172,4,c	;volatile
   319                           
   320                           ;masterSim.c: 170: TXSTAbits.TXEN = 1;
   321  0003B6  8AAC               	bsf	172,5,c	;volatile
   322                           
   323                           ;masterSim.c: 171: RCSTAbits.SPEN = 1;
   324  0003B8  8EAB               	bsf	171,7,c	;volatile
   325                           
   326                           ;masterSim.c: 172: RCSTAbits.CREN = 1;
   327  0003BA  88AB               	bsf	171,4,c	;volatile
   328                           
   329                           ;masterSim.c: 173: PIE1bits.RCIE = 1;
   330  0003BC  8A9D               	bsf	157,5,c	;volatile
   331                           
   332                           ;masterSim.c: 174: PIE1bits.TXIE = 0;
   333  0003BE  989D               	bcf	157,4,c	;volatile
   334  0003C0                     
   335                           ;masterSim.c: 175: SPBRG = 31;
   336  0003C0  0E1F               	movlw	31
   337  0003C2  6EAF               	movwf	175,c	;volatile
   338  0003C4  0012               	return		;funcret
   339  0003C6                     __end_of_setupUART:
   340                           	callstack 0
   341                           
   342 ;; *************** function _setupTimer0 *****************
   343 ;; Defined at:
   344 ;;		line 150 in file "masterSim.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;		None
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, status,2
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   358 ;;      Params:         0       0       0       0
   359 ;;      Locals:         0       0       0       0
   360 ;;      Temps:          0       0       0       0
   361 ;;      Totals:         0       0       0       0
   362 ;;Total ram usage:        0 bytes
   363 ;; Hardware stack levels used: 1
   364 ;; Hardware stack levels required when called: 4
   365 ;; This function calls:
   366 ;;		Nothing
   367 ;; This function is called by:
   368 ;;		_main
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           	psect	text2
   373  000394                     __ptext2:
   374                           	callstack 0
   375  000394                     _setupTimer0:
   376                           	callstack 26
   377  000394                     
   378                           ;masterSim.c: 151: INTCONbits.TMR0IE = 1;
   379  000394  8AF2               	bsf	242,5,c	;volatile
   380                           
   381                           ;masterSim.c: 152: T0CONbits.T016BIT = 1;
   382  000396  8CD5               	bsf	213,6,c	;volatile
   383                           
   384                           ;masterSim.c: 153: T0CONbits.T0CS = 0;
   385  000398  9AD5               	bcf	213,5,c	;volatile
   386                           
   387                           ;masterSim.c: 157: T0CONbits.PSA = 1;
   388  00039A  86D5               	bsf	213,3,c	;volatile
   389                           
   390                           ;masterSim.c: 158: T0CONbits.T0PS2 = 0;
   391  00039C  94D5               	bcf	213,2,c	;volatile
   392                           
   393                           ;masterSim.c: 159: T0CONbits.T0PS1 = 0;
   394  00039E  92D5               	bcf	213,1,c	;volatile
   395                           
   396                           ;masterSim.c: 160: T0CONbits.T0PS0 = 0;
   397  0003A0  90D5               	bcf	213,0,c	;volatile
   398  0003A2                     
   399                           ;masterSim.c: 161: TMR0 = 250;
   400  0003A2  0E00               	movlw	0
   401  0003A4  6ED7               	movwf	215,c	;volatile
   402  0003A6  0EFA               	movlw	250
   403  0003A8  6ED6               	movwf	214,c	;volatile
   404  0003AA                     
   405                           ;masterSim.c: 162: T0CONbits.TMR0ON = 1;
   406  0003AA  8ED5               	bsf	213,7,c	;volatile
   407  0003AC  0012               	return		;funcret
   408  0003AE                     __end_of_setupTimer0:
   409                           	callstack 0
   410                           
   411 ;; *************** function _ISR *****************
   412 ;; Defined at:
   413 ;;		line 97 in file "masterSim.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;  i               2   24[COMRAM] int 
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   427 ;;      Params:         0       0       0       0
   428 ;;      Locals:         2       0       0       0
   429 ;;      Temps:          2       0       0       0
   430 ;;      Totals:         4       0       0       0
   431 ;;Total ram usage:        4 bytes
   432 ;; Hardware stack levels used: 1
   433 ;; Hardware stack levels required when called: 3
   434 ;; This function calls:
   435 ;;		_itoa
   436 ;;		_tx_char
   437 ;; This function is called by:
   438 ;;		Interrupt level 2
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           	psect	intcode
   443  000008                     __pintcode:
   444                           	callstack 0
   445  000008                     _ISR:
   446                           	callstack 26
   447                           
   448                           ;incstack = 0
   449  000008  8233               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   450  00000A  CFD9 F017          	movff	fsr2l,??_ISR
   451  00000E  CFDA F018          	movff	fsr2h,??_ISR+1
   452  000012                     
   453                           ;masterSim.c: 98: if(INTCONbits.TMR0IF == 1) {
   454  000012  A4F2               	btfss	242,2,c	;volatile
   455  000014  EF0E  F000         	goto	i2u33_41
   456  000018  EF10  F000         	goto	i2u33_40
   457  00001C                     i2u33_41:
   458  00001C  EFC4  F000         	goto	i2l69
   459  000020                     i2u33_40:
   460  000020                     
   461                           ;masterSim.c: 99: count++;
   462  000020  4A1B               	infsnz	_count^0,f,c
   463  000022  2A1C               	incf	(_count+1)^0,f,c
   464  000024                     
   465                           ;masterSim.c: 100: if(count == 1) {
   466  000024  041B               	decf	_count^0,w,c
   467  000026  101C               	iorwf	(_count+1)^0,w,c
   468  000028  A4D8               	btfss	status,2,c
   469  00002A  EF19  F000         	goto	i2u34_41
   470  00002E  EF1B  F000         	goto	i2u34_40
   471  000032                     i2u34_41:
   472  000032  EFC4  F000         	goto	i2l69
   473  000036                     i2u34_40:
   474  000036                     
   475                           ;masterSim.c: 101: u1 = PORTB;
   476  000036  CF81 F01E          	movff	3969,_u1	;volatile
   477                           
   478                           ;masterSim.c: 102: u2 = PORTD;
   479  00003A  CF83 F01D          	movff	3971,_u2	;volatile
   480  00003E                     
   481                           ;masterSim.c: 103: itoa(stringBuffer,u1,10);
   482  00003E  0E1F               	movlw	low _stringBuffer
   483  000040  6E11               	movwf	itoa@buf^0,c
   484  000042  0E00               	movlw	high _stringBuffer
   485  000044  6E12               	movwf	(itoa@buf+1)^0,c
   486  000046  C01E  F013         	movff	_u1,itoa@val
   487  00004A  6A14               	clrf	(itoa@val+1)^0,c
   488  00004C  0E00               	movlw	0
   489  00004E  6E16               	movwf	(itoa@base+1)^0,c
   490  000050  0E0A               	movlw	10
   491  000052  6E15               	movwf	itoa@base^0,c
   492  000054  EC99  F001         	call	_itoa	;wreg free
   493  000058                     
   494                           ;masterSim.c: 104: int i = 0;
   495  000058  0E00               	movlw	0
   496  00005A  6E1A               	movwf	(ISR@i+1)^0,c
   497  00005C  0E00               	movlw	0
   498  00005E  6E19               	movwf	ISR@i^0,c
   499  000060                     
   500                           ;masterSim.c: 105: if (u1<10) {
   501  000060  0E0A               	movlw	10
   502  000062  601E               	cpfslt	_u1^0,c
   503  000064  EF36  F000         	goto	i2u35_41
   504  000068  EF38  F000         	goto	i2u35_40
   505  00006C                     i2u35_41:
   506  00006C  EF40  F000         	goto	i2l1107
   507  000070                     i2u35_40:
   508  000070                     
   509                           ;masterSim.c: 106: tx_char('0');
   510  000070  0E30               	movlw	48
   511  000072  ECEE  F001         	call	_tx_char
   512                           
   513                           ;masterSim.c: 107: tx_char('0');
   514  000076  0E30               	movlw	48
   515  000078  ECEE  F001         	call	_tx_char
   516                           
   517                           ;masterSim.c: 108: }
   518  00007C  EF60  F000         	goto	i2l1117
   519  000080                     i2l1107:
   520                           
   521                           ;masterSim.c: 109: else if (u1>10 && u1<100)
   522  000080  0E0A               	movlw	10
   523  000082  641E               	cpfsgt	_u1^0,c
   524  000084  EF46  F000         	goto	i2u36_41
   525  000088  EF48  F000         	goto	i2u36_40
   526  00008C                     i2u36_41:
   527  00008C  EF60  F000         	goto	i2l1117
   528  000090                     i2u36_40:
   529  000090  0E64               	movlw	100
   530  000092  601E               	cpfslt	_u1^0,c
   531  000094  EF4E  F000         	goto	i2u37_41
   532  000098  EF50  F000         	goto	i2u37_40
   533  00009C                     i2u37_41:
   534  00009C  EF60  F000         	goto	i2l1117
   535  0000A0                     i2u37_40:
   536  0000A0                     
   537                           ;masterSim.c: 110: tx_char('0');
   538  0000A0  0E30               	movlw	48
   539  0000A2  ECEE  F001         	call	_tx_char
   540  0000A6  EF60  F000         	goto	i2l1117
   541  0000AA                     i2l1113:
   542                           
   543                           ;masterSim.c: 112: tx_char(stringBuffer[i]);
   544  0000AA  0E1F               	movlw	low _stringBuffer
   545  0000AC  2419               	addwf	ISR@i^0,w,c
   546  0000AE  6ED9               	movwf	fsr2l,c
   547  0000B0  0E00               	movlw	high _stringBuffer
   548  0000B2  201A               	addwfc	(ISR@i+1)^0,w,c
   549  0000B4  6EDA               	movwf	fsr2h,c
   550  0000B6  50DF               	movf	indf2,w,c
   551  0000B8  ECEE  F001         	call	_tx_char
   552  0000BC                     
   553                           ;masterSim.c: 113: i++;
   554  0000BC  4A19               	infsnz	ISR@i^0,f,c
   555  0000BE  2A1A               	incf	(ISR@i+1)^0,f,c
   556  0000C0                     i2l1117:
   557  0000C0  0E1F               	movlw	low _stringBuffer
   558  0000C2  2419               	addwf	ISR@i^0,w,c
   559  0000C4  6ED9               	movwf	fsr2l,c
   560  0000C6  0E00               	movlw	high _stringBuffer
   561  0000C8  201A               	addwfc	(ISR@i+1)^0,w,c
   562  0000CA  6EDA               	movwf	fsr2h,c
   563  0000CC  50DF               	movf	indf2,w,c
   564  0000CE  A4D8               	btfss	status,2,c
   565  0000D0  EF6C  F000         	goto	i2u38_41
   566  0000D4  EF6E  F000         	goto	i2u38_40
   567  0000D8                     i2u38_41:
   568  0000D8  EF55  F000         	goto	i2l1113
   569  0000DC                     i2u38_40:
   570  0000DC                     
   571                           ;masterSim.c: 114: };masterSim.c: 115: itoa(stringBuffer,u2,10);
   572  0000DC  0E1F               	movlw	low _stringBuffer
   573  0000DE  6E11               	movwf	itoa@buf^0,c
   574  0000E0  0E00               	movlw	high _stringBuffer
   575  0000E2  6E12               	movwf	(itoa@buf+1)^0,c
   576  0000E4  C01D  F013         	movff	_u2,itoa@val
   577  0000E8  6A14               	clrf	(itoa@val+1)^0,c
   578  0000EA  0E00               	movlw	0
   579  0000EC  6E16               	movwf	(itoa@base+1)^0,c
   580  0000EE  0E0A               	movlw	10
   581  0000F0  6E15               	movwf	itoa@base^0,c
   582  0000F2  EC99  F001         	call	_itoa	;wreg free
   583  0000F6                     
   584                           ;masterSim.c: 116: i = 0;
   585  0000F6  0E00               	movlw	0
   586  0000F8  6E1A               	movwf	(ISR@i+1)^0,c
   587  0000FA  0E00               	movlw	0
   588  0000FC  6E19               	movwf	ISR@i^0,c
   589  0000FE                     
   590                           ;masterSim.c: 117: if (u2<10) {
   591  0000FE  0E0A               	movlw	10
   592  000100  601D               	cpfslt	_u2^0,c
   593  000102  EF85  F000         	goto	i2u39_41
   594  000106  EF87  F000         	goto	i2u39_40
   595  00010A                     i2u39_41:
   596  00010A  EF8F  F000         	goto	i2l1127
   597  00010E                     i2u39_40:
   598  00010E                     
   599                           ;masterSim.c: 118: tx_char('0');
   600  00010E  0E30               	movlw	48
   601  000110  ECEE  F001         	call	_tx_char
   602                           
   603                           ;masterSim.c: 119: tx_char('0');
   604  000114  0E30               	movlw	48
   605  000116  ECEE  F001         	call	_tx_char
   606                           
   607                           ;masterSim.c: 120: }
   608  00011A  EFAF  F000         	goto	i2l1137
   609  00011E                     i2l1127:
   610                           
   611                           ;masterSim.c: 121: else if (u2>10 && u2<100)
   612  00011E  0E0A               	movlw	10
   613  000120  641D               	cpfsgt	_u2^0,c
   614  000122  EF95  F000         	goto	i2u40_41
   615  000126  EF97  F000         	goto	i2u40_40
   616  00012A                     i2u40_41:
   617  00012A  EFAF  F000         	goto	i2l1137
   618  00012E                     i2u40_40:
   619  00012E  0E64               	movlw	100
   620  000130  601D               	cpfslt	_u2^0,c
   621  000132  EF9D  F000         	goto	i2u41_41
   622  000136  EF9F  F000         	goto	i2u41_40
   623  00013A                     i2u41_41:
   624  00013A  EFAF  F000         	goto	i2l1137
   625  00013E                     i2u41_40:
   626  00013E                     
   627                           ;masterSim.c: 122: tx_char('0');
   628  00013E  0E30               	movlw	48
   629  000140  ECEE  F001         	call	_tx_char
   630  000144  EFAF  F000         	goto	i2l1137
   631  000148                     i2l1133:
   632                           
   633                           ;masterSim.c: 124: tx_char(stringBuffer[i]);
   634  000148  0E1F               	movlw	low _stringBuffer
   635  00014A  2419               	addwf	ISR@i^0,w,c
   636  00014C  6ED9               	movwf	fsr2l,c
   637  00014E  0E00               	movlw	high _stringBuffer
   638  000150  201A               	addwfc	(ISR@i+1)^0,w,c
   639  000152  6EDA               	movwf	fsr2h,c
   640  000154  50DF               	movf	indf2,w,c
   641  000156  ECEE  F001         	call	_tx_char
   642  00015A                     
   643                           ;masterSim.c: 125: i++;
   644  00015A  4A19               	infsnz	ISR@i^0,f,c
   645  00015C  2A1A               	incf	(ISR@i+1)^0,f,c
   646  00015E                     i2l1137:
   647  00015E  0E1F               	movlw	low _stringBuffer
   648  000160  2419               	addwf	ISR@i^0,w,c
   649  000162  6ED9               	movwf	fsr2l,c
   650  000164  0E00               	movlw	high _stringBuffer
   651  000166  201A               	addwfc	(ISR@i+1)^0,w,c
   652  000168  6EDA               	movwf	fsr2h,c
   653  00016A  50DF               	movf	indf2,w,c
   654  00016C  A4D8               	btfss	status,2,c
   655  00016E  EFBB  F000         	goto	i2u42_41
   656  000172  EFBD  F000         	goto	i2u42_40
   657  000176                     i2u42_41:
   658  000176  EFA4  F000         	goto	i2l1133
   659  00017A                     i2u42_40:
   660  00017A                     
   661                           ;masterSim.c: 126: };masterSim.c: 128: tx_char(0x0a);
   662  00017A  0E0A               	movlw	10
   663  00017C  ECEE  F001         	call	_tx_char
   664  000180                     
   665                           ;masterSim.c: 129: count = 0;
   666  000180  0E00               	movlw	0
   667  000182  6E1C               	movwf	(_count+1)^0,c
   668  000184  0E00               	movlw	0
   669  000186  6E1B               	movwf	_count^0,c
   670  000188                     i2l69:
   671  000188  C018  FFDA         	movff	??_ISR+1,fsr2h
   672  00018C  C017  FFD9         	movff	??_ISR,fsr2l
   673  000190  9233               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   674  000192  0011               	retfie		f
   675  000194                     __end_of_ISR:
   676                           	callstack 0
   677                           
   678 ;; *************** function _tx_char *****************
   679 ;; Defined at:
   680 ;;		line 183 in file "masterSim.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  a               1    wreg     unsigned char 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  a               1    0[COMRAM] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   694 ;;      Params:         0       0       0       0
   695 ;;      Locals:         1       0       0       0
   696 ;;      Temps:          0       0       0       0
   697 ;;      Totals:         1       0       0       0
   698 ;;Total ram usage:        1 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_ISR
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text4
   708  0003DC                     __ptext4:
   709                           	callstack 0
   710  0003DC                     _tx_char:
   711                           	callstack 28
   712                           
   713                           ;incstack = 0
   714                           ;tx_char@a stored from wreg
   715  0003DC  6E01               	movwf	tx_char@a^0,c
   716  0003DE                     
   717                           ;masterSim.c: 184: TXREG=a;
   718  0003DE  C001  FFAD         	movff	tx_char@a,4013	;volatile
   719  0003E2                     i2l92:
   720  0003E2  A2AC               	btfss	4012,1,c	;volatile
   721  0003E4  EFF6  F001         	goto	i2u11_41
   722  0003E8  EFF8  F001         	goto	i2u11_40
   723  0003EC                     i2u11_41:
   724  0003EC  EFF1  F001         	goto	i2l92
   725  0003F0                     i2u11_40:
   726  0003F0  0012               	return		;funcret
   727  0003F2                     __end_of_tx_char:
   728                           	callstack 0
   729                           
   730 ;; *************** function _itoa *****************
   731 ;; Defined at:
   732 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;  buf             2   16[COMRAM] PTR unsigned char 
   735 ;;		 -> stringBuffer(20), 
   736 ;;  val             2   18[COMRAM] int 
   737 ;;  base            2   20[COMRAM] int 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  cp              2    0        PTR unsigned char 
   740 ;;		 -> stringBuffer(20), 
   741 ;; Return value:  Size  Location     Type
   742 ;;                  2   16[COMRAM] PTR unsigned char 
   743 ;; Registers used:
   744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   750 ;;      Params:         6       0       0       0
   751 ;;      Locals:         0       0       0       0
   752 ;;      Temps:          0       0       0       0
   753 ;;      Totals:         6       0       0       0
   754 ;;Total ram usage:        6 bytes
   755 ;; Hardware stack levels used: 1
   756 ;; Hardware stack levels required when called: 2
   757 ;; This function calls:
   758 ;;		_utoa
   759 ;; This function is called by:
   760 ;;		_ISR
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text5
   765  000332                     __ptext5:
   766                           	callstack 0
   767  000332                     _itoa:
   768                           	callstack 26
   769  000332  BE14               	btfsc	(itoa@val+1)^0,7,c
   770  000334  EFA0  F001         	goto	i2u32_40
   771  000338  EF9E  F001         	goto	i2u32_41
   772  00033C                     i2u32_41:
   773  00033C  EFAC  F001         	goto	i2l1087
   774  000340                     i2u32_40:
   775  000340  C011  FFD9         	movff	itoa@buf,fsr2l
   776  000344  C012  FFDA         	movff	itoa@buf+1,fsr2h
   777  000348  0E2D               	movlw	45
   778  00034A  6EDF               	movwf	indf2,c
   779  00034C  4A11               	infsnz	itoa@buf^0,f,c
   780  00034E  2A12               	incf	(itoa@buf+1)^0,f,c
   781  000350  6C13               	negf	itoa@val^0,c
   782  000352  1E14               	comf	(itoa@val+1)^0,f,c
   783  000354  B0D8               	btfsc	status,0,c
   784  000356  2A14               	incf	(itoa@val+1)^0,f,c
   785  000358                     i2l1087:
   786  000358  C011  F008         	movff	itoa@buf,utoa@buf
   787  00035C  C012  F009         	movff	itoa@buf+1,utoa@buf+1
   788  000360  C013  F00A         	movff	itoa@val,utoa@val
   789  000364  C014  F00B         	movff	itoa@val+1,utoa@val+1
   790  000368  C015  F00C         	movff	itoa@base,utoa@base
   791  00036C  C016  F00D         	movff	itoa@base+1,utoa@base+1
   792  000370  ECCC  F000         	call	_utoa	;wreg free
   793  000374  0012               	return		;funcret
   794  000376                     __end_of_itoa:
   795                           	callstack 0
   796                           
   797 ;; *************** function _utoa *****************
   798 ;; Defined at:
   799 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  buf             2    7[COMRAM] PTR unsigned char 
   802 ;;		 -> stringBuffer(20), 
   803 ;;  val             2    9[COMRAM] unsigned int 
   804 ;;  base            2   11[COMRAM] int 
   805 ;; Auto vars:     Size  Location     Type
   806 ;;  v               2   13[COMRAM] unsigned int 
   807 ;;  c               1   15[COMRAM] unsigned char 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  2    7[COMRAM] PTR unsigned char 
   810 ;; Registers used:
   811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   817 ;;      Params:         6       0       0       0
   818 ;;      Locals:         3       0       0       0
   819 ;;      Temps:          0       0       0       0
   820 ;;      Totals:         9       0       0       0
   821 ;;Total ram usage:        9 bytes
   822 ;; Hardware stack levels used: 1
   823 ;; Hardware stack levels required when called: 1
   824 ;; This function calls:
   825 ;;		___lwdiv
   826 ;;		___lwmod
   827 ;; This function is called by:
   828 ;;		_itoa
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text6
   833  000198                     __ptext6:
   834                           	callstack 0
   835  000198                     _utoa:
   836                           	callstack 26
   837  000198  C00A  F00E         	movff	utoa@val,utoa@v
   838  00019C  C00B  F00F         	movff	utoa@val+1,utoa@v+1
   839  0001A0                     i2l1051:
   840  0001A0  C00E  F001         	movff	utoa@v,___lwdiv@dividend
   841  0001A4  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
   842  0001A8  C00C  F003         	movff	utoa@base,___lwdiv@divisor
   843  0001AC  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
   844  0001B0  EC2D  F001         	call	___lwdiv	;wreg free
   845  0001B4  C001  F00E         	movff	?___lwdiv,utoa@v
   846  0001B8  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
   847  0001BC  4A08               	infsnz	utoa@buf^0,f,c
   848  0001BE  2A09               	incf	(utoa@buf+1)^0,f,c
   849  0001C0  500E               	movf	utoa@v^0,w,c
   850  0001C2  100F               	iorwf	(utoa@v+1)^0,w,c
   851  0001C4  A4D8               	btfss	status,2,c
   852  0001C6  EFE7  F000         	goto	i2u29_41
   853  0001CA  EFE9  F000         	goto	i2u29_40
   854  0001CE                     i2u29_41:
   855  0001CE  EFD0  F000         	goto	i2l1051
   856  0001D2                     i2u29_40:
   857  0001D2  C008  FFD9         	movff	utoa@buf,fsr2l
   858  0001D6  C009  FFDA         	movff	utoa@buf+1,fsr2h
   859  0001DA  0E00               	movlw	0
   860  0001DC  6EDF               	movwf	indf2,c
   861  0001DE  0608               	decf	utoa@buf^0,f,c
   862  0001E0  A0D8               	btfss	status,0,c
   863  0001E2  0609               	decf	(utoa@buf+1)^0,f,c
   864  0001E4                     i2l1061:
   865  0001E4  C00A  F001         	movff	utoa@val,___lwmod@dividend
   866  0001E8  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
   867  0001EC  C00C  F003         	movff	utoa@base,___lwmod@divisor
   868  0001F0  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
   869  0001F4  EC67  F001         	call	___lwmod	;wreg free
   870  0001F8  5001               	movf	?___lwmod^0,w,c
   871  0001FA  6E10               	movwf	utoa@c^0,c
   872  0001FC  C00A  F001         	movff	utoa@val,___lwdiv@dividend
   873  000200  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
   874  000204  C00C  F003         	movff	utoa@base,___lwdiv@divisor
   875  000208  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
   876  00020C  EC2D  F001         	call	___lwdiv	;wreg free
   877  000210  C001  F00A         	movff	?___lwdiv,utoa@val
   878  000214  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
   879  000218  0E09               	movlw	9
   880  00021A  6410               	cpfsgt	utoa@c^0,c
   881  00021C  EF12  F001         	goto	i2u30_41
   882  000220  EF14  F001         	goto	i2u30_40
   883  000224                     i2u30_41:
   884  000224  EF16  F001         	goto	i2l769
   885  000228                     i2u30_40:
   886  000228  0E07               	movlw	7
   887  00022A  2610               	addwf	utoa@c^0,f,c
   888  00022C                     i2l769:
   889  00022C  0E30               	movlw	48
   890  00022E  2610               	addwf	utoa@c^0,f,c
   891  000230  C008  FFD9         	movff	utoa@buf,fsr2l
   892  000234  C009  FFDA         	movff	utoa@buf+1,fsr2h
   893  000238  C010  FFDF         	movff	utoa@c,indf2
   894  00023C  0608               	decf	utoa@buf^0,f,c
   895  00023E  A0D8               	btfss	status,0,c
   896  000240  0609               	decf	(utoa@buf+1)^0,f,c
   897  000242  500A               	movf	utoa@val^0,w,c
   898  000244  100B               	iorwf	(utoa@val+1)^0,w,c
   899  000246  A4D8               	btfss	status,2,c
   900  000248  EF28  F001         	goto	i2u31_41
   901  00024C  EF2A  F001         	goto	i2u31_40
   902  000250                     i2u31_41:
   903  000250  EFF2  F000         	goto	i2l1061
   904  000254                     i2u31_40:
   905  000254                     
   906                           ;	Return value of _utoa is never used
   907  000254  4A08               	infsnz	utoa@buf^0,f,c
   908  000256  2A09               	incf	(utoa@buf+1)^0,f,c
   909  000258  0012               	return		;funcret
   910  00025A                     __end_of_utoa:
   911                           	callstack 0
   912                           
   913 ;; *************** function ___lwmod *****************
   914 ;; Defined at:
   915 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  dividend        2    0[COMRAM] unsigned int 
   918 ;;  divisor         2    2[COMRAM] unsigned int 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  counter         1    4[COMRAM] unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;                  2    0[COMRAM] unsigned int 
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   930 ;;      Params:         4       0       0       0
   931 ;;      Locals:         1       0       0       0
   932 ;;      Temps:          0       0       0       0
   933 ;;      Totals:         5       0       0       0
   934 ;;Total ram usage:        5 bytes
   935 ;; Hardware stack levels used: 1
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		_utoa
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text7
   944  0002CE                     __ptext7:
   945                           	callstack 0
   946  0002CE                     ___lwmod:
   947                           	callstack 26
   948  0002CE  5003               	movf	___lwmod@divisor^0,w,c
   949  0002D0  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
   950  0002D2  B4D8               	btfsc	status,2,c
   951  0002D4  EF6E  F001         	goto	i2u26_41
   952  0002D8  EF70  F001         	goto	i2u26_40
   953  0002DC                     i2u26_41:
   954  0002DC  EF94  F001         	goto	i2l587
   955  0002E0                     i2u26_40:
   956  0002E0  0E01               	movlw	1
   957  0002E2  6E05               	movwf	___lwmod@counter^0,c
   958  0002E4  EF78  F001         	goto	i2l1039
   959  0002E8                     i2l1037:
   960  0002E8  90D8               	bcf	status,0,c
   961  0002EA  3603               	rlcf	___lwmod@divisor^0,f,c
   962  0002EC  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
   963  0002EE  2A05               	incf	___lwmod@counter^0,f,c
   964  0002F0                     i2l1039:
   965  0002F0  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
   966  0002F2  EF7D  F001         	goto	i2u27_41
   967  0002F6  EF7F  F001         	goto	i2u27_40
   968  0002FA                     i2u27_41:
   969  0002FA  EF74  F001         	goto	i2l1037
   970  0002FE                     i2u27_40:
   971  0002FE                     i2l1041:
   972  0002FE  5003               	movf	___lwmod@divisor^0,w,c
   973  000300  5C01               	subwf	___lwmod@dividend^0,w,c
   974  000302  5004               	movf	(___lwmod@divisor+1)^0,w,c
   975  000304  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
   976  000306  A0D8               	btfss	status,0,c
   977  000308  EF88  F001         	goto	i2u28_41
   978  00030C  EF8A  F001         	goto	i2u28_40
   979  000310                     i2u28_41:
   980  000310  EF8E  F001         	goto	i2l1045
   981  000314                     i2u28_40:
   982  000314  5003               	movf	___lwmod@divisor^0,w,c
   983  000316  5E01               	subwf	___lwmod@dividend^0,f,c
   984  000318  5004               	movf	(___lwmod@divisor+1)^0,w,c
   985  00031A  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
   986  00031C                     i2l1045:
   987  00031C  90D8               	bcf	status,0,c
   988  00031E  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
   989  000320  3203               	rrcf	___lwmod@divisor^0,f,c
   990  000322  2E05               	decfsz	___lwmod@counter^0,f,c
   991  000324  EF7F  F001         	goto	i2l1041
   992  000328                     i2l587:
   993  000328  C001  F001         	movff	___lwmod@dividend,?___lwmod
   994  00032C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
   995  000330  0012               	return		;funcret
   996  000332                     __end_of___lwmod:
   997                           	callstack 0
   998                           
   999 ;; *************** function ___lwdiv *****************
  1000 ;; Defined at:
  1001 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  dividend        2    0[COMRAM] unsigned int 
  1004 ;;  divisor         2    2[COMRAM] unsigned int 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  quotient        2    4[COMRAM] unsigned int 
  1007 ;;  counter         1    6[COMRAM] unsigned char 
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  2    0[COMRAM] unsigned int 
  1010 ;; Registers used:
  1011 ;;		wreg, status,2, status,0
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1017 ;;      Params:         4       0       0       0
  1018 ;;      Locals:         3       0       0       0
  1019 ;;      Temps:          0       0       0       0
  1020 ;;      Totals:         7       0       0       0
  1021 ;;Total ram usage:        7 bytes
  1022 ;; Hardware stack levels used: 1
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_utoa
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text8
  1031  00025A                     __ptext8:
  1032                           	callstack 0
  1033  00025A                     ___lwdiv:
  1034                           	callstack 26
  1035  00025A  0E00               	movlw	0
  1036  00025C  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1037  00025E  0E00               	movlw	0
  1038  000260  6E05               	movwf	___lwdiv@quotient^0,c
  1039  000262  5003               	movf	___lwdiv@divisor^0,w,c
  1040  000264  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1041  000266  B4D8               	btfsc	status,2,c
  1042  000268  EF38  F001         	goto	i2u23_41
  1043  00026C  EF3A  F001         	goto	i2u23_40
  1044  000270                     i2u23_41:
  1045  000270  EF62  F001         	goto	i2l577
  1046  000274                     i2u23_40:
  1047  000274  0E01               	movlw	1
  1048  000276  6E07               	movwf	___lwdiv@counter^0,c
  1049  000278  EF42  F001         	goto	i2l1019
  1050  00027C                     i2l1017:
  1051  00027C  90D8               	bcf	status,0,c
  1052  00027E  3603               	rlcf	___lwdiv@divisor^0,f,c
  1053  000280  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1054  000282  2A07               	incf	___lwdiv@counter^0,f,c
  1055  000284                     i2l1019:
  1056  000284  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1057  000286  EF47  F001         	goto	i2u24_41
  1058  00028A  EF49  F001         	goto	i2u24_40
  1059  00028E                     i2u24_41:
  1060  00028E  EF3E  F001         	goto	i2l1017
  1061  000292                     i2u24_40:
  1062  000292                     i2l1021:
  1063  000292  90D8               	bcf	status,0,c
  1064  000294  3605               	rlcf	___lwdiv@quotient^0,f,c
  1065  000296  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1066  000298  5003               	movf	___lwdiv@divisor^0,w,c
  1067  00029A  5C01               	subwf	___lwdiv@dividend^0,w,c
  1068  00029C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1069  00029E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1070  0002A0  A0D8               	btfss	status,0,c
  1071  0002A2  EF55  F001         	goto	i2u25_41
  1072  0002A6  EF57  F001         	goto	i2u25_40
  1073  0002AA                     i2u25_41:
  1074  0002AA  EF5C  F001         	goto	i2l1029
  1075  0002AE                     i2u25_40:
  1076  0002AE  5003               	movf	___lwdiv@divisor^0,w,c
  1077  0002B0  5E01               	subwf	___lwdiv@dividend^0,f,c
  1078  0002B2  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1079  0002B4  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1080  0002B6  8005               	bsf	___lwdiv@quotient^0,0,c
  1081  0002B8                     i2l1029:
  1082  0002B8  90D8               	bcf	status,0,c
  1083  0002BA  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1084  0002BC  3203               	rrcf	___lwdiv@divisor^0,f,c
  1085  0002BE  2E07               	decfsz	___lwdiv@counter^0,f,c
  1086  0002C0  EF49  F001         	goto	i2l1021
  1087  0002C4                     i2l577:
  1088  0002C4  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1089  0002C8  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1090  0002CC  0012               	return		;funcret
  1091  0002CE                     __end_of___lwdiv:
  1092                           	callstack 0
  1093  0000                     
  1094                           	psect	rparam
  1095  0000                     
  1096                           	psect	temp
  1097  000033                     btemp:
  1098                           	callstack 0
  1099  000033                     	ds	1
  1100  0000                     int$flags	set	btemp
  1101  0000                     wtemp8	set	btemp+1
  1102  0000                     ttemp5	set	btemp+1
  1103  0000                     ttemp6	set	btemp+4
  1104  0000                     ttemp7	set	btemp+8
  1105                           
  1106                           	psect	idloc
  1107                           
  1108                           ;Config register IDLOC0 @ 0x200000
  1109                           ;	unspecified, using default values
  1110  200000                     	org	2097152
  1111  200000  FF                 	db	255
  1112                           
  1113                           ;Config register IDLOC1 @ 0x200001
  1114                           ;	unspecified, using default values
  1115  200001                     	org	2097153
  1116  200001  FF                 	db	255
  1117                           
  1118                           ;Config register IDLOC2 @ 0x200002
  1119                           ;	unspecified, using default values
  1120  200002                     	org	2097154
  1121  200002  FF                 	db	255
  1122                           
  1123                           ;Config register IDLOC3 @ 0x200003
  1124                           ;	unspecified, using default values
  1125  200003                     	org	2097155
  1126  200003  FF                 	db	255
  1127                           
  1128                           ;Config register IDLOC4 @ 0x200004
  1129                           ;	unspecified, using default values
  1130  200004                     	org	2097156
  1131  200004  FF                 	db	255
  1132                           
  1133                           ;Config register IDLOC5 @ 0x200005
  1134                           ;	unspecified, using default values
  1135  200005                     	org	2097157
  1136  200005  FF                 	db	255
  1137                           
  1138                           ;Config register IDLOC6 @ 0x200006
  1139                           ;	unspecified, using default values
  1140  200006                     	org	2097158
  1141  200006  FF                 	db	255
  1142                           
  1143                           ;Config register IDLOC7 @ 0x200007
  1144                           ;	unspecified, using default values
  1145  200007                     	org	2097159
  1146  200007  FF                 	db	255
  1147                           
  1148                           	psect	config
  1149                           
  1150                           ; Padding undefined space
  1151  300000                     	org	3145728
  1152  300000  FF                 	db	255
  1153                           
  1154                           ;Config register CONFIG1H @ 0x300001
  1155                           ;	Oscillator Selection bits
  1156                           ;	OSC = RC, 11XX External RC oscillator, CLKO function on RA6
  1157                           ;	Fail-Safe Clock Monitor Enable bit
  1158                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1159                           ;	Internal External Oscillator Switchover bit
  1160                           ;	IESO = ON, Internal External Switchover mode enabled
  1161  300001                     	org	3145729
  1162  300001  CC                 	db	204
  1163                           
  1164                           ;Config register CONFIG2L @ 0x300002
  1165                           ;	Power-up Timer Enable bit
  1166                           ;	PWRTEN = OFF, PWRT disabled
  1167                           ;	Brown-out Reset Enable bits
  1168                           ;	BOREN = ON, Brown-out Reset enabled
  1169                           ;	Brown Out Reset Voltage bits
  1170                           ;	BORV = 0x3, unprogrammed default
  1171  300002                     	org	3145730
  1172  300002  0F                 	db	15
  1173                           
  1174                           ;Config register CONFIG2H @ 0x300003
  1175                           ;	Watchdog Timer Enable bit
  1176                           ;	WDTEN = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1177                           ;	Watchdog Timer Postscale Select bits
  1178                           ;	WDPS = 32768, 1:32768
  1179                           ;	Watchdog Timer Window Enable bit
  1180                           ;	WINEN = OFF, WDT window disabled
  1181  300003                     	org	3145731
  1182  300003  3E                 	db	62
  1183                           
  1184                           ;Config register CONFIG3L @ 0x300004
  1185                           ;	PWM output pins Reset state control
  1186                           ;	PWMPIN = OFF, PWM outputs disabled upon Reset (default)
  1187                           ;	Low-Side Transistors Polarity
  1188                           ;	LPOL = HIGH, PWM0, 2, 4 and 6 are active-high
  1189                           ;	High-Side Transistors Polarity
  1190                           ;	HPOL = HIGH, PWM1, 3, 5 and 7 are active-high
  1191                           ;	Timer1 Oscillator MUX
  1192                           ;	T1OSCMX = ON, Low-power Timer1 operation when microcontroller is in Sleep mode
  1193  300004                     	org	3145732
  1194  300004  3C                 	db	60
  1195                           
  1196                           ;Config register CONFIG3H @ 0x300005
  1197                           ;	FLTA MUX bit
  1198                           ;	FLTAMX = RC1, FLTA input is multiplexed with RC1
  1199                           ;	SSP I/O MUX bit
  1200                           ;	SSPMX = RD1, SCK/SCL clocks and SDA/SDI data are multiplexed with RD3 and RD2, respect
      +                          ively. SDO output is multiplexed with RD1.
  1201                           ;	PWM4 MUX bit
  1202                           ;	PWM4MX = RB5, PWM4 output is multiplexed with RB5
  1203                           ;	TMR0/T5CKI External clock MUX bit
  1204                           ;	EXCLKMX = RC3, TMR0/T5CKI external clock input is multiplexed with RC3
  1205                           ;	MCLR Pin Enable bit
  1206                           ;	MCLRE = ON, Enabled
  1207  300005                     	org	3145733
  1208  300005  99                 	db	153
  1209                           
  1210                           ;Config register CONFIG4L @ 0x300006
  1211                           ;	Stack Full/Underflow Reset Enable bit
  1212                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1213                           ;	Low-Voltage ICSP Enable bit
  1214                           ;	LVP = ON, Low-voltage ICSP enabled
  1215                           ;	Background Debugger Enable bit
  1216                           ;	DEBUG = 0x1, unprogrammed default
  1217  300006                     	org	3145734
  1218  300006  85                 	db	133
  1219                           
  1220                           ; Padding undefined space
  1221  300007                     	org	3145735
  1222  300007  FF                 	db	255
  1223                           
  1224                           ;Config register CONFIG5L @ 0x300008
  1225                           ;	Code Protection bit
  1226                           ;	CP0 = OFF, Block 0 (000200-000FFFh) not code-protected
  1227                           ;	Code Protection bit
  1228                           ;	CP1 = OFF, Block 1 (001000-001FFF) not code-protected
  1229                           ;	Code Protection bit
  1230                           ;	CP2 = OFF, Block 2 (002000-002FFFh) not code-protected
  1231                           ;	Code Protection bit
  1232                           ;	CP3 = OFF, Block 3 (003000-003FFFh) not code-protected
  1233  300008                     	org	3145736
  1234  300008  0F                 	db	15
  1235                           
  1236                           ;Config register CONFIG5H @ 0x300009
  1237                           ;	Boot Block Code Protection bit
  1238                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code-protected
  1239                           ;	Data EEPROM Code Protection bit
  1240                           ;	CPD = OFF, Data EEPROM not code-protected
  1241  300009                     	org	3145737
  1242  300009  C0                 	db	192
  1243                           
  1244                           ;Config register CONFIG6L @ 0x30000A
  1245                           ;	Write Protection bit
  1246                           ;	WRT0 = OFF, Block 0 (000200-000FFFh) not write-protected
  1247                           ;	Write Protection bit
  1248                           ;	WRT1 = OFF, Block 1 (001000-001FFF) not write-protected
  1249                           ;	Write Protection bit
  1250                           ;	WRT2 = OFF, Block 2 (002000-002FFFh) not write-protected
  1251                           ;	Write Protection bit
  1252                           ;	WRT3 = OFF, Block 3 (003000-003FFFh) not write-protected
  1253  30000A                     	org	3145738
  1254  30000A  0F                 	db	15
  1255                           
  1256                           ;Config register CONFIG6H @ 0x30000B
  1257                           ;	Configuration Register Write Protection bit
  1258                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1259                           ;	Boot Block Write Protection bit
  1260                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
  1261                           ;	Data EEPROM Write Protection bit
  1262                           ;	WRTD = OFF, Data EEPROM not write-protected
  1263  30000B                     	org	3145739
  1264  30000B  E0                 	db	224
  1265                           
  1266                           ;Config register CONFIG7L @ 0x30000C
  1267                           ;	Table Read Protection bit
  1268                           ;	EBTR0 = OFF, Block 0 (000200-000FFFh) not protected from table reads executed in other
      +                           blocks
  1269                           ;	Table Read Protection bit
  1270                           ;	EBTR1 = OFF, Block 1 (001000-001FFF) not protected from table reads executed in other 
      +                          blocks
  1271                           ;	Table Read Protection bit
  1272                           ;	EBTR2 = OFF, Block 2 (002000-002FFFh) not protected from table reads executed in other
      +                           blocks
  1273                           ;	Table Read Protection bit
  1274                           ;	EBTR3 = OFF, Block 3 (003000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1275  30000C                     	org	3145740
  1276  30000C  0F                 	db	15
  1277                           
  1278                           ;Config register CONFIG7H @ 0x30000D
  1279                           ;	Boot Block Table Read Protection bit
  1280                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
  1281  30000D                     	org	3145741
  1282  30000D  40                 	db	64
  1283                           tosu	equ	0xFFF
  1284                           tosh	equ	0xFFE
  1285                           tosl	equ	0xFFD
  1286                           stkptr	equ	0xFFC
  1287                           pclatu	equ	0xFFB
  1288                           pclath	equ	0xFFA
  1289                           pcl	equ	0xFF9
  1290                           tblptru	equ	0xFF8
  1291                           tblptrh	equ	0xFF7
  1292                           tblptrl	equ	0xFF6
  1293                           tablat	equ	0xFF5
  1294                           prodh	equ	0xFF4
  1295                           prodl	equ	0xFF3
  1296                           indf0	equ	0xFEF
  1297                           postinc0	equ	0xFEE
  1298                           postdec0	equ	0xFED
  1299                           preinc0	equ	0xFEC
  1300                           plusw0	equ	0xFEB
  1301                           fsr0h	equ	0xFEA
  1302                           fsr0l	equ	0xFE9
  1303                           wreg	equ	0xFE8
  1304                           indf1	equ	0xFE7
  1305                           postinc1	equ	0xFE6
  1306                           postdec1	equ	0xFE5
  1307                           preinc1	equ	0xFE4
  1308                           plusw1	equ	0xFE3
  1309                           fsr1h	equ	0xFE2
  1310                           fsr1l	equ	0xFE1
  1311                           bsr	equ	0xFE0
  1312                           indf2	equ	0xFDF
  1313                           postinc2	equ	0xFDE
  1314                           postdec2	equ	0xFDD
  1315                           preinc2	equ	0xFDC
  1316                           plusw2	equ	0xFDB
  1317                           fsr2h	equ	0xFDA
  1318                           fsr2l	equ	0xFD9
  1319                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      50
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_itoa
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _setupTimer0
                          _setupUART
 ---------------------------------------------------------------------------------
 (1) _setupUART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0    2033
                                             22 COMRAM     4     4      0
                               _itoa
                            _tx_char
 ---------------------------------------------------------------------------------
 (3) _tx_char                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1926
                                             16 COMRAM     6     0      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1307
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setupTimer0
   _setupUART

 _ISR (ROOT)
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _tx_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      32       1       53.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      32       3        0.0%
DATA                 0      0      32      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 15 13:03:16 2021

                     l80 03AC                       l74 038C                       l83 03C4  
                     l75 038C                       _u1 001E                       _u2 001D  
                    l941 03C0                      l943 0394                      l945 03A2  
                    l947 03AA                      l939 03AE                      _ISR 0008  
                    wreg 000FE8                     ?_ISR 0001                     ISR@i 0019  
                   l1001 0376                     l1003 0384                     _RCIF 007CF5  
                   i2l92 03E2                     i2l69 0188                     i2l95 03F0  
                   _TMR0 000FD6                     _TRMT 007D61                     _main 0376  
                   _itoa 0332                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9                     btemp 0033                     _utoa 0198  
                   start 0194             ___param_bank 000000                    ??_ISR 0017  
                  ?_main 0001                    ?_itoa 0011                    ?_utoa 0008  
        __end_of___lwdiv 02CE          __end_of___lwmod 0332                    i2l584 02CC  
                  i2l577 02C4                    i2l594 0330                    i2l587 0328  
                  i2l771 0258                    i2l763 0374                    i2l769 022C  
                  i2l937 03DE                    _RCREG 000FAE                    _SPBRG 000FAF  
                  _PORTB 000F81                    _PORTD 000F83                    _TRISB 000F93  
                  _TRISD 000F95                    _TXREG 000FAD                    _count 001B  
                  ttemp5 0034                    ttemp6 0037                    ttemp7 003B  
                  utoa@c 0010          __end_of_tx_char 03F2                    utoa@v 000E  
                  status 000FD8                    wtemp8 0034             _stringBuffer 001F  
        __initialization 03C6             __end_of_main 0394             __end_of_itoa 0376  
           __end_of_utoa 025A                   ??_main 001B                   ??_itoa 0017  
                 ??_utoa 000E            __activetblptr 000000                   i2l1011 025A  
                 i2l1021 0292                   i2l1013 0262                   i2l1101 0058  
                 i2l1031 02BE                   i2l1023 0298                   i2l1015 0274  
                 i2l1111 00A0                   i2l1103 0060                   i2l1025 02AE  
                 i2l1017 027C                   i2l1041 02FE                   i2l1033 02CE  
                 i2l1121 00F6                   i2l1113 00AA                   i2l1105 0070  
                 i2l1027 02B6                   i2l1019 0284                   i2l1043 0314  
                 i2l1035 02E0                   i2l1051 01A0                   i2l1131 013E  
                 i2l1123 00FE                   i2l1115 00BC                   i2l1107 0080  
                 i2l1029 02B8                   i2l1045 031C                   i2l1037 02E8  
                 i2l1061 01E4                   i2l1053 01BC                   i2l1141 0180  
                 i2l1133 0148                   i2l1125 010E                   i2l1109 0090  
                 i2l1117 00C0                   i2l1047 0322                   i2l1039 02F0  
                 i2l1071 023C                   i2l1063 01FC                   i2l1055 01C0  
                 i2l1135 015A                   i2l1127 011E                   i2l1119 00DC  
                 i2l1073 0242                   i2l1065 0218                   i2l1057 01D2  
                 i2l1049 0198                   i2l1081 0340                   i2l1129 012E  
                 i2l1137 015E                   i2l1075 0254                   i2l1067 0228  
                 i2l1059 01DE                   i2l1083 034C                   i2l1139 017A  
                 i2l1091 0012                   i2l1069 0230                   i2l1085 0350  
                 i2l1093 0020                   i2l1087 0358                   i2l1079 0332  
                 i2l1095 0024                   i2l1097 0036                   i2l1099 003E  
              ??___lwdiv 0005                ??___lwmod 0005                   clear_0 03CC  
                 isa$std 000001                ??_tx_char 0001             ?_setupTimer0 0001  
             __accesstop 0060  __end_of__initialization 03D2            ___rparam_used 000001  
         __pcstackCOMRAM 0001       __size_of_setupUART 0018                  i2u11_40 03F0  
                i2u11_41 03EC                  i2u30_40 0228                  i2u30_41 0224  
                i2u23_40 0274                  i2u31_40 0254                  i2u23_41 0270  
                i2u31_41 0250                  i2u24_40 0292                  i2u32_40 0340  
                i2u40_40 012E                  i2u24_41 028E                  i2u32_41 033C  
                i2u40_41 012A                  i2u25_40 02AE                  i2u41_40 013E  
                i2u33_40 0020                  i2u25_41 02AA                  i2u41_41 013A  
                i2u33_41 001C                  i2u26_40 02E0                  i2u42_40 017A  
                i2u34_40 0036                  i2u26_41 02DC                  i2u42_41 0176  
                i2u34_41 0032                  i2u27_40 02FE                  i2u35_40 0070  
                i2u27_41 02FA                  i2u35_41 006C                  i2u28_40 0314  
                i2u36_40 0090                  i2u28_41 0310                  i2u36_41 008C  
                i2u29_40 01D2                  i2u37_40 00A0                  i2u29_41 01CE  
                i2u37_41 009C                  i2u38_40 00DC                  i2u38_41 00D8  
                i2u39_40 010E                  i2u39_41 010A                  __Hparam 0000  
                __Lparam 0000                  ___lwdiv 025A                  ___lwmod 02CE  
                __pcinit 03C6                  __ramtop 0300                  __ptext0 0376  
                __ptext1 03AE                  __ptext2 0394                  __ptext4 03DC  
                __ptext5 0332                  __ptext6 0198                  __ptext7 02CE  
                __ptext8 025A                _T0CONbits 000FD5             __size_of_ISR 018C  
                _tx_char 03DC     end_of_initialization 03D2     __size_of_setupTimer0 001A  
                itoa@buf 0011                  itoa@val 0013        __end_of_setupUART 03C6  
              _RCSTAbits 000FAB                  postinc0 000FEE                  utoa@buf 0008  
                utoa@val 000A                _TRISCbits 000F94                _TRISEbits 000F96  
              _TXSTAbits 000FAC      start_initialization 03C6              __end_of_ISR 0194  
            __pbssCOMRAM 001B         ___lwdiv@dividend 0001                __pintcode 0008  
               ?___lwdiv 0001                 ?___lwmod 0001         ___lwdiv@quotient 0005  
               ?_tx_char 0001                 _PIE1bits 000F9D                _setupUART 03AE  
          ??_setupTimer0 001B                 __Hrparam 0000                 __Lrparam 0000  
             ?_setupUART 0001         __size_of___lwdiv 0074         __size_of___lwmod 0064  
        ___lwdiv@divisor 0003          ___lwdiv@counter 0007         __size_of_tx_char 0016  
          __size_of_main 001E            __size_of_itoa 0044            __size_of_utoa 00C2  
    __end_of_setupTimer0 03AE                 isa$xinst 000000                 int$flags 0033  
             _INTCONbits 000FF2                 itoa@base 0015                 intlevel2 0000  
       ___lwmod@dividend 0001              ??_setupUART 001B                 tx_char@a 0001  
               utoa@base 000C          ___lwmod@divisor 0003          ___lwmod@counter 0005  
            _setupTimer0 0394  
