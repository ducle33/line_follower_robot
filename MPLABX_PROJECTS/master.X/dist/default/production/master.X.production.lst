

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Nov 27 02:24:37 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4431 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  00098C                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for _number
    76  00098C  0064               	dw	100
    77                           
    78                           ;initializer for _speedRef2
    79  00098E  B4                 	db	180
    80                           
    81                           ;initializer for _speedRef1
    82  00098F  B4                 	db	180
    83                           
    84                           ;initializer for _str
    85  000990  31                 	db	49
    86  000991  38                 	db	56
    87  000992  30                 	db	48
    88  000993  00                 	db	0
    89  0000                     _TMR1	set	4046
    90  0000                     _TMR0	set	4054
    91  0000                     _ADCON1	set	4033
    92  0000                     _ADCON0	set	4034
    93  0000                     _SSPSTAT	set	4039
    94  0000                     _TRISDbits	set	3989
    95  0000                     _IPR1bits	set	3999
    96  0000                     _TXREG	set	4013
    97  0000                     _RCREG	set	4014
    98  0000                     _SPBRG	set	4015
    99  0000                     _RCSTAbits	set	4011
   100  0000                     _TXSTAbits	set	4012
   101  0000                     _T1CONbits	set	4045
   102  0000                     _PIE1bits	set	3997
   103  0000                     _T0CONbits	set	4053
   104  0000                     _TRISCbits	set	3988
   105  0000                     _TRISB	set	3987
   106  0000                     _PORTBbits	set	3969
   107  0000                     _INTCONbits	set	4082
   108  0000                     _SSPCON1	set	4038
   109  0000                     _SSPCON1bits	set	4038
   110  0000                     _PIR1bits	set	3998
   111  0000                     _SSPBUF	set	4041
   112  0000                     _PORTCbits	set	3970
   113  0000                     _CS	set	31778
   114  0000                     _TRMT	set	32097
   115  0000                     _RCIF	set	31989
   116                           
   117                           ; #config settings
   118                           
   119                           	psect	cinit
   120  000828                     __pcinit:
   121                           	callstack 0
   122  000828                     start_initialization:
   123                           	callstack 0
   124  000828                     __initialization:
   125                           	callstack 0
   126                           
   127                           ; Initialize objects allocated to COMRAM (8 bytes)
   128                           ; load TBLPTR registers with __pidataCOMRAM
   129  000828  0E8C               	movlw	low __pidataCOMRAM
   130  00082A  6EF6               	movwf	tblptrl,c
   131  00082C  0E09               	movlw	high __pidataCOMRAM
   132  00082E  6EF7               	movwf	tblptrh,c
   133  000830  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   134  000832  6EF8               	movwf	tblptru,c
   135  000834  EE00  F043         	lfsr	0,__pdataCOMRAM
   136  000838  EE10 F008          	lfsr	1,8
   137  00083C                     copy_data0:
   138  00083C  0009               	tblrd		*+
   139  00083E  CFF5 FFEE          	movff	tablat,postinc0
   140  000842  50E5               	movf	postdec1,w,c
   141  000844  50E1               	movf	fsr1l,w,c
   142  000846  E1FA               	bnz	copy_data0
   143                           
   144                           ; Clear objects allocated to COMRAM (33 bytes)
   145  000848  EE00  F001         	lfsr	0,__pbssCOMRAM
   146  00084C  0E21               	movlw	33
   147  00084E                     clear_0:
   148  00084E  6AEE               	clrf	postinc0,c
   149  000850  06E8               	decf	wreg,f,c
   150  000852  E1FD               	bnz	clear_0
   151  000854                     end_of_initialization:
   152                           	callstack 0
   153  000854                     __end_of__initialization:
   154                           	callstack 0
   155  000854  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   156  000856  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   157  000858  0100               	movlb	0
   158  00085A  EF63  F004         	goto	_main	;jump to C main() function
   159                           
   160                           	psect	bssCOMRAM
   161  000001                     __pbssCOMRAM:
   162                           	callstack 0
   163  000001                     _speedM2:
   164                           	callstack 0
   165  000001                     	ds	2
   166  000003                     _speedM1:
   167                           	callstack 0
   168  000003                     	ds	2
   169  000005                     _count:
   170                           	callstack 0
   171  000005                     	ds	2
   172  000007                     _incStr2:
   173                           	callstack 0
   174  000007                     	ds	1
   175  000008                     _incStr1:
   176                           	callstack 0
   177  000008                     	ds	1
   178  000009                     _transRdy2:
   179                           	callstack 0
   180  000009                     	ds	1
   181  00000A                     _transRdy1:
   182                           	callstack 0
   183  00000A                     	ds	1
   184  00000B                     _speed4M2:
   185                           	callstack 0
   186  00000B                     	ds	1
   187  00000C                     _speed4M1:
   188                           	callstack 0
   189  00000C                     	ds	1
   190  00000D                     _digit:
   191                           	callstack 0
   192  00000D                     	ds	1
   193  00000E                     _stringBuffer:
   194                           	callstack 0
   195  00000E                     	ds	20
   196                           
   197                           	psect	dataCOMRAM
   198  000043                     __pdataCOMRAM:
   199                           	callstack 0
   200  000043                     _number:
   201                           	callstack 0
   202  000043                     	ds	2
   203  000045                     _speedRef2:
   204                           	callstack 0
   205  000045                     	ds	1
   206  000046                     _speedRef1:
   207                           	callstack 0
   208  000046                     	ds	1
   209  000047                     _str:
   210                           	callstack 0
   211  000047                     	ds	4
   212                           
   213                           	psect	cstackBANK0
   214  000000                     __pcstackBANK0:
   215                           	callstack 0
   216  000000                     
   217                           ; 1 bytes @ 0x0
   218                           
   219                           	psect	cstackCOMRAM
   220  000022                     __pcstackCOMRAM:
   221                           	callstack 0
   222  000022                     ??_isdigit:
   223  000022                     ?___wmul:
   224                           	callstack 0
   225  000022                     ?___lwdiv:
   226                           	callstack 0
   227  000022                     ?___lwmod:
   228                           	callstack 0
   229  000022                     WriteSPI@a:
   230                           	callstack 0
   231  000022                     tx_char@a:
   232                           	callstack 0
   233  000022                     ReadSPI@a:
   234                           	callstack 0
   235  000022                     gets_UART@string:
   236                           	callstack 0
   237  000022                     ___wmul@multiplier:
   238                           	callstack 0
   239  000022                     ___lwdiv@dividend:
   240                           	callstack 0
   241  000022                     ___lwmod@dividend:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0x0
   245  000022                     	ds	1
   246  000023                     WriteSPI@data_out:
   247                           	callstack 0
   248  000023                     _isdigit$1301:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0x1
   252  000023                     	ds	1
   253  000024                     isdigit@c:
   254                           	callstack 0
   255  000024                     gets_UART@i:
   256                           	callstack 0
   257  000024                     ___wmul@multiplicand:
   258                           	callstack 0
   259  000024                     ___lwdiv@divisor:
   260                           	callstack 0
   261  000024                     ___lwmod@divisor:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x2
   265  000024                     	ds	2
   266  000026                     ___lwmod@counter:
   267                           	callstack 0
   268  000026                     ___wmul@product:
   269                           	callstack 0
   270  000026                     ___lwdiv@quotient:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x4
   274  000026                     	ds	2
   275  000028                     ?_atoi:
   276                           	callstack 0
   277  000028                     ___lwdiv@counter:
   278                           	callstack 0
   279  000028                     atoi@s:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x6
   283  000028                     	ds	1
   284  000029                     utoa@buf:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x7
   288  000029                     	ds	1
   289  00002A                     ??_atoi:
   290                           
   291                           ; 1 bytes @ 0x8
   292  00002A                     	ds	1
   293  00002B                     utoa@val:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x9
   297  00002B                     	ds	1
   298  00002C                     atoi@sign:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0xA
   302  00002C                     	ds	1
   303  00002D                     atoi@a:
   304                           	callstack 0
   305  00002D                     utoa@base:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0xB
   309  00002D                     	ds	2
   310  00002F                     utoa@v:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0xD
   314  00002F                     	ds	2
   315  000031                     utoa@c:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0xF
   319  000031                     	ds	1
   320  000032                     itoa@buf:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x10
   324  000032                     	ds	2
   325  000034                     itoa@val:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x12
   329  000034                     	ds	2
   330  000036                     itoa@base:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x14
   334  000036                     	ds	2
   335  000038                     ??_UARTM1:
   336  000038                     ??_UARTM2:
   337                           
   338                           ; 1 bytes @ 0x16
   339  000038                     	ds	1
   340  000039                     UARTM1@i:
   341                           	callstack 0
   342  000039                     UARTM2@i:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x17
   346  000039                     	ds	2
   347  00003B                     UARTM1@tempM1:
   348                           	callstack 0
   349  00003B                     UARTM2@tempM2:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x19
   353  00003B                     	ds	1
   354  00003C                     ??_ISR:
   355                           
   356                           ; 1 bytes @ 0x1A
   357  00003C                     	ds	6
   358  000042                     ISR@c:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0x20
   362  000042                     	ds	1
   363                           
   364 ;;
   365 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   366 ;;
   367 ;; *************** function _main *****************
   368 ;; Defined at:
   369 ;;		line 261 in file "masterMain.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;		None
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg, status,2, cstack
   378 ;; Tracked objects:
   379 ;;		On entry : 0/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   383 ;;      Params:         0       0       0       0
   384 ;;      Locals:         0       0       0       0
   385 ;;      Temps:          0       0       0       0
   386 ;;      Totals:         0       0       0       0
   387 ;;Total ram usage:        0 bytes
   388 ;; Hardware stack levels required when called: 6
   389 ;; This function calls:
   390 ;;		_SPI_Init_Master
   391 ;;		_setupTimer0
   392 ;;		_setupUART
   393 ;; This function is called by:
   394 ;;		Startup code after reset
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           	psect	text0
   399  0008C6                     __ptext0:
   400                           	callstack 0
   401  0008C6                     _main:
   402                           	callstack 25
   403  0008C6                     
   404                           ;masterMain.c: 263: INTCONbits.GIE = 1; INTCONbits.PEIE = 1; TRISB = 0;
   405  0008C6  8EF2               	bsf	242,7,c	;volatile
   406  0008C8  8CF2               	bsf	242,6,c	;volatile
   407  0008CA  0E00               	movlw	0
   408  0008CC  6E93               	movwf	147,c	;volatile
   409  0008CE                     
   410                           ;masterMain.c: 264: setupUART();
   411  0008CE  ECA6  F004         	call	_setupUART	;wreg free
   412  0008D2                     
   413                           ;masterMain.c: 265: setupTimer0();
   414  0008D2  EC99  F004         	call	_setupTimer0	;wreg free
   415  0008D6                     
   416                           ;masterMain.c: 266: PORTBbits.RB6 = 1;
   417  0008D6  8C81               	bsf	129,6,c	;volatile
   418  0008D8                     
   419                           ;masterMain.c: 267: TRISCbits.RC2 = 0;
   420  0008D8  9494               	bcf	148,2,c	;volatile
   421  0008DA                     
   422                           ;masterMain.c: 268: PORTCbits.RC2 = 1;
   423  0008DA  8482               	bsf	130,2,c	;volatile
   424  0008DC                     
   425                           ;masterMain.c: 269: TRISCbits.RC1 = 0;
   426  0008DC  9294               	bcf	148,1,c	;volatile
   427  0008DE                     
   428                           ;masterMain.c: 270: PORTCbits.RC1 = 1;
   429  0008DE  8282               	bsf	130,1,c	;volatile
   430  0008E0                     
   431                           ;masterMain.c: 271: SPI_Init_Master();
   432  0008E0  EC89  F004         	call	_SPI_Init_Master	;wreg free
   433  0008E4                     l171:
   434  0008E4  EF72  F004         	goto	l171
   435  0008E8  EF71  F001         	goto	start
   436  0008EC                     __end_of_main:
   437                           	callstack 0
   438                           
   439 ;; *************** function _setupUART *****************
   440 ;; Defined at:
   441 ;;		line 304 in file "masterMain.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, status,2
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   455 ;;      Params:         0       0       0       0
   456 ;;      Locals:         0       0       0       0
   457 ;;      Temps:          0       0       0       0
   458 ;;      Totals:         0       0       0       0
   459 ;;Total ram usage:        0 bytes
   460 ;; Hardware stack levels used: 1
   461 ;; Hardware stack levels required when called: 5
   462 ;; This function calls:
   463 ;;		Nothing
   464 ;; This function is called by:
   465 ;;		_main
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           	psect	text1
   470  00094C                     __ptext1:
   471                           	callstack 0
   472  00094C                     _setupUART:
   473                           	callstack 25
   474  00094C                     
   475                           ;masterMain.c: 305: TRISCbits.RC6 = 0;
   476  00094C  9C94               	bcf	148,6,c	;volatile
   477                           
   478                           ;masterMain.c: 306: TRISCbits.RC7 = 1;
   479  00094E  8E94               	bsf	148,7,c	;volatile
   480                           
   481                           ;masterMain.c: 307: TXSTAbits.BRGH = 0;
   482  000950  94AC               	bcf	172,2,c	;volatile
   483                           
   484                           ;masterMain.c: 308: TXSTAbits.SYNC = 0;
   485  000952  98AC               	bcf	172,4,c	;volatile
   486                           
   487                           ;masterMain.c: 309: TXSTAbits.TXEN = 1;
   488  000954  8AAC               	bsf	172,5,c	;volatile
   489                           
   490                           ;masterMain.c: 310: RCSTAbits.SPEN = 1;
   491  000956  8EAB               	bsf	171,7,c	;volatile
   492                           
   493                           ;masterMain.c: 311: RCSTAbits.CREN = 1;
   494  000958  88AB               	bsf	171,4,c	;volatile
   495                           
   496                           ;masterMain.c: 312: PIE1bits.RCIE = 1;
   497  00095A  8A9D               	bsf	157,5,c	;volatile
   498                           
   499                           ;masterMain.c: 313: PIE1bits.TXIE = 0;
   500  00095C  989D               	bcf	157,4,c	;volatile
   501  00095E                     
   502                           ;masterMain.c: 314: SPBRG = 31;
   503  00095E  0E1F               	movlw	31
   504  000960  6EAF               	movwf	175,c	;volatile
   505  000962  0012               	return		;funcret
   506  000964                     __end_of_setupUART:
   507                           	callstack 0
   508                           
   509 ;; *************** function _setupTimer0 *****************
   510 ;; Defined at:
   511 ;;		line 278 in file "masterMain.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, status,2
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   525 ;;      Params:         0       0       0       0
   526 ;;      Locals:         0       0       0       0
   527 ;;      Temps:          0       0       0       0
   528 ;;      Totals:         0       0       0       0
   529 ;;Total ram usage:        0 bytes
   530 ;; Hardware stack levels used: 1
   531 ;; Hardware stack levels required when called: 5
   532 ;; This function calls:
   533 ;;		Nothing
   534 ;; This function is called by:
   535 ;;		_main
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text2
   540  000932                     __ptext2:
   541                           	callstack 0
   542  000932                     _setupTimer0:
   543                           	callstack 25
   544  000932                     
   545                           ;masterMain.c: 279: INTCONbits.TMR0IE = 1;
   546  000932  8AF2               	bsf	242,5,c	;volatile
   547                           
   548                           ;masterMain.c: 280: T0CONbits.T016BIT = 1;
   549  000934  8CD5               	bsf	213,6,c	;volatile
   550                           
   551                           ;masterMain.c: 281: T0CONbits.T0CS = 0;
   552  000936  9AD5               	bcf	213,5,c	;volatile
   553                           
   554                           ;masterMain.c: 284: T0CONbits.PSA = 0;
   555  000938  96D5               	bcf	213,3,c	;volatile
   556                           
   557                           ;masterMain.c: 285: T0CONbits.T0PS2 = 1;
   558  00093A  84D5               	bsf	213,2,c	;volatile
   559                           
   560                           ;masterMain.c: 286: T0CONbits.T0PS1 = 0;
   561  00093C  92D5               	bcf	213,1,c	;volatile
   562                           
   563                           ;masterMain.c: 287: T0CONbits.T0PS0 = 1;
   564  00093E  80D5               	bsf	213,0,c	;volatile
   565  000940                     
   566                           ;masterMain.c: 288: TMR0 = 0;
   567  000940  0E00               	movlw	0
   568  000942  6ED7               	movwf	215,c	;volatile
   569  000944  0E00               	movlw	0
   570  000946  6ED6               	movwf	214,c	;volatile
   571  000948                     
   572                           ;masterMain.c: 289: T0CONbits.TMR0ON = 1;
   573  000948  8ED5               	bsf	213,7,c	;volatile
   574  00094A  0012               	return		;funcret
   575  00094C                     __end_of_setupTimer0:
   576                           	callstack 0
   577                           
   578 ;; *************** function _SPI_Init_Master *****************
   579 ;; Defined at:
   580 ;;		line 327 in file "masterMain.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg, status,2
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   594 ;;      Params:         0       0       0       0
   595 ;;      Locals:         0       0       0       0
   596 ;;      Temps:          0       0       0       0
   597 ;;      Totals:         0       0       0       0
   598 ;;Total ram usage:        0 bytes
   599 ;; Hardware stack levels used: 1
   600 ;; Hardware stack levels required when called: 5
   601 ;; This function calls:
   602 ;;		Nothing
   603 ;; This function is called by:
   604 ;;		_main
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           	psect	text3
   609  000912                     __ptext3:
   610                           	callstack 0
   611  000912                     _SPI_Init_Master:
   612                           	callstack 25
   613  000912                     
   614                           ;masterMain.c: 328: PIE1bits.SSPIE = 1;
   615  000912  869D               	bsf	157,3,c	;volatile
   616                           
   617                           ;masterMain.c: 329: IPR1bits.SSPIP = 1;
   618  000914  869F               	bsf	159,3,c	;volatile
   619                           
   620                           ;masterMain.c: 332: TRISDbits.TRISD2 = 1;
   621  000916  8495               	bsf	149,2,c	;volatile
   622                           
   623                           ;masterMain.c: 333: TRISDbits.TRISD3 = 0;
   624  000918  9695               	bcf	149,3,c	;volatile
   625                           
   626                           ;masterMain.c: 334: TRISDbits.TRISD1 = 0;
   627  00091A  9295               	bcf	149,1,c	;volatile
   628                           
   629                           ;masterMain.c: 337: CS = 1;
   630  00091C  8484               	bsf	3972,2,c	;volatile
   631  00091E                     
   632                           ;masterMain.c: 338: SSPSTAT=0x40;
   633  00091E  0E40               	movlw	64
   634  000920  6EC7               	movwf	199,c	;volatile
   635                           
   636                           ;masterMain.c: 339: SSPCON1=0x20;
   637  000922  0E20               	movlw	32
   638  000924  6EC6               	movwf	198,c	;volatile
   639  000926                     
   640                           ;masterMain.c: 341: PIR1bits.SSPIF=0;
   641  000926  969E               	bcf	158,3,c	;volatile
   642                           
   643                           ;masterMain.c: 345: ADCON0=0;
   644  000928  0E00               	movlw	0
   645  00092A  6EC2               	movwf	194,c	;volatile
   646                           
   647                           ;masterMain.c: 347: ADCON1=0x0F;
   648  00092C  0E0F               	movlw	15
   649  00092E  6EC1               	movwf	193,c	;volatile
   650  000930  0012               	return		;funcret
   651  000932                     __end_of_SPI_Init_Master:
   652                           	callstack 0
   653                           
   654 ;; *************** function _ISR *****************
   655 ;; Defined at:
   656 ;;		line 194 in file "masterMain.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;  c               1   32[COMRAM] unsigned char 
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   670 ;;      Params:         0       0       0       0
   671 ;;      Locals:         1       0       0       0
   672 ;;      Temps:          6       0       0       0
   673 ;;      Totals:         7       0       0       0
   674 ;;Total ram usage:        7 bytes
   675 ;; Hardware stack levels used: 1
   676 ;; Hardware stack levels required when called: 4
   677 ;; This function calls:
   678 ;;		_UARTM1
   679 ;;		_UARTM2
   680 ;;		_WriteSPI
   681 ;;		_atoi
   682 ;;		_gets_UART
   683 ;;		_rx_char
   684 ;; This function is called by:
   685 ;;		Interrupt level 2
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           	psect	intcode
   690  000008                     __pintcode:
   691                           	callstack 0
   692  000008                     _ISR:
   693                           	callstack 25
   694                           
   695                           ;incstack = 0
   696  000008  824B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   697  00000A  CFD9 F03E          	movff	fsr2l,??_ISR+2
   698  00000E  CFDA F03F          	movff	fsr2h,??_ISR+3
   699  000012  CFF3 F040          	movff	prodl,??_ISR+4
   700  000016  CFF4 F041          	movff	prodh,??_ISR+5
   701  00001A                     
   702                           ;masterMain.c: 195: if(INTCONbits.TMR0IF == 1) {
   703  00001A  A4F2               	btfss	242,2,c	;volatile
   704  00001C  EF12  F000         	goto	i2u99_41
   705  000020  EF14  F000         	goto	i2u99_40
   706  000024                     i2u99_41:
   707  000024  EFB0  F000         	goto	i2l1623
   708  000028                     i2u99_40:
   709  000028                     
   710                           ;masterMain.c: 196: count++;
   711  000028  4A05               	infsnz	_count^0,f,c
   712  00002A  2A06               	incf	(_count+1)^0,f,c
   713  00002C                     
   714                           ;masterMain.c: 197: _delay((unsigned long)((1)*(20000000/4000.0)));
   715  00002C  0E07               	movlw	7
   716  00002E  6E3C               	movwf	??_ISR^0,c
   717  000030  0E7D               	movlw	125
   718  000032                     i2u123_47:
   719  000032  2EE8               	decfsz	wreg,f,c
   720  000034  D7FE               	bra	i2u123_47
   721  000036  2E3C               	decfsz	??_ISR^0,f,c
   722  000038  D7FC               	bra	i2u123_47
   723  00003A  F000               	nop	
   724                           
   725                           ;masterMain.c: 198: if (count == 100) {
   726  00003C  0E64               	movlw	100
   727  00003E  1805               	xorwf	_count^0,w,c
   728  000040  1006               	iorwf	(_count+1)^0,w,c
   729  000042  A4D8               	btfss	status,2,c
   730  000044  EF26  F000         	goto	i2u100_41
   731  000048  EF28  F000         	goto	i2u100_40
   732  00004C                     i2u100_41:
   733  00004C  EF2A  F000         	goto	i2l1589
   734  000050                     i2u100_40:
   735  000050                     
   736                           ;masterMain.c: 199: UARTM2();
   737  000050  EC60  F002         	call	_UARTM2	;wreg free
   738  000054                     i2l1589:
   739                           
   740                           ;masterMain.c: 200: };masterMain.c: 201: if (count == 200) {
   741  000054  0EC8               	movlw	200
   742  000056  1805               	xorwf	_count^0,w,c
   743  000058  1006               	iorwf	(_count+1)^0,w,c
   744  00005A  A4D8               	btfss	status,2,c
   745  00005C  EF32  F000         	goto	i2u101_41
   746  000060  EF34  F000         	goto	i2u101_40
   747  000064                     i2u101_41:
   748  000064  EF36  F000         	goto	i2l1593
   749  000068                     i2u101_40:
   750  000068                     
   751                           ;masterMain.c: 202: UARTM1();
   752  000068  ECB9  F002         	call	_UARTM1	;wreg free
   753  00006C                     i2l1593:
   754                           
   755                           ;masterMain.c: 203: };masterMain.c: 204: if (count == 10) {
   756  00006C  0E0A               	movlw	10
   757  00006E  1805               	xorwf	_count^0,w,c
   758  000070  1006               	iorwf	(_count+1)^0,w,c
   759  000072  A4D8               	btfss	status,2,c
   760  000074  EF3E  F000         	goto	i2u102_41
   761  000078  EF40  F000         	goto	i2u102_40
   762  00007C                     i2u102_41:
   763  00007C  EFB0  F000         	goto	i2l1623
   764  000080                     i2u102_40:
   765  000080                     
   766                           ;masterMain.c: 206: gets_UART(str);
   767  000080  0E47               	movlw	low _str
   768  000082  6E22               	movwf	gets_UART@string^0,c
   769  000084  0E00               	movlw	high _str
   770  000086  6E23               	movwf	(gets_UART@string+1)^0,c
   771  000088  EC2F  F004         	call	_gets_UART	;wreg free
   772  00008C                     
   773                           ;masterMain.c: 207: WriteSPI(speedRef1,1);
   774  00008C  0E01               	movlw	1
   775  00008E  6E22               	movwf	WriteSPI@a^0,c
   776  000090  5046               	movf	_speedRef1^0,w,c
   777  000092  EC12  F003         	call	_WriteSPI
   778  000096                     
   779                           ;masterMain.c: 208: WriteSPI(speedRef2,2);
   780  000096  0E02               	movlw	2
   781  000098  6E22               	movwf	WriteSPI@a^0,c
   782  00009A  5045               	movf	_speedRef2^0,w,c
   783  00009C  EC12  F003         	call	_WriteSPI
   784  0000A0                     
   785                           ;masterMain.c: 209: if(incStr1==0 && transRdy1 == 1) {
   786  0000A0  5008               	movf	_incStr1^0,w,c
   787  0000A2  A4D8               	btfss	status,2,c
   788  0000A4  EF56  F000         	goto	i2u103_41
   789  0000A8  EF58  F000         	goto	i2u103_40
   790  0000AC                     i2u103_41:
   791  0000AC  EF7F  F000         	goto	i2l1611
   792  0000B0                     i2u103_40:
   793  0000B0  040A               	decf	_transRdy1^0,w,c
   794  0000B2  A4D8               	btfss	status,2,c
   795  0000B4  EF5E  F000         	goto	i2u104_41
   796  0000B8  EF60  F000         	goto	i2u104_40
   797  0000BC                     i2u104_41:
   798  0000BC  EF7F  F000         	goto	i2l1611
   799  0000C0                     i2u104_40:
   800  0000C0                     
   801                           ;masterMain.c: 210: speedRef1 = (unsigned char)atoi(str);
   802  0000C0  0E47               	movlw	low _str
   803  0000C2  6E28               	movwf	atoi@s^0,c
   804  0000C4  0E00               	movlw	high _str
   805  0000C6  6E29               	movwf	(atoi@s+1)^0,c
   806  0000C8  EC73  F001         	call	_atoi	;wreg free
   807  0000CC  5028               	movf	?_atoi^0,w,c
   808  0000CE  6E46               	movwf	_speedRef1^0,c
   809  0000D0                     
   810                           ;masterMain.c: 212: transRdy1 = 0;
   811  0000D0  0E00               	movlw	0
   812  0000D2  6E0A               	movwf	_transRdy1^0,c
   813  0000D4                     
   814                           ;masterMain.c: 213: PORTBbits.RB3 = 1 - PORTBbits.RB3;
   815  0000D4  B681               	btfsc	129,3,c	;volatile
   816  0000D6  EF6F  F000         	goto	i2u105_41
   817  0000DA  EF73  F000         	goto	i2u105_40
   818  0000DE                     i2u105_41:
   819  0000DE  6A3C               	clrf	??_ISR^0,c
   820  0000E0  2A3C               	incf	??_ISR^0,f,c
   821  0000E2  EF74  F000         	goto	i2u105_48
   822  0000E6                     i2u105_40:
   823  0000E6  6A3C               	clrf	??_ISR^0,c
   824  0000E8                     i2u105_48:
   825  0000E8  503C               	movf	??_ISR^0,w,c
   826  0000EA  0801               	sublw	1
   827  0000EC  6E3D               	movwf	(??_ISR+1)^0,c
   828  0000EE  463D               	rlncf	(??_ISR+1)^0,f,c
   829  0000F0  463D               	rlncf	(??_ISR+1)^0,f,c
   830  0000F2  463D               	rlncf	(??_ISR+1)^0,f,c
   831  0000F4  5081               	movf	129,w,c	;volatile
   832  0000F6  183D               	xorwf	(??_ISR+1)^0,w,c
   833  0000F8  0BF7               	andlw	-9
   834  0000FA  183D               	xorwf	(??_ISR+1)^0,w,c
   835  0000FC  6E81               	movwf	129,c	;volatile
   836  0000FE                     i2l1611:
   837                           
   838                           ;masterMain.c: 214: };masterMain.c: 216: if(incStr2==0 && transRdy2 == 1) {
   839  0000FE  5007               	movf	_incStr2^0,w,c
   840  000100  A4D8               	btfss	status,2,c
   841  000102  EF85  F000         	goto	i2u106_41
   842  000106  EF87  F000         	goto	i2u106_40
   843  00010A                     i2u106_41:
   844  00010A  EFAC  F000         	goto	i2l1621
   845  00010E                     i2u106_40:
   846  00010E  0409               	decf	_transRdy2^0,w,c
   847  000110  A4D8               	btfss	status,2,c
   848  000112  EF8D  F000         	goto	i2u107_41
   849  000116  EF8F  F000         	goto	i2u107_40
   850  00011A                     i2u107_41:
   851  00011A  EFAC  F000         	goto	i2l1621
   852  00011E                     i2u107_40:
   853  00011E                     
   854                           ;masterMain.c: 217: speedRef2 = (unsigned char)atoi(str);
   855  00011E  0E47               	movlw	low _str
   856  000120  6E28               	movwf	atoi@s^0,c
   857  000122  0E00               	movlw	high _str
   858  000124  6E29               	movwf	(atoi@s+1)^0,c
   859  000126  EC73  F001         	call	_atoi	;wreg free
   860  00012A  5028               	movf	?_atoi^0,w,c
   861  00012C  6E45               	movwf	_speedRef2^0,c
   862  00012E                     
   863                           ;masterMain.c: 219: transRdy2 = 0;
   864  00012E  0E00               	movlw	0
   865  000130  6E09               	movwf	_transRdy2^0,c
   866  000132                     
   867                           ;masterMain.c: 220: PORTBbits.RB4 = 1 - PORTBbits.RB4;
   868  000132  B881               	btfsc	129,4,c	;volatile
   869  000134  EF9E  F000         	goto	i2u108_41
   870  000138  EFA2  F000         	goto	i2u108_40
   871  00013C                     i2u108_41:
   872  00013C  6A3C               	clrf	??_ISR^0,c
   873  00013E  2A3C               	incf	??_ISR^0,f,c
   874  000140  EFA3  F000         	goto	i2u108_48
   875  000144                     i2u108_40:
   876  000144  6A3C               	clrf	??_ISR^0,c
   877  000146                     i2u108_48:
   878  000146  503C               	movf	??_ISR^0,w,c
   879  000148  0801               	sublw	1
   880  00014A  6E3D               	movwf	(??_ISR+1)^0,c
   881  00014C  3A3D               	swapf	(??_ISR+1)^0,f,c
   882  00014E  5081               	movf	129,w,c	;volatile
   883  000150  183D               	xorwf	(??_ISR+1)^0,w,c
   884  000152  0BEF               	andlw	-17
   885  000154  183D               	xorwf	(??_ISR+1)^0,w,c
   886  000156  6E81               	movwf	129,c	;volatile
   887  000158                     i2l1621:
   888                           
   889                           ;masterMain.c: 221: };masterMain.c: 222: count = 0;
   890  000158  0E00               	movlw	0
   891  00015A  6E06               	movwf	(_count+1)^0,c
   892  00015C  0E00               	movlw	0
   893  00015E  6E05               	movwf	_count^0,c
   894  000160                     i2l1623:
   895                           
   896                           ;masterMain.c: 223: };masterMain.c: 224: };masterMain.c: 226: if(RCIF == 1) {
   897  000160  AA9E               	btfss	3998,5,c	;volatile
   898  000162  EFB5  F000         	goto	i2u109_41
   899  000166  EFB7  F000         	goto	i2u109_40
   900  00016A                     i2u109_41:
   901  00016A  EF67  F001         	goto	i2l166
   902  00016E                     i2u109_40:
   903  00016E                     
   904                           ;masterMain.c: 228: char c = rx_char();
   905  00016E  ECBD  F004         	call	_rx_char	;wreg free
   906  000172  6E42               	movwf	ISR@c^0,c
   907  000174                     
   908                           ;masterMain.c: 230: if(speed4M1 && incStr1 < 3) {
   909  000174  500C               	movf	_speed4M1^0,w,c
   910  000176  B4D8               	btfsc	status,2,c
   911  000178  EFC0  F000         	goto	i2u110_41
   912  00017C  EFC2  F000         	goto	i2u110_40
   913  000180                     i2u110_41:
   914  000180  EFD3  F000         	goto	i2l1635
   915  000184                     i2u110_40:
   916  000184  0E03               	movlw	3
   917  000186  6008               	cpfslt	_incStr1^0,c
   918  000188  EFC8  F000         	goto	i2u111_41
   919  00018C  EFCA  F000         	goto	i2u111_40
   920  000190                     i2u111_41:
   921  000190  EFD3  F000         	goto	i2l1635
   922  000194                     i2u111_40:
   923  000194                     
   924                           ;masterMain.c: 231: str[incStr1] = c;
   925  000194  0E47               	movlw	low _str
   926  000196  2408               	addwf	_incStr1^0,w,c
   927  000198  6ED9               	movwf	fsr2l,c
   928  00019A  6ADA               	clrf	fsr2h,c
   929  00019C  0E00               	movlw	high _str
   930  00019E  22DA               	addwfc	fsr2h,f,c
   931  0001A0  C042  FFDF         	movff	ISR@c,indf2
   932  0001A4                     
   933                           ;masterMain.c: 232: incStr1++;
   934  0001A4  2A08               	incf	_incStr1^0,f,c
   935  0001A6                     i2l1635:
   936                           
   937                           ;masterMain.c: 233: };masterMain.c: 234: if(speed4M1 && incStr1 >= 3) {
   938  0001A6  500C               	movf	_speed4M1^0,w,c
   939  0001A8  B4D8               	btfsc	status,2,c
   940  0001AA  EFD9  F000         	goto	i2u112_41
   941  0001AE  EFDB  F000         	goto	i2u112_40
   942  0001B2                     i2u112_41:
   943  0001B2  EFFB  F000         	goto	i2l1647
   944  0001B6                     i2u112_40:
   945  0001B6  0E02               	movlw	2
   946  0001B8  6408               	cpfsgt	_incStr1^0,c
   947  0001BA  EFE1  F000         	goto	i2u113_41
   948  0001BE  EFE3  F000         	goto	i2u113_40
   949  0001C2                     i2u113_41:
   950  0001C2  EFFB  F000         	goto	i2l1647
   951  0001C6                     i2u113_40:
   952  0001C6                     
   953                           ;masterMain.c: 235: incStr1 = 0;
   954  0001C6  0E00               	movlw	0
   955  0001C8  6E08               	movwf	_incStr1^0,c
   956  0001CA                     
   957                           ;masterMain.c: 236: PORTBbits.RB0 = 1 - PORTBbits.RB0;
   958  0001CA  B081               	btfsc	129,0,c	;volatile
   959  0001CC  EFEA  F000         	goto	i2u114_41
   960  0001D0  EFEE  F000         	goto	i2u114_40
   961  0001D4                     i2u114_41:
   962  0001D4  6A3C               	clrf	??_ISR^0,c
   963  0001D6  2A3C               	incf	??_ISR^0,f,c
   964  0001D8  EFEF  F000         	goto	i2u114_48
   965  0001DC                     i2u114_40:
   966  0001DC  6A3C               	clrf	??_ISR^0,c
   967  0001DE                     i2u114_48:
   968  0001DE  503C               	movf	??_ISR^0,w,c
   969  0001E0  0801               	sublw	1
   970  0001E2  6E3D               	movwf	(??_ISR+1)^0,c
   971  0001E4  5081               	movf	129,w,c	;volatile
   972  0001E6  183D               	xorwf	(??_ISR+1)^0,w,c
   973  0001E8  0BFE               	andlw	-2
   974  0001EA  183D               	xorwf	(??_ISR+1)^0,w,c
   975  0001EC  6E81               	movwf	129,c	;volatile
   976  0001EE                     
   977                           ;masterMain.c: 237: speed4M1 = 0;
   978  0001EE  0E00               	movlw	0
   979  0001F0  6E0C               	movwf	_speed4M1^0,c
   980  0001F2                     
   981                           ;masterMain.c: 238: transRdy1 = 1;
   982  0001F2  0E01               	movlw	1
   983  0001F4  6E0A               	movwf	_transRdy1^0,c
   984  0001F6                     i2l1647:
   985                           
   986                           ;masterMain.c: 239: };masterMain.c: 241: if(speed4M2 && incStr2 < 3) {
   987  0001F6  500B               	movf	_speed4M2^0,w,c
   988  0001F8  B4D8               	btfsc	status,2,c
   989  0001FA  EF01  F001         	goto	i2u115_41
   990  0001FE  EF03  F001         	goto	i2u115_40
   991  000202                     i2u115_41:
   992  000202  EF14  F001         	goto	i2l1655
   993  000206                     i2u115_40:
   994  000206  0E03               	movlw	3
   995  000208  6007               	cpfslt	_incStr2^0,c
   996  00020A  EF09  F001         	goto	i2u116_41
   997  00020E  EF0B  F001         	goto	i2u116_40
   998  000212                     i2u116_41:
   999  000212  EF14  F001         	goto	i2l1655
  1000  000216                     i2u116_40:
  1001  000216                     
  1002                           ;masterMain.c: 242: str[incStr2] = c;
  1003  000216  0E47               	movlw	low _str
  1004  000218  2407               	addwf	_incStr2^0,w,c
  1005  00021A  6ED9               	movwf	fsr2l,c
  1006  00021C  6ADA               	clrf	fsr2h,c
  1007  00021E  0E00               	movlw	high _str
  1008  000220  22DA               	addwfc	fsr2h,f,c
  1009  000222  C042  FFDF         	movff	ISR@c,indf2
  1010  000226                     
  1011                           ;masterMain.c: 243: incStr2++;
  1012  000226  2A07               	incf	_incStr2^0,f,c
  1013  000228                     i2l1655:
  1014                           
  1015                           ;masterMain.c: 244: };masterMain.c: 245: if(speed4M2 && incStr2 >= 3) {
  1016  000228  500B               	movf	_speed4M2^0,w,c
  1017  00022A  B4D8               	btfsc	status,2,c
  1018  00022C  EF1A  F001         	goto	i2u117_41
  1019  000230  EF1C  F001         	goto	i2u117_40
  1020  000234                     i2u117_41:
  1021  000234  EF3C  F001         	goto	i2l1667
  1022  000238                     i2u117_40:
  1023  000238  0E02               	movlw	2
  1024  00023A  6407               	cpfsgt	_incStr2^0,c
  1025  00023C  EF22  F001         	goto	i2u118_41
  1026  000240  EF24  F001         	goto	i2u118_40
  1027  000244                     i2u118_41:
  1028  000244  EF3C  F001         	goto	i2l1667
  1029  000248                     i2u118_40:
  1030  000248                     
  1031                           ;masterMain.c: 246: incStr2 = 0;
  1032  000248  0E00               	movlw	0
  1033  00024A  6E07               	movwf	_incStr2^0,c
  1034  00024C                     
  1035                           ;masterMain.c: 247: PORTBbits.RB0 = 1 - PORTBbits.RB0;
  1036  00024C  B081               	btfsc	129,0,c	;volatile
  1037  00024E  EF2B  F001         	goto	i2u119_41
  1038  000252  EF2F  F001         	goto	i2u119_40
  1039  000256                     i2u119_41:
  1040  000256  6A3C               	clrf	??_ISR^0,c
  1041  000258  2A3C               	incf	??_ISR^0,f,c
  1042  00025A  EF30  F001         	goto	i2u119_48
  1043  00025E                     i2u119_40:
  1044  00025E  6A3C               	clrf	??_ISR^0,c
  1045  000260                     i2u119_48:
  1046  000260  503C               	movf	??_ISR^0,w,c
  1047  000262  0801               	sublw	1
  1048  000264  6E3D               	movwf	(??_ISR+1)^0,c
  1049  000266  5081               	movf	129,w,c	;volatile
  1050  000268  183D               	xorwf	(??_ISR+1)^0,w,c
  1051  00026A  0BFE               	andlw	-2
  1052  00026C  183D               	xorwf	(??_ISR+1)^0,w,c
  1053  00026E  6E81               	movwf	129,c	;volatile
  1054  000270                     
  1055                           ;masterMain.c: 248: speed4M2 = 0;
  1056  000270  0E00               	movlw	0
  1057  000272  6E0B               	movwf	_speed4M2^0,c
  1058  000274                     
  1059                           ;masterMain.c: 249: transRdy2 = 1;
  1060  000274  0E01               	movlw	1
  1061  000276  6E09               	movwf	_transRdy2^0,c
  1062  000278                     i2l1667:
  1063                           
  1064                           ;masterMain.c: 250: };masterMain.c: 251: if(c=='A') {
  1065  000278  0E41               	movlw	65
  1066  00027A  1842               	xorwf	ISR@c^0,w,c
  1067  00027C  A4D8               	btfss	status,2,c
  1068  00027E  EF43  F001         	goto	i2u120_41
  1069  000282  EF45  F001         	goto	i2u120_40
  1070  000286                     i2u120_41:
  1071  000286  EF5C  F001         	goto	i2l1673
  1072  00028A                     i2u120_40:
  1073  00028A                     
  1074                           ;masterMain.c: 252: speed4M1 = 1;
  1075  00028A  0E01               	movlw	1
  1076  00028C  6E0C               	movwf	_speed4M1^0,c
  1077  00028E                     
  1078                           ;masterMain.c: 253: PORTBbits.RB3 = 1 - PORTBbits.RB3;
  1079  00028E  B681               	btfsc	129,3,c	;volatile
  1080  000290  EF4C  F001         	goto	i2u121_41
  1081  000294  EF50  F001         	goto	i2u121_40
  1082  000298                     i2u121_41:
  1083  000298  6A3C               	clrf	??_ISR^0,c
  1084  00029A  2A3C               	incf	??_ISR^0,f,c
  1085  00029C  EF51  F001         	goto	i2u121_48
  1086  0002A0                     i2u121_40:
  1087  0002A0  6A3C               	clrf	??_ISR^0,c
  1088  0002A2                     i2u121_48:
  1089  0002A2  503C               	movf	??_ISR^0,w,c
  1090  0002A4  0801               	sublw	1
  1091  0002A6  6E3D               	movwf	(??_ISR+1)^0,c
  1092  0002A8  463D               	rlncf	(??_ISR+1)^0,f,c
  1093  0002AA  463D               	rlncf	(??_ISR+1)^0,f,c
  1094  0002AC  463D               	rlncf	(??_ISR+1)^0,f,c
  1095  0002AE  5081               	movf	129,w,c	;volatile
  1096  0002B0  183D               	xorwf	(??_ISR+1)^0,w,c
  1097  0002B2  0BF7               	andlw	-9
  1098  0002B4  183D               	xorwf	(??_ISR+1)^0,w,c
  1099  0002B6  6E81               	movwf	129,c	;volatile
  1100  0002B8                     i2l1673:
  1101                           
  1102                           ;masterMain.c: 254: };masterMain.c: 255: if(c=='B') {
  1103  0002B8  0E42               	movlw	66
  1104  0002BA  1842               	xorwf	ISR@c^0,w,c
  1105  0002BC  A4D8               	btfss	status,2,c
  1106  0002BE  EF63  F001         	goto	i2u122_41
  1107  0002C2  EF65  F001         	goto	i2u122_40
  1108  0002C6                     i2u122_41:
  1109  0002C6  EF67  F001         	goto	i2l166
  1110  0002CA                     i2u122_40:
  1111  0002CA                     
  1112                           ;masterMain.c: 256: speed4M2 = 1;
  1113  0002CA  0E01               	movlw	1
  1114  0002CC  6E0B               	movwf	_speed4M2^0,c
  1115  0002CE                     i2l166:
  1116  0002CE  C041  FFF4         	movff	??_ISR+5,prodh
  1117  0002D2  C040  FFF3         	movff	??_ISR+4,prodl
  1118  0002D6  C03F  FFDA         	movff	??_ISR+3,fsr2h
  1119  0002DA  C03E  FFD9         	movff	??_ISR+2,fsr2l
  1120  0002DE  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1121  0002E0  0011               	retfie		f
  1122  0002E2                     __end_of_ISR:
  1123                           	callstack 0
  1124                           
  1125 ;; *************** function _gets_UART *****************
  1126 ;; Defined at:
  1127 ;;		line 187 in file "masterMain.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  string          2    0[COMRAM] PTR unsigned char 
  1130 ;;		 -> str(4), 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  i               2    2[COMRAM] int 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1142 ;;      Params:         2       0       0       0
  1143 ;;      Locals:         2       0       0       0
  1144 ;;      Temps:          0       0       0       0
  1145 ;;      Totals:         4       0       0       0
  1146 ;;Total ram usage:        4 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; Hardware stack levels required when called: 1
  1149 ;; This function calls:
  1150 ;;		_rx_char
  1151 ;; This function is called by:
  1152 ;;		_ISR
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text5
  1157  00085E                     __ptext5:
  1158                           	callstack 0
  1159  00085E                     _gets_UART:
  1160                           	callstack 27
  1161  00085E                     
  1162                           ;masterMain.c: 188: int i;;masterMain.c: 189: for(i=0;i++;i<4) {
  1163  00085E  0E00               	movlw	0
  1164  000860  6E25               	movwf	(gets_UART@i+1)^0,c
  1165  000862  0E00               	movlw	0
  1166  000864  6E24               	movwf	gets_UART@i^0,c
  1167  000866  EF3E  F004         	goto	i2l1551
  1168  00086A                     i2l1549:
  1169                           
  1170                           ;masterMain.c: 190: string[i] = rx_char();
  1171  00086A  5024               	movf	gets_UART@i^0,w,c
  1172  00086C  2422               	addwf	gets_UART@string^0,w,c
  1173  00086E  6ED9               	movwf	fsr2l,c
  1174  000870  5025               	movf	(gets_UART@i+1)^0,w,c
  1175  000872  2023               	addwfc	(gets_UART@string+1)^0,w,c
  1176  000874  6EDA               	movwf	fsr2h,c
  1177  000876  ECBD  F004         	call	_rx_char	;wreg free
  1178  00087A  6EDF               	movwf	indf2,c
  1179  00087C                     i2l1551:
  1180  00087C  4A24               	infsnz	gets_UART@i^0,f,c
  1181  00087E  2A25               	incf	(gets_UART@i+1)^0,f,c
  1182  000880  0424               	decf	gets_UART@i^0,w,c
  1183  000882  1025               	iorwf	(gets_UART@i+1)^0,w,c
  1184  000884  A4D8               	btfss	status,2,c
  1185  000886  EF47  F004         	goto	i2u92_41
  1186  00088A  EF49  F004         	goto	i2u92_40
  1187  00088E                     i2u92_41:
  1188  00088E  EF35  F004         	goto	i2l1549
  1189  000892                     i2u92_40:
  1190  000892  0012               	return		;funcret
  1191  000894                     __end_of_gets_UART:
  1192                           	callstack 0
  1193                           
  1194 ;; *************** function _rx_char *****************
  1195 ;; Defined at:
  1196 ;;		line 317 in file "masterMain.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      unsigned char 
  1203 ;; Registers used:
  1204 ;;		wreg, status,2
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1210 ;;      Params:         0       0       0       0
  1211 ;;      Locals:         0       0       0       0
  1212 ;;      Temps:          0       0       0       0
  1213 ;;      Totals:         0       0       0       0
  1214 ;;Total ram usage:        0 bytes
  1215 ;; Hardware stack levels used: 1
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_gets_UART
  1220 ;;		_ISR
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text6
  1225  00097A                     __ptext6:
  1226                           	callstack 0
  1227  00097A                     _rx_char:
  1228                           	callstack 28
  1229  00097A                     i2l186:
  1230  00097A  AA9E               	btfss	3998,5,c	;volatile
  1231  00097C  EFC2  F004         	goto	i2u17_41
  1232  000980  EFC4  F004         	goto	i2u17_40
  1233  000984                     i2u17_41:
  1234  000984  EFBD  F004         	goto	i2l186
  1235  000988                     i2u17_40:
  1236  000988                     
  1237                           ;masterMain.c: 319: return RCREG;
  1238  000988  50AE               	movf	174,w,c	;volatile
  1239  00098A  0012               	return		;funcret
  1240  00098C                     __end_of_rx_char:
  1241                           	callstack 0
  1242                           
  1243 ;; *************** function _atoi *****************
  1244 ;; Defined at:
  1245 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\atoi.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  s               2    6[COMRAM] PTR const unsigned char 
  1248 ;;		 -> str(4), 
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;  a               2   11[COMRAM] int 
  1251 ;;  sign            1   10[COMRAM] unsigned char 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  2    6[COMRAM] int 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1261 ;;      Params:         2       0       0       0
  1262 ;;      Locals:         3       0       0       0
  1263 ;;      Temps:          2       0       0       0
  1264 ;;      Totals:         7       0       0       0
  1265 ;;Total ram usage:        7 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; Hardware stack levels required when called: 1
  1268 ;; This function calls:
  1269 ;;		___wmul
  1270 ;;		_isdigit
  1271 ;; This function is called by:
  1272 ;;		_ISR
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text7
  1277  0002E6                     __ptext7:
  1278                           	callstack 0
  1279  0002E6                     _atoi:
  1280                           	callstack 27
  1281  0002E6  EF77  F001         	goto	i2l1557
  1282  0002EA                     i2l1555:
  1283  0002EA  4A28               	infsnz	atoi@s^0,f,c
  1284  0002EC  2A29               	incf	(atoi@s+1)^0,f,c
  1285  0002EE                     i2l1557:
  1286  0002EE  C028  FFD9         	movff	atoi@s,fsr2l
  1287  0002F2  C029  FFDA         	movff	atoi@s+1,fsr2h
  1288  0002F6  0E20               	movlw	32
  1289  0002F8  18DE               	xorwf	postinc2,w,c
  1290  0002FA  B4D8               	btfsc	status,2,c
  1291  0002FC  EF82  F001         	goto	i2u93_41
  1292  000300  EF84  F001         	goto	i2u93_40
  1293  000304                     i2u93_41:
  1294  000304  EF75  F001         	goto	i2l1555
  1295  000308                     i2u93_40:
  1296  000308  C028  FFD9         	movff	atoi@s,fsr2l
  1297  00030C  C029  FFDA         	movff	atoi@s+1,fsr2h
  1298  000310  0E09               	movlw	9
  1299  000312  18DE               	xorwf	postinc2,w,c
  1300  000314  B4D8               	btfsc	status,2,c
  1301  000316  EF8F  F001         	goto	i2u94_41
  1302  00031A  EF91  F001         	goto	i2u94_40
  1303  00031E                     i2u94_41:
  1304  00031E  EF75  F001         	goto	i2l1555
  1305  000322                     i2u94_40:
  1306  000322  0E00               	movlw	0
  1307  000324  6E2E               	movwf	(atoi@a+1)^0,c
  1308  000326  0E00               	movlw	0
  1309  000328  6E2D               	movwf	atoi@a^0,c
  1310  00032A  0E00               	movlw	0
  1311  00032C  6E2C               	movwf	atoi@sign^0,c
  1312  00032E  C028  FFD9         	movff	atoi@s,fsr2l
  1313  000332  C029  FFDA         	movff	atoi@s+1,fsr2h
  1314  000336  0E2D               	movlw	45
  1315  000338  18DE               	xorwf	postinc2,w,c
  1316  00033A  A4D8               	btfss	status,2,c
  1317  00033C  EFA2  F001         	goto	i2u95_41
  1318  000340  EFA4  F001         	goto	i2u95_40
  1319  000344                     i2u95_41:
  1320  000344  EFA9  F001         	goto	i2l1567
  1321  000348                     i2u95_40:
  1322  000348  2A2C               	incf	atoi@sign^0,f,c
  1323  00034A  4A28               	infsnz	atoi@s^0,f,c
  1324  00034C  2A29               	incf	(atoi@s+1)^0,f,c
  1325  00034E  EFD6  F001         	goto	i2l1575
  1326  000352                     i2l1567:
  1327  000352  C028  FFD9         	movff	atoi@s,fsr2l
  1328  000356  C029  FFDA         	movff	atoi@s+1,fsr2h
  1329  00035A  0E2B               	movlw	43
  1330  00035C  18DE               	xorwf	postinc2,w,c
  1331  00035E  A4D8               	btfss	status,2,c
  1332  000360  EFB4  F001         	goto	i2u96_41
  1333  000364  EFB6  F001         	goto	i2u96_40
  1334  000368                     i2u96_41:
  1335  000368  EFD6  F001         	goto	i2l1575
  1336  00036C                     i2u96_40:
  1337  00036C                     i2l1569:
  1338  00036C  4A28               	infsnz	atoi@s^0,f,c
  1339  00036E  2A29               	incf	(atoi@s+1)^0,f,c
  1340  000370  EFD6  F001         	goto	i2l1575
  1341  000374                     i2l1571:
  1342  000374  C02D  F022         	movff	atoi@a,___wmul@multiplier
  1343  000378  C02E  F023         	movff	atoi@a+1,___wmul@multiplier+1
  1344  00037C  0E00               	movlw	0
  1345  00037E  6E25               	movwf	(___wmul@multiplicand+1)^0,c
  1346  000380  0E0A               	movlw	10
  1347  000382  6E24               	movwf	___wmul@multiplicand^0,c
  1348  000384  EC76  F004         	call	___wmul	;wreg free
  1349  000388  C028  FFD9         	movff	atoi@s,fsr2l
  1350  00038C  C029  FFDA         	movff	atoi@s+1,fsr2h
  1351  000390  50DF               	movf	indf2,w,c
  1352  000392  6E2A               	movwf	??_atoi^0,c
  1353  000394  502A               	movf	??_atoi^0,w,c
  1354  000396  2622               	addwf	?___wmul^0,f,c
  1355  000398  0E00               	movlw	0
  1356  00039A  2223               	addwfc	(?___wmul+1)^0,f,c
  1357  00039C  0ED0               	movlw	208
  1358  00039E  2422               	addwf	?___wmul^0,w,c
  1359  0003A0  6E2D               	movwf	atoi@a^0,c
  1360  0003A2  0EFF               	movlw	255
  1361  0003A4  2023               	addwfc	(?___wmul+1)^0,w,c
  1362  0003A6  6E2E               	movwf	(atoi@a+1)^0,c
  1363  0003A8  EFB6  F001         	goto	i2l1569
  1364  0003AC                     i2l1575:
  1365  0003AC  C028  FFD9         	movff	atoi@s,fsr2l
  1366  0003B0  C029  FFDA         	movff	atoi@s+1,fsr2h
  1367  0003B4  50DF               	movf	indf2,w,c
  1368  0003B6  EC4A  F004         	call	_isdigit
  1369  0003BA  B0D8               	btfsc	status,0,c
  1370  0003BC  EFE2  F001         	goto	i2u97_41
  1371  0003C0  EFE4  F001         	goto	i2u97_40
  1372  0003C4                     i2u97_41:
  1373  0003C4  EFBA  F001         	goto	i2l1571
  1374  0003C8                     i2u97_40:
  1375  0003C8  502C               	movf	atoi@sign^0,w,c
  1376  0003CA  B4D8               	btfsc	status,2,c
  1377  0003CC  EFEA  F001         	goto	i2u98_41
  1378  0003D0  EFEC  F001         	goto	i2u98_40
  1379  0003D4                     i2u98_41:
  1380  0003D4  EFFA  F001         	goto	i2l877
  1381  0003D8                     i2u98_40:
  1382  0003D8  C02D  F02A         	movff	atoi@a,??_atoi
  1383  0003DC  C02E  F02B         	movff	atoi@a+1,??_atoi+1
  1384  0003E0  1E2A               	comf	??_atoi^0,f,c
  1385  0003E2  1E2B               	comf	(??_atoi+1)^0,f,c
  1386  0003E4  4A2A               	infsnz	??_atoi^0,f,c
  1387  0003E6  2A2B               	incf	(??_atoi+1)^0,f,c
  1388  0003E8  C02A  F028         	movff	??_atoi,?_atoi
  1389  0003EC  C02B  F029         	movff	??_atoi+1,?_atoi+1
  1390  0003F0  EFFE  F001         	goto	i2l878
  1391  0003F4                     i2l877:
  1392  0003F4  C02D  F028         	movff	atoi@a,?_atoi
  1393  0003F8  C02E  F029         	movff	atoi@a+1,?_atoi+1
  1394  0003FC                     i2l878:
  1395  0003FC  0012               	return		;funcret
  1396  0003FE                     __end_of_atoi:
  1397                           	callstack 0
  1398                           
  1399 ;; *************** function _isdigit *****************
  1400 ;; Defined at:
  1401 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  c               1    wreg     unsigned char 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  c               1    2[COMRAM] unsigned char 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;		None               void
  1408 ;; Registers used:
  1409 ;;		wreg, status,2, status,0
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1415 ;;      Params:         0       0       0       0
  1416 ;;      Locals:         2       0       0       0
  1417 ;;      Temps:          1       0       0       0
  1418 ;;      Totals:         3       0       0       0
  1419 ;;Total ram usage:        3 bytes
  1420 ;; Hardware stack levels used: 1
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_atoi
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text8
  1429  000894                     __ptext8:
  1430                           	callstack 0
  1431  000894                     _isdigit:
  1432                           	callstack 27
  1433                           
  1434                           ;incstack = 0
  1435                           ;isdigit@c stored from wreg
  1436  000894  6E24               	movwf	isdigit@c^0,c
  1437  000896  0E00               	movlw	0
  1438  000898  6E23               	movwf	_isdigit$1301^0,c
  1439  00089A  0E3A               	movlw	58
  1440  00089C  6024               	cpfslt	isdigit@c^0,c
  1441  00089E  EF53  F004         	goto	i2u78_41
  1442  0008A2  EF55  F004         	goto	i2u78_40
  1443  0008A6                     i2u78_41:
  1444  0008A6  EF5F  F004         	goto	i2l1479
  1445  0008AA                     i2u78_40:
  1446  0008AA  0E2F               	movlw	47
  1447  0008AC  6424               	cpfsgt	isdigit@c^0,c
  1448  0008AE  EF5B  F004         	goto	i2u79_41
  1449  0008B2  EF5D  F004         	goto	i2u79_40
  1450  0008B6                     i2u79_41:
  1451  0008B6  EF5F  F004         	goto	i2l1479
  1452  0008BA                     i2u79_40:
  1453  0008BA  0E01               	movlw	1
  1454  0008BC  6E23               	movwf	_isdigit$1301^0,c
  1455  0008BE                     i2l1479:
  1456  0008BE  C023  F022         	movff	_isdigit$1301,??_isdigit
  1457  0008C2  3022               	rrcf	??_isdigit^0,w,c
  1458  0008C4  0012               	return		;funcret
  1459  0008C6                     __end_of_isdigit:
  1460                           	callstack 0
  1461                           
  1462 ;; *************** function ___wmul *****************
  1463 ;; Defined at:
  1464 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  multiplier      2    0[COMRAM] unsigned int 
  1467 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  product         2    4[COMRAM] unsigned int 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  2    0[COMRAM] unsigned int 
  1472 ;; Registers used:
  1473 ;;		wreg, status,2, status,0, prodl, prodh
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1479 ;;      Params:         4       0       0       0
  1480 ;;      Locals:         2       0       0       0
  1481 ;;      Temps:          0       0       0       0
  1482 ;;      Totals:         6       0       0       0
  1483 ;;Total ram usage:        6 bytes
  1484 ;; Hardware stack levels used: 1
  1485 ;; This function calls:
  1486 ;;		Nothing
  1487 ;; This function is called by:
  1488 ;;		_atoi
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text9
  1493  0008EC                     __ptext9:
  1494                           	callstack 0
  1495  0008EC                     ___wmul:
  1496                           	callstack 27
  1497  0008EC  5022               	movf	___wmul@multiplier^0,w,c
  1498  0008EE  0224               	mulwf	___wmul@multiplicand^0,c
  1499  0008F0  CFF3 F026          	movff	prodl,___wmul@product
  1500  0008F4  CFF4 F027          	movff	prodh,___wmul@product+1
  1501  0008F8  5022               	movf	___wmul@multiplier^0,w,c
  1502  0008FA  0225               	mulwf	(___wmul@multiplicand+1)^0,c
  1503  0008FC  50F3               	movf	243,w,c
  1504  0008FE  2627               	addwf	(___wmul@product+1)^0,f,c
  1505  000900  5023               	movf	(___wmul@multiplier+1)^0,w,c
  1506  000902  0224               	mulwf	___wmul@multiplicand^0,c
  1507  000904  50F3               	movf	243,w,c
  1508  000906  2627               	addwf	(___wmul@product+1)^0,f,c
  1509  000908  C026  F022         	movff	___wmul@product,?___wmul
  1510  00090C  C027  F023         	movff	___wmul@product+1,?___wmul+1
  1511  000910  0012               	return		;funcret
  1512  000912                     __end_of___wmul:
  1513                           	callstack 0
  1514                           
  1515 ;; *************** function _WriteSPI *****************
  1516 ;; Defined at:
  1517 ;;		line 114 in file "masterMain.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  data_out        1    wreg     unsigned char 
  1520 ;;  a               1    0[COMRAM] unsigned char 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  data_out        1    1[COMRAM] unsigned char 
  1523 ;;  TempVar         1    0        unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      char 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1533 ;;      Params:         1       0       0       0
  1534 ;;      Locals:         1       0       0       0
  1535 ;;      Temps:          0       0       0       0
  1536 ;;      Totals:         2       0       0       0
  1537 ;;Total ram usage:        2 bytes
  1538 ;; Hardware stack levels used: 1
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_ISR
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text10
  1547  000624                     __ptext10:
  1548                           	callstack 0
  1549  000624                     _WriteSPI:
  1550                           	callstack 28
  1551                           
  1552                           ;incstack = 0
  1553                           ;WriteSPI@data_out stored from wreg
  1554  000624  6E23               	movwf	WriteSPI@data_out^0,c
  1555  000626                     
  1556                           ;masterMain.c: 115: if(a==1)
  1557  000626  0422               	decf	WriteSPI@a^0,w,c
  1558  000628  A4D8               	btfss	status,2,c
  1559  00062A  EF19  F003         	goto	i2u80_41
  1560  00062E  EF1B  F003         	goto	i2u80_40
  1561  000632                     i2u80_41:
  1562  000632  EF1C  F003         	goto	i2l1487
  1563  000636                     i2u80_40:
  1564  000636                     
  1565                           ;masterMain.c: 116: PORTCbits.RC1 = 0;
  1566  000636  9282               	bcf	130,1,c	;volatile
  1567  000638                     i2l1487:
  1568                           
  1569                           ;masterMain.c: 117: if(a==2)
  1570  000638  0E02               	movlw	2
  1571  00063A  1822               	xorwf	WriteSPI@a^0,w,c
  1572  00063C  A4D8               	btfss	status,2,c
  1573  00063E  EF23  F003         	goto	i2u81_41
  1574  000642  EF25  F003         	goto	i2u81_40
  1575  000646                     i2u81_41:
  1576  000646  EF26  F003         	goto	i2l104
  1577  00064A                     i2u81_40:
  1578  00064A                     
  1579                           ;masterMain.c: 118: PORTCbits.RC2 = 0;
  1580  00064A  9482               	bcf	130,2,c	;volatile
  1581  00064C                     i2l104:
  1582  00064C  50C9               	movf	201,w,c	;volatile
  1583                           
  1584                           ;masterMain.c: 121: PIR1bits.SSPIF = 0;
  1585  00064E  969E               	bcf	158,3,c	;volatile
  1586                           
  1587                           ;masterMain.c: 122: SSPCON1bits.WCOL = 0;
  1588  000650  9EC6               	bcf	198,7,c	;volatile
  1589                           
  1590                           ;masterMain.c: 123: SSPBUF = data_out;
  1591  000652  C023  FFC9         	movff	WriteSPI@data_out,4041	;volatile
  1592                           
  1593                           ;masterMain.c: 124: if (SSPCON1 & 0x80)
  1594  000656  AEC6               	btfss	198,7,c	;volatile
  1595  000658  EF30  F003         	goto	i2u82_41
  1596  00065C  EF32  F003         	goto	i2u82_40
  1597  000660                     i2u82_41:
  1598  000660  EF34  F003         	goto	i2l108
  1599  000664                     i2u82_40:
  1600  000664  EF4E  F003         	goto	i2l106
  1601  000668                     i2l108:
  1602  000668  A69E               	btfss	158,3,c	;volatile
  1603  00066A  EF39  F003         	goto	i2u83_41
  1604  00066E  EF3B  F003         	goto	i2u83_40
  1605  000672                     i2u83_41:
  1606  000672  EF34  F003         	goto	i2l108
  1607  000676                     i2u83_40:
  1608  000676                     
  1609                           ;masterMain.c: 128: if(a==1)
  1610  000676  0422               	decf	WriteSPI@a^0,w,c
  1611  000678  A4D8               	btfss	status,2,c
  1612  00067A  EF41  F003         	goto	i2u84_41
  1613  00067E  EF43  F003         	goto	i2u84_40
  1614  000682                     i2u84_41:
  1615  000682  EF44  F003         	goto	i2l1499
  1616  000686                     i2u84_40:
  1617  000686                     
  1618                           ;masterMain.c: 129: PORTCbits.RC1 = 1;
  1619  000686  8282               	bsf	130,1,c	;volatile
  1620  000688                     i2l1499:
  1621                           
  1622                           ;masterMain.c: 130: if(a==2)
  1623  000688  0E02               	movlw	2
  1624  00068A  1822               	xorwf	WriteSPI@a^0,w,c
  1625  00068C  A4D8               	btfss	status,2,c
  1626  00068E  EF4B  F003         	goto	i2u85_41
  1627  000692  EF4D  F003         	goto	i2u85_40
  1628  000696                     i2u85_41:
  1629  000696  EF4E  F003         	goto	i2l106
  1630  00069A                     i2u85_40:
  1631  00069A                     
  1632                           ;masterMain.c: 131: PORTCbits.RC2 = 1;
  1633  00069A  8482               	bsf	130,2,c	;volatile
  1634  00069C                     i2l106:
  1635  00069C  0012               	return		;funcret
  1636  00069E                     __end_of_WriteSPI:
  1637                           	callstack 0
  1638                           
  1639 ;; *************** function _UARTM2 *****************
  1640 ;; Defined at:
  1641 ;;		line 169 in file "masterMain.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  i               2   23[COMRAM] int 
  1646 ;;  tempM2          1   25[COMRAM] unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1656 ;;      Params:         0       0       0       0
  1657 ;;      Locals:         3       0       0       0
  1658 ;;      Temps:          1       0       0       0
  1659 ;;      Totals:         4       0       0       0
  1660 ;;Total ram usage:        4 bytes
  1661 ;; Hardware stack levels used: 1
  1662 ;; Hardware stack levels required when called: 3
  1663 ;; This function calls:
  1664 ;;		_ReadSPI
  1665 ;;		_itoa
  1666 ;;		_tx_char
  1667 ;; This function is called by:
  1668 ;;		_ISR
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text11
  1673  0004C0                     __ptext11:
  1674                           	callstack 0
  1675  0004C0                     _UARTM2:
  1676                           	callstack 25
  1677  0004C0                     
  1678                           ;masterMain.c: 170: unsigned char tempM2;;masterMain.c: 171: tempM2 = ReadSPI(2);
  1679  0004C0  0E00               	movlw	0
  1680  0004C2  6E23               	movwf	(ReadSPI@a+1)^0,c
  1681  0004C4  0E02               	movlw	2
  1682  0004C6  6E22               	movwf	ReadSPI@a^0,c
  1683  0004C8  EC89  F003         	call	_ReadSPI	;wreg free
  1684  0004CC  6E3B               	movwf	UARTM2@tempM2^0,c
  1685  0004CE                     
  1686                           ;masterMain.c: 172: if ((int)tempM2==0 || (int)tempM2==(int)speedRef2)
  1687  0004CE  503B               	movf	UARTM2@tempM2^0,w,c
  1688  0004D0  B4D8               	btfsc	status,2,c
  1689  0004D2  EF6D  F002         	goto	i2u89_41
  1690  0004D6  EF6F  F002         	goto	i2u89_40
  1691  0004DA                     i2u89_41:
  1692  0004DA  EF7D  F002         	goto	i2l1531
  1693  0004DE                     i2u89_40:
  1694  0004DE  5045               	movf	_speedRef2^0,w,c
  1695  0004E0  183B               	xorwf	UARTM2@tempM2^0,w,c
  1696  0004E2  A4D8               	btfss	status,2,c
  1697  0004E4  EF76  F002         	goto	i2u90_41
  1698  0004E8  EF78  F002         	goto	i2u90_40
  1699  0004EC                     i2u90_41:
  1700  0004EC  EF7A  F002         	goto	i2l135
  1701  0004F0                     i2u90_40:
  1702  0004F0  EF7D  F002         	goto	i2l1531
  1703  0004F4                     i2l135:
  1704                           
  1705                           ;masterMain.c: 174: else;masterMain.c: 175: speedM2 = (int)tempM2;
  1706  0004F4  C03B  F001         	movff	UARTM2@tempM2,_speedM2
  1707  0004F8  6A02               	clrf	(_speedM2+1)^0,c
  1708  0004FA                     i2l1531:
  1709                           
  1710                           ;masterMain.c: 176: _delay((unsigned long)((1)*(20000000/4000.0)));
  1711  0004FA  0E07               	movlw	7
  1712  0004FC  6E38               	movwf	??_UARTM2^0,c
  1713  0004FE  0E7D               	movlw	125
  1714  000500                     i2u124_47:
  1715  000500  2EE8               	decfsz	wreg,f,c
  1716  000502  D7FE               	bra	i2u124_47
  1717  000504  2E38               	decfsz	??_UARTM2^0,f,c
  1718  000506  D7FC               	bra	i2u124_47
  1719  000508  F000               	nop	
  1720  00050A                     
  1721                           ;masterMain.c: 177: tx_char(0x42);
  1722  00050A  0E42               	movlw	66
  1723  00050C  ECB2  F004         	call	_tx_char
  1724  000510                     
  1725                           ;masterMain.c: 178: itoa(stringBuffer,speedM2,10);
  1726  000510  0E0E               	movlw	low _stringBuffer
  1727  000512  6E32               	movwf	itoa@buf^0,c
  1728  000514  0E00               	movlw	high _stringBuffer
  1729  000516  6E33               	movwf	(itoa@buf+1)^0,c
  1730  000518  C001  F034         	movff	_speedM2,itoa@val
  1731  00051C  C002  F035         	movff	_speedM2+1,itoa@val+1
  1732  000520  0E00               	movlw	0
  1733  000522  6E37               	movwf	(itoa@base+1)^0,c
  1734  000524  0E0A               	movlw	10
  1735  000526  6E36               	movwf	itoa@base^0,c
  1736  000528  ECF2  F003         	call	_itoa	;wreg free
  1737  00052C                     
  1738                           ;masterMain.c: 179: int i = 0;
  1739  00052C  0E00               	movlw	0
  1740  00052E  6E3A               	movwf	(UARTM2@i+1)^0,c
  1741  000530  0E00               	movlw	0
  1742  000532  6E39               	movwf	UARTM2@i^0,c
  1743                           
  1744                           ;masterMain.c: 180: while (stringBuffer[i]) {
  1745  000534  EFA7  F002         	goto	i2l1543
  1746  000538                     i2l1539:
  1747                           
  1748                           ;masterMain.c: 181: tx_char(stringBuffer[i]);
  1749  000538  0E0E               	movlw	low _stringBuffer
  1750  00053A  2439               	addwf	UARTM2@i^0,w,c
  1751  00053C  6ED9               	movwf	fsr2l,c
  1752  00053E  0E00               	movlw	high _stringBuffer
  1753  000540  203A               	addwfc	(UARTM2@i+1)^0,w,c
  1754  000542  6EDA               	movwf	fsr2h,c
  1755  000544  50DF               	movf	indf2,w,c
  1756  000546  ECB2  F004         	call	_tx_char
  1757  00054A                     
  1758                           ;masterMain.c: 182: i++;
  1759  00054A  4A39               	infsnz	UARTM2@i^0,f,c
  1760  00054C  2A3A               	incf	(UARTM2@i+1)^0,f,c
  1761  00054E                     i2l1543:
  1762  00054E  0E0E               	movlw	low _stringBuffer
  1763  000550  2439               	addwf	UARTM2@i^0,w,c
  1764  000552  6ED9               	movwf	fsr2l,c
  1765  000554  0E00               	movlw	high _stringBuffer
  1766  000556  203A               	addwfc	(UARTM2@i+1)^0,w,c
  1767  000558  6EDA               	movwf	fsr2h,c
  1768  00055A  50DF               	movf	indf2,w,c
  1769  00055C  A4D8               	btfss	status,2,c
  1770  00055E  EFB3  F002         	goto	i2u91_41
  1771  000562  EFB5  F002         	goto	i2u91_40
  1772  000566                     i2u91_41:
  1773  000566  EF9C  F002         	goto	i2l1539
  1774  00056A                     i2u91_40:
  1775  00056A                     
  1776                           ;masterMain.c: 183: };masterMain.c: 184: tx_char(0x0a);
  1777  00056A  0E0A               	movlw	10
  1778  00056C  ECB2  F004         	call	_tx_char
  1779  000570  0012               	return		;funcret
  1780  000572                     __end_of_UARTM2:
  1781                           	callstack 0
  1782                           
  1783 ;; *************** function _UARTM1 *****************
  1784 ;; Defined at:
  1785 ;;		line 152 in file "masterMain.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  i               2   23[COMRAM] int 
  1790 ;;  tempM1          1   25[COMRAM] unsigned char 
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1800 ;;      Params:         0       0       0       0
  1801 ;;      Locals:         3       0       0       0
  1802 ;;      Temps:          1       0       0       0
  1803 ;;      Totals:         4       0       0       0
  1804 ;;Total ram usage:        4 bytes
  1805 ;; Hardware stack levels used: 1
  1806 ;; Hardware stack levels required when called: 3
  1807 ;; This function calls:
  1808 ;;		_ReadSPI
  1809 ;;		_itoa
  1810 ;;		_tx_char
  1811 ;; This function is called by:
  1812 ;;		_ISR
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text12
  1817  000572                     __ptext12:
  1818                           	callstack 0
  1819  000572                     _UARTM1:
  1820                           	callstack 25
  1821  000572                     
  1822                           ;masterMain.c: 153: unsigned char tempM1;;masterMain.c: 154: tempM1 = ReadSPI(1);
  1823  000572  0E00               	movlw	0
  1824  000574  6E23               	movwf	(ReadSPI@a+1)^0,c
  1825  000576  0E01               	movlw	1
  1826  000578  6E22               	movwf	ReadSPI@a^0,c
  1827  00057A  EC89  F003         	call	_ReadSPI	;wreg free
  1828  00057E  6E3B               	movwf	UARTM1@tempM1^0,c
  1829  000580                     
  1830                           ;masterMain.c: 155: if ((int)tempM1==0 || (int)tempM1==(int)speedRef1)
  1831  000580  503B               	movf	UARTM1@tempM1^0,w,c
  1832  000582  B4D8               	btfsc	status,2,c
  1833  000584  EFC6  F002         	goto	i2u86_41
  1834  000588  EFC8  F002         	goto	i2u86_40
  1835  00058C                     i2u86_41:
  1836  00058C  EFD6  F002         	goto	i2l1509
  1837  000590                     i2u86_40:
  1838  000590  5046               	movf	_speedRef1^0,w,c
  1839  000592  183B               	xorwf	UARTM1@tempM1^0,w,c
  1840  000594  A4D8               	btfss	status,2,c
  1841  000596  EFCF  F002         	goto	i2u87_41
  1842  00059A  EFD1  F002         	goto	i2u87_40
  1843  00059E                     i2u87_41:
  1844  00059E  EFD3  F002         	goto	i2l125
  1845  0005A2                     i2u87_40:
  1846  0005A2  EFD6  F002         	goto	i2l1509
  1847  0005A6                     i2l125:
  1848                           
  1849                           ;masterMain.c: 157: else;masterMain.c: 158: speedM1 = (int)tempM1;
  1850  0005A6  C03B  F003         	movff	UARTM1@tempM1,_speedM1
  1851  0005AA  6A04               	clrf	(_speedM1+1)^0,c
  1852  0005AC                     i2l1509:
  1853                           
  1854                           ;masterMain.c: 159: _delay((unsigned long)((1)*(20000000/4000.0)));
  1855  0005AC  0E07               	movlw	7
  1856  0005AE  6E38               	movwf	??_UARTM1^0,c
  1857  0005B0  0E7D               	movlw	125
  1858  0005B2                     i2u125_47:
  1859  0005B2  2EE8               	decfsz	wreg,f,c
  1860  0005B4  D7FE               	bra	i2u125_47
  1861  0005B6  2E38               	decfsz	??_UARTM1^0,f,c
  1862  0005B8  D7FC               	bra	i2u125_47
  1863  0005BA  F000               	nop	
  1864  0005BC                     
  1865                           ;masterMain.c: 160: tx_char(0x41);
  1866  0005BC  0E41               	movlw	65
  1867  0005BE  ECB2  F004         	call	_tx_char
  1868  0005C2                     
  1869                           ;masterMain.c: 161: itoa(stringBuffer,speedM1,10);
  1870  0005C2  0E0E               	movlw	low _stringBuffer
  1871  0005C4  6E32               	movwf	itoa@buf^0,c
  1872  0005C6  0E00               	movlw	high _stringBuffer
  1873  0005C8  6E33               	movwf	(itoa@buf+1)^0,c
  1874  0005CA  C003  F034         	movff	_speedM1,itoa@val
  1875  0005CE  C004  F035         	movff	_speedM1+1,itoa@val+1
  1876  0005D2  0E00               	movlw	0
  1877  0005D4  6E37               	movwf	(itoa@base+1)^0,c
  1878  0005D6  0E0A               	movlw	10
  1879  0005D8  6E36               	movwf	itoa@base^0,c
  1880  0005DA  ECF2  F003         	call	_itoa	;wreg free
  1881  0005DE                     
  1882                           ;masterMain.c: 162: int i = 0;
  1883  0005DE  0E00               	movlw	0
  1884  0005E0  6E3A               	movwf	(UARTM1@i+1)^0,c
  1885  0005E2  0E00               	movlw	0
  1886  0005E4  6E39               	movwf	UARTM1@i^0,c
  1887                           
  1888                           ;masterMain.c: 163: while (stringBuffer[i]) {
  1889  0005E6  EF00  F003         	goto	i2l1521
  1890  0005EA                     i2l1517:
  1891                           
  1892                           ;masterMain.c: 164: tx_char(stringBuffer[i]);
  1893  0005EA  0E0E               	movlw	low _stringBuffer
  1894  0005EC  2439               	addwf	UARTM1@i^0,w,c
  1895  0005EE  6ED9               	movwf	fsr2l,c
  1896  0005F0  0E00               	movlw	high _stringBuffer
  1897  0005F2  203A               	addwfc	(UARTM1@i+1)^0,w,c
  1898  0005F4  6EDA               	movwf	fsr2h,c
  1899  0005F6  50DF               	movf	indf2,w,c
  1900  0005F8  ECB2  F004         	call	_tx_char
  1901  0005FC                     
  1902                           ;masterMain.c: 165: i++;
  1903  0005FC  4A39               	infsnz	UARTM1@i^0,f,c
  1904  0005FE  2A3A               	incf	(UARTM1@i+1)^0,f,c
  1905  000600                     i2l1521:
  1906  000600  0E0E               	movlw	low _stringBuffer
  1907  000602  2439               	addwf	UARTM1@i^0,w,c
  1908  000604  6ED9               	movwf	fsr2l,c
  1909  000606  0E00               	movlw	high _stringBuffer
  1910  000608  203A               	addwfc	(UARTM1@i+1)^0,w,c
  1911  00060A  6EDA               	movwf	fsr2h,c
  1912  00060C  50DF               	movf	indf2,w,c
  1913  00060E  A4D8               	btfss	status,2,c
  1914  000610  EF0C  F003         	goto	i2u88_41
  1915  000614  EF0E  F003         	goto	i2u88_40
  1916  000618                     i2u88_41:
  1917  000618  EFF5  F002         	goto	i2l1517
  1918  00061C                     i2u88_40:
  1919  00061C                     
  1920                           ;masterMain.c: 166: };masterMain.c: 167: tx_char(0x0a);
  1921  00061C  0E0A               	movlw	10
  1922  00061E  ECB2  F004         	call	_tx_char
  1923  000622  0012               	return		;funcret
  1924  000624                     __end_of_UARTM1:
  1925                           	callstack 0
  1926                           
  1927 ;; *************** function _tx_char *****************
  1928 ;; Defined at:
  1929 ;;		line 322 in file "masterMain.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  a               1    wreg     unsigned char 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;  a               1    0[COMRAM] unsigned char 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1943 ;;      Params:         0       0       0       0
  1944 ;;      Locals:         1       0       0       0
  1945 ;;      Temps:          0       0       0       0
  1946 ;;      Totals:         1       0       0       0
  1947 ;;Total ram usage:        1 bytes
  1948 ;; Hardware stack levels used: 1
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		_UARTM1
  1953 ;;		_UARTM2
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text13
  1958  000964                     __ptext13:
  1959                           	callstack 0
  1960  000964                     _tx_char:
  1961                           	callstack 27
  1962                           
  1963                           ;incstack = 0
  1964                           ;tx_char@a stored from wreg
  1965  000964  6E22               	movwf	tx_char@a^0,c
  1966  000966                     
  1967                           ;masterMain.c: 323: TXREG=a;
  1968  000966  C022  FFAD         	movff	tx_char@a,4013	;volatile
  1969  00096A                     i2l192:
  1970  00096A  A2AC               	btfss	4012,1,c	;volatile
  1971  00096C  EFBA  F004         	goto	i2u15_41
  1972  000970  EFBC  F004         	goto	i2u15_40
  1973  000974                     i2u15_41:
  1974  000974  EFB5  F004         	goto	i2l192
  1975  000978                     i2u15_40:
  1976  000978  0012               	return		;funcret
  1977  00097A                     __end_of_tx_char:
  1978                           	callstack 0
  1979                           
  1980 ;; *************** function _itoa *****************
  1981 ;; Defined at:
  1982 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  buf             2   16[COMRAM] PTR unsigned char 
  1985 ;;		 -> stringBuffer(20), 
  1986 ;;  val             2   18[COMRAM] int 
  1987 ;;  base            2   20[COMRAM] int 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  cp              2    0        PTR unsigned char 
  1990 ;;		 -> stringBuffer(20), 
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  2   16[COMRAM] PTR unsigned char 
  1993 ;; Registers used:
  1994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2000 ;;      Params:         6       0       0       0
  2001 ;;      Locals:         0       0       0       0
  2002 ;;      Temps:          0       0       0       0
  2003 ;;      Totals:         6       0       0       0
  2004 ;;Total ram usage:        6 bytes
  2005 ;; Hardware stack levels used: 1
  2006 ;; Hardware stack levels required when called: 2
  2007 ;; This function calls:
  2008 ;;		_utoa
  2009 ;; This function is called by:
  2010 ;;		_UARTM1
  2011 ;;		_UARTM2
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text14
  2016  0007E4                     __ptext14:
  2017                           	callstack 0
  2018  0007E4                     _itoa:
  2019                           	callstack 25
  2020  0007E4  BE35               	btfsc	(itoa@val+1)^0,7,c
  2021  0007E6  EFF9  F003         	goto	i2u77_40
  2022  0007EA  EFF7  F003         	goto	i2u77_41
  2023  0007EE                     i2u77_41:
  2024  0007EE  EF05  F004         	goto	i2l1461
  2025  0007F2                     i2u77_40:
  2026  0007F2  C032  FFD9         	movff	itoa@buf,fsr2l
  2027  0007F6  C033  FFDA         	movff	itoa@buf+1,fsr2h
  2028  0007FA  0E2D               	movlw	45
  2029  0007FC  6EDF               	movwf	indf2,c
  2030  0007FE  4A32               	infsnz	itoa@buf^0,f,c
  2031  000800  2A33               	incf	(itoa@buf+1)^0,f,c
  2032  000802  6C34               	negf	itoa@val^0,c
  2033  000804  1E35               	comf	(itoa@val+1)^0,f,c
  2034  000806  B0D8               	btfsc	status,0,c
  2035  000808  2A35               	incf	(itoa@val+1)^0,f,c
  2036  00080A                     i2l1461:
  2037  00080A  C032  F029         	movff	itoa@buf,utoa@buf
  2038  00080E  C033  F02A         	movff	itoa@buf+1,utoa@buf+1
  2039  000812  C034  F02B         	movff	itoa@val,utoa@val
  2040  000816  C035  F02C         	movff	itoa@val+1,utoa@val+1
  2041  00081A  C036  F02D         	movff	itoa@base,utoa@base
  2042  00081E  C037  F02E         	movff	itoa@base+1,utoa@base+1
  2043  000822  ECFF  F001         	call	_utoa	;wreg free
  2044  000826  0012               	return		;funcret
  2045  000828                     __end_of_itoa:
  2046                           	callstack 0
  2047                           
  2048 ;; *************** function _utoa *****************
  2049 ;; Defined at:
  2050 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  buf             2    7[COMRAM] PTR unsigned char 
  2053 ;;		 -> stringBuffer(20), 
  2054 ;;  val             2    9[COMRAM] unsigned int 
  2055 ;;  base            2   11[COMRAM] int 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  v               2   13[COMRAM] unsigned int 
  2058 ;;  c               1   15[COMRAM] unsigned char 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  2    7[COMRAM] PTR unsigned char 
  2061 ;; Registers used:
  2062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2068 ;;      Params:         6       0       0       0
  2069 ;;      Locals:         3       0       0       0
  2070 ;;      Temps:          0       0       0       0
  2071 ;;      Totals:         9       0       0       0
  2072 ;;Total ram usage:        9 bytes
  2073 ;; Hardware stack levels used: 1
  2074 ;; Hardware stack levels required when called: 1
  2075 ;; This function calls:
  2076 ;;		___lwdiv
  2077 ;;		___lwmod
  2078 ;; This function is called by:
  2079 ;;		_itoa
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text15
  2084  0003FE                     __ptext15:
  2085                           	callstack 0
  2086  0003FE                     _utoa:
  2087                           	callstack 25
  2088  0003FE  C02B  F02F         	movff	utoa@val,utoa@v
  2089  000402  C02C  F030         	movff	utoa@val+1,utoa@v+1
  2090  000406                     i2l1403:
  2091  000406  C02F  F022         	movff	utoa@v,___lwdiv@dividend
  2092  00040A  C030  F023         	movff	utoa@v+1,___lwdiv@dividend+1
  2093  00040E  C02D  F024         	movff	utoa@base,___lwdiv@divisor
  2094  000412  C02E  F025         	movff	utoa@base+1,___lwdiv@divisor+1
  2095  000416  EC4F  F003         	call	___lwdiv	;wreg free
  2096  00041A  C022  F02F         	movff	?___lwdiv,utoa@v
  2097  00041E  C023  F030         	movff	?___lwdiv+1,utoa@v+1
  2098  000422  4A29               	infsnz	utoa@buf^0,f,c
  2099  000424  2A2A               	incf	(utoa@buf+1)^0,f,c
  2100  000426  502F               	movf	utoa@v^0,w,c
  2101  000428  1030               	iorwf	(utoa@v+1)^0,w,c
  2102  00042A  A4D8               	btfss	status,2,c
  2103  00042C  EF1A  F002         	goto	i2u69_41
  2104  000430  EF1C  F002         	goto	i2u69_40
  2105  000434                     i2u69_41:
  2106  000434  EF03  F002         	goto	i2l1403
  2107  000438                     i2u69_40:
  2108  000438  C029  FFD9         	movff	utoa@buf,fsr2l
  2109  00043C  C02A  FFDA         	movff	utoa@buf+1,fsr2h
  2110  000440  0E00               	movlw	0
  2111  000442  6EDF               	movwf	indf2,c
  2112  000444  0629               	decf	utoa@buf^0,f,c
  2113  000446  A0D8               	btfss	status,0,c
  2114  000448  062A               	decf	(utoa@buf+1)^0,f,c
  2115  00044A                     i2l1413:
  2116  00044A  C02B  F022         	movff	utoa@val,___lwmod@dividend
  2117  00044E  C02C  F023         	movff	utoa@val+1,___lwmod@dividend+1
  2118  000452  C02D  F024         	movff	utoa@base,___lwmod@divisor
  2119  000456  C02E  F025         	movff	utoa@base+1,___lwmod@divisor+1
  2120  00045A  ECC0  F003         	call	___lwmod	;wreg free
  2121  00045E  5022               	movf	?___lwmod^0,w,c
  2122  000460  6E31               	movwf	utoa@c^0,c
  2123  000462  C02B  F022         	movff	utoa@val,___lwdiv@dividend
  2124  000466  C02C  F023         	movff	utoa@val+1,___lwdiv@dividend+1
  2125  00046A  C02D  F024         	movff	utoa@base,___lwdiv@divisor
  2126  00046E  C02E  F025         	movff	utoa@base+1,___lwdiv@divisor+1
  2127  000472  EC4F  F003         	call	___lwdiv	;wreg free
  2128  000476  C022  F02B         	movff	?___lwdiv,utoa@val
  2129  00047A  C023  F02C         	movff	?___lwdiv+1,utoa@val+1
  2130  00047E  0E09               	movlw	9
  2131  000480  6431               	cpfsgt	utoa@c^0,c
  2132  000482  EF45  F002         	goto	i2u70_41
  2133  000486  EF47  F002         	goto	i2u70_40
  2134  00048A                     i2u70_41:
  2135  00048A  EF49  F002         	goto	i2l895
  2136  00048E                     i2u70_40:
  2137  00048E  0E07               	movlw	7
  2138  000490  2631               	addwf	utoa@c^0,f,c
  2139  000492                     i2l895:
  2140  000492  0E30               	movlw	48
  2141  000494  2631               	addwf	utoa@c^0,f,c
  2142  000496  C029  FFD9         	movff	utoa@buf,fsr2l
  2143  00049A  C02A  FFDA         	movff	utoa@buf+1,fsr2h
  2144  00049E  C031  FFDF         	movff	utoa@c,indf2
  2145  0004A2  0629               	decf	utoa@buf^0,f,c
  2146  0004A4  A0D8               	btfss	status,0,c
  2147  0004A6  062A               	decf	(utoa@buf+1)^0,f,c
  2148  0004A8  502B               	movf	utoa@val^0,w,c
  2149  0004AA  102C               	iorwf	(utoa@val+1)^0,w,c
  2150  0004AC  A4D8               	btfss	status,2,c
  2151  0004AE  EF5B  F002         	goto	i2u71_41
  2152  0004B2  EF5D  F002         	goto	i2u71_40
  2153  0004B6                     i2u71_41:
  2154  0004B6  EF25  F002         	goto	i2l1413
  2155  0004BA                     i2u71_40:
  2156  0004BA                     
  2157                           ;	Return value of _utoa is never used
  2158  0004BA  4A29               	infsnz	utoa@buf^0,f,c
  2159  0004BC  2A2A               	incf	(utoa@buf+1)^0,f,c
  2160  0004BE  0012               	return		;funcret
  2161  0004C0                     __end_of_utoa:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function ___lwmod *****************
  2165 ;; Defined at:
  2166 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  dividend        2    0[COMRAM] unsigned int 
  2169 ;;  divisor         2    2[COMRAM] unsigned int 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  counter         1    4[COMRAM] unsigned char 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  2    0[COMRAM] unsigned int 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, status,0
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2181 ;;      Params:         4       0       0       0
  2182 ;;      Locals:         1       0       0       0
  2183 ;;      Temps:          0       0       0       0
  2184 ;;      Totals:         5       0       0       0
  2185 ;;Total ram usage:        5 bytes
  2186 ;; Hardware stack levels used: 1
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_utoa
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text16
  2195  000780                     __ptext16:
  2196                           	callstack 0
  2197  000780                     ___lwmod:
  2198                           	callstack 25
  2199  000780  5024               	movf	___lwmod@divisor^0,w,c
  2200  000782  1025               	iorwf	(___lwmod@divisor+1)^0,w,c
  2201  000784  B4D8               	btfsc	status,2,c
  2202  000786  EFC7  F003         	goto	i2u66_41
  2203  00078A  EFC9  F003         	goto	i2u66_40
  2204  00078E                     i2u66_41:
  2205  00078E  EFED  F003         	goto	i2l693
  2206  000792                     i2u66_40:
  2207  000792  0E01               	movlw	1
  2208  000794  6E26               	movwf	___lwmod@counter^0,c
  2209  000796  EFD1  F003         	goto	i2l1391
  2210  00079A                     i2l1389:
  2211  00079A  90D8               	bcf	status,0,c
  2212  00079C  3624               	rlcf	___lwmod@divisor^0,f,c
  2213  00079E  3625               	rlcf	(___lwmod@divisor+1)^0,f,c
  2214  0007A0  2A26               	incf	___lwmod@counter^0,f,c
  2215  0007A2                     i2l1391:
  2216  0007A2  AE25               	btfss	(___lwmod@divisor+1)^0,7,c
  2217  0007A4  EFD6  F003         	goto	i2u67_41
  2218  0007A8  EFD8  F003         	goto	i2u67_40
  2219  0007AC                     i2u67_41:
  2220  0007AC  EFCD  F003         	goto	i2l1389
  2221  0007B0                     i2u67_40:
  2222  0007B0                     i2l1393:
  2223  0007B0  5024               	movf	___lwmod@divisor^0,w,c
  2224  0007B2  5C22               	subwf	___lwmod@dividend^0,w,c
  2225  0007B4  5025               	movf	(___lwmod@divisor+1)^0,w,c
  2226  0007B6  5823               	subwfb	(___lwmod@dividend+1)^0,w,c
  2227  0007B8  A0D8               	btfss	status,0,c
  2228  0007BA  EFE1  F003         	goto	i2u68_41
  2229  0007BE  EFE3  F003         	goto	i2u68_40
  2230  0007C2                     i2u68_41:
  2231  0007C2  EFE7  F003         	goto	i2l1397
  2232  0007C6                     i2u68_40:
  2233  0007C6  5024               	movf	___lwmod@divisor^0,w,c
  2234  0007C8  5E22               	subwf	___lwmod@dividend^0,f,c
  2235  0007CA  5025               	movf	(___lwmod@divisor+1)^0,w,c
  2236  0007CC  5A23               	subwfb	(___lwmod@dividend+1)^0,f,c
  2237  0007CE                     i2l1397:
  2238  0007CE  90D8               	bcf	status,0,c
  2239  0007D0  3225               	rrcf	(___lwmod@divisor+1)^0,f,c
  2240  0007D2  3224               	rrcf	___lwmod@divisor^0,f,c
  2241  0007D4  2E26               	decfsz	___lwmod@counter^0,f,c
  2242  0007D6  EFD8  F003         	goto	i2l1393
  2243  0007DA                     i2l693:
  2244  0007DA  C022  F022         	movff	___lwmod@dividend,?___lwmod
  2245  0007DE  C023  F023         	movff	___lwmod@dividend+1,?___lwmod+1
  2246  0007E2  0012               	return		;funcret
  2247  0007E4                     __end_of___lwmod:
  2248                           	callstack 0
  2249                           
  2250 ;; *************** function ___lwdiv *****************
  2251 ;; Defined at:
  2252 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  dividend        2    0[COMRAM] unsigned int 
  2255 ;;  divisor         2    2[COMRAM] unsigned int 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  quotient        2    4[COMRAM] unsigned int 
  2258 ;;  counter         1    6[COMRAM] unsigned char 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  2    0[COMRAM] unsigned int 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2268 ;;      Params:         4       0       0       0
  2269 ;;      Locals:         3       0       0       0
  2270 ;;      Temps:          0       0       0       0
  2271 ;;      Totals:         7       0       0       0
  2272 ;;Total ram usage:        7 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_utoa
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text17
  2282  00069E                     __ptext17:
  2283                           	callstack 0
  2284  00069E                     ___lwdiv:
  2285                           	callstack 25
  2286  00069E  0E00               	movlw	0
  2287  0006A0  6E27               	movwf	(___lwdiv@quotient+1)^0,c
  2288  0006A2  0E00               	movlw	0
  2289  0006A4  6E26               	movwf	___lwdiv@quotient^0,c
  2290  0006A6  5024               	movf	___lwdiv@divisor^0,w,c
  2291  0006A8  1025               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2292  0006AA  B4D8               	btfsc	status,2,c
  2293  0006AC  EF5A  F003         	goto	i2u63_41
  2294  0006B0  EF5C  F003         	goto	i2u63_40
  2295  0006B4                     i2u63_41:
  2296  0006B4  EF84  F003         	goto	i2l683
  2297  0006B8                     i2u63_40:
  2298  0006B8  0E01               	movlw	1
  2299  0006BA  6E28               	movwf	___lwdiv@counter^0,c
  2300  0006BC  EF64  F003         	goto	i2l1371
  2301  0006C0                     i2l1369:
  2302  0006C0  90D8               	bcf	status,0,c
  2303  0006C2  3624               	rlcf	___lwdiv@divisor^0,f,c
  2304  0006C4  3625               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2305  0006C6  2A28               	incf	___lwdiv@counter^0,f,c
  2306  0006C8                     i2l1371:
  2307  0006C8  AE25               	btfss	(___lwdiv@divisor+1)^0,7,c
  2308  0006CA  EF69  F003         	goto	i2u64_41
  2309  0006CE  EF6B  F003         	goto	i2u64_40
  2310  0006D2                     i2u64_41:
  2311  0006D2  EF60  F003         	goto	i2l1369
  2312  0006D6                     i2u64_40:
  2313  0006D6                     i2l1373:
  2314  0006D6  90D8               	bcf	status,0,c
  2315  0006D8  3626               	rlcf	___lwdiv@quotient^0,f,c
  2316  0006DA  3627               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2317  0006DC  5024               	movf	___lwdiv@divisor^0,w,c
  2318  0006DE  5C22               	subwf	___lwdiv@dividend^0,w,c
  2319  0006E0  5025               	movf	(___lwdiv@divisor+1)^0,w,c
  2320  0006E2  5823               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2321  0006E4  A0D8               	btfss	status,0,c
  2322  0006E6  EF77  F003         	goto	i2u65_41
  2323  0006EA  EF79  F003         	goto	i2u65_40
  2324  0006EE                     i2u65_41:
  2325  0006EE  EF7E  F003         	goto	i2l1381
  2326  0006F2                     i2u65_40:
  2327  0006F2  5024               	movf	___lwdiv@divisor^0,w,c
  2328  0006F4  5E22               	subwf	___lwdiv@dividend^0,f,c
  2329  0006F6  5025               	movf	(___lwdiv@divisor+1)^0,w,c
  2330  0006F8  5A23               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2331  0006FA  8026               	bsf	___lwdiv@quotient^0,0,c
  2332  0006FC                     i2l1381:
  2333  0006FC  90D8               	bcf	status,0,c
  2334  0006FE  3225               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2335  000700  3224               	rrcf	___lwdiv@divisor^0,f,c
  2336  000702  2E28               	decfsz	___lwdiv@counter^0,f,c
  2337  000704  EF6B  F003         	goto	i2l1373
  2338  000708                     i2l683:
  2339  000708  C026  F022         	movff	___lwdiv@quotient,?___lwdiv
  2340  00070C  C027  F023         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2341  000710  0012               	return		;funcret
  2342  000712                     __end_of___lwdiv:
  2343                           	callstack 0
  2344                           
  2345 ;; *************** function _ReadSPI *****************
  2346 ;; Defined at:
  2347 ;;		line 135 in file "masterMain.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  a               2    0[COMRAM] int 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  TempVar         1    0        unsigned char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      unsigned char 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2361 ;;      Params:         2       0       0       0
  2362 ;;      Locals:         0       0       0       0
  2363 ;;      Temps:          0       0       0       0
  2364 ;;      Totals:         2       0       0       0
  2365 ;;Total ram usage:        2 bytes
  2366 ;; Hardware stack levels used: 1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_UARTM1
  2371 ;;		_UARTM2
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text18
  2376  000712                     __ptext18:
  2377                           	callstack 0
  2378  000712                     _ReadSPI:
  2379                           	callstack 27
  2380  000712                     
  2381                           ;masterMain.c: 136: if(a==1)
  2382  000712  0422               	decf	ReadSPI@a^0,w,c
  2383  000714  1023               	iorwf	(ReadSPI@a+1)^0,w,c
  2384  000716  A4D8               	btfss	status,2,c
  2385  000718  EF90  F003         	goto	i2u72_41
  2386  00071C  EF92  F003         	goto	i2u72_40
  2387  000720                     i2u72_41:
  2388  000720  EF93  F003         	goto	i2l1435
  2389  000724                     i2u72_40:
  2390  000724                     
  2391                           ;masterMain.c: 137: PORTCbits.RC1 = 0;
  2392  000724  9282               	bcf	130,1,c	;volatile
  2393  000726                     i2l1435:
  2394                           
  2395                           ;masterMain.c: 138: if(a==2)
  2396  000726  0E02               	movlw	2
  2397  000728  1822               	xorwf	ReadSPI@a^0,w,c
  2398  00072A  1023               	iorwf	(ReadSPI@a+1)^0,w,c
  2399  00072C  A4D8               	btfss	status,2,c
  2400  00072E  EF9B  F003         	goto	i2u73_41
  2401  000732  EF9D  F003         	goto	i2u73_40
  2402  000736                     i2u73_41:
  2403  000736  EF9E  F003         	goto	i2l116
  2404  00073A                     i2u73_40:
  2405  00073A                     
  2406                           ;masterMain.c: 139: PORTCbits.RC2 = 0;
  2407  00073A  9482               	bcf	130,2,c	;volatile
  2408  00073C                     i2l116:
  2409  00073C  50C9               	movf	201,w,c	;volatile
  2410                           
  2411                           ;masterMain.c: 142: PIR1bits.SSPIF = 0;
  2412  00073E  969E               	bcf	158,3,c	;volatile
  2413  000740                     
  2414                           ;masterMain.c: 143: SSPBUF = 0x00;
  2415  000740  0E00               	movlw	0
  2416  000742  6EC9               	movwf	201,c	;volatile
  2417  000744                     i2l117:
  2418  000744  A69E               	btfss	158,3,c	;volatile
  2419  000746  EFA7  F003         	goto	i2u74_41
  2420  00074A  EFA9  F003         	goto	i2u74_40
  2421  00074E                     i2u74_41:
  2422  00074E  EFA2  F003         	goto	i2l117
  2423  000752                     i2u74_40:
  2424  000752                     
  2425                           ;masterMain.c: 145: if(a==1)
  2426  000752  0422               	decf	ReadSPI@a^0,w,c
  2427  000754  1023               	iorwf	(ReadSPI@a+1)^0,w,c
  2428  000756  A4D8               	btfss	status,2,c
  2429  000758  EFB0  F003         	goto	i2u75_41
  2430  00075C  EFB2  F003         	goto	i2u75_40
  2431  000760                     i2u75_41:
  2432  000760  EFB3  F003         	goto	i2l1445
  2433  000764                     i2u75_40:
  2434  000764                     
  2435                           ;masterMain.c: 146: PORTCbits.RC1 = 1;
  2436  000764  8282               	bsf	130,1,c	;volatile
  2437  000766                     i2l1445:
  2438                           
  2439                           ;masterMain.c: 147: if(a==2)
  2440  000766  0E02               	movlw	2
  2441  000768  1822               	xorwf	ReadSPI@a^0,w,c
  2442  00076A  1023               	iorwf	(ReadSPI@a+1)^0,w,c
  2443  00076C  A4D8               	btfss	status,2,c
  2444  00076E  EFBB  F003         	goto	i2u76_41
  2445  000772  EFBD  F003         	goto	i2u76_40
  2446  000776                     i2u76_41:
  2447  000776  EFBE  F003         	goto	i2l1449
  2448  00077A                     i2u76_40:
  2449  00077A                     
  2450                           ;masterMain.c: 148: PORTCbits.RC2 = 1;
  2451  00077A  8482               	bsf	130,2,c	;volatile
  2452  00077C                     i2l1449:
  2453                           
  2454                           ;masterMain.c: 149: return (SSPBUF);
  2455  00077C  50C9               	movf	201,w,c	;volatile
  2456  00077E  0012               	return		;funcret
  2457  000780                     __end_of_ReadSPI:
  2458                           	callstack 0
  2459  0000                     
  2460                           	psect	rparam
  2461  0000                     
  2462                           	psect	temp
  2463  00004B                     btemp:
  2464                           	callstack 0
  2465  00004B                     	ds	1
  2466  0000                     int$flags	set	btemp
  2467  0000                     wtemp8	set	btemp+1
  2468  0000                     ttemp5	set	btemp+1
  2469  0000                     ttemp6	set	btemp+4
  2470  0000                     ttemp7	set	btemp+8
  2471                           
  2472                           	psect	idloc
  2473                           
  2474                           ;Config register IDLOC0 @ 0x200000
  2475                           ;	unspecified, using default values
  2476  200000                     	org	2097152
  2477  200000  FF                 	db	255
  2478                           
  2479                           ;Config register IDLOC1 @ 0x200001
  2480                           ;	unspecified, using default values
  2481  200001                     	org	2097153
  2482  200001  FF                 	db	255
  2483                           
  2484                           ;Config register IDLOC2 @ 0x200002
  2485                           ;	unspecified, using default values
  2486  200002                     	org	2097154
  2487  200002  FF                 	db	255
  2488                           
  2489                           ;Config register IDLOC3 @ 0x200003
  2490                           ;	unspecified, using default values
  2491  200003                     	org	2097155
  2492  200003  FF                 	db	255
  2493                           
  2494                           ;Config register IDLOC4 @ 0x200004
  2495                           ;	unspecified, using default values
  2496  200004                     	org	2097156
  2497  200004  FF                 	db	255
  2498                           
  2499                           ;Config register IDLOC5 @ 0x200005
  2500                           ;	unspecified, using default values
  2501  200005                     	org	2097157
  2502  200005  FF                 	db	255
  2503                           
  2504                           ;Config register IDLOC6 @ 0x200006
  2505                           ;	unspecified, using default values
  2506  200006                     	org	2097158
  2507  200006  FF                 	db	255
  2508                           
  2509                           ;Config register IDLOC7 @ 0x200007
  2510                           ;	unspecified, using default values
  2511  200007                     	org	2097159
  2512  200007  FF                 	db	255
  2513                           
  2514                           	psect	config
  2515                           
  2516                           ; Padding undefined space
  2517  300000                     	org	3145728
  2518  300000  FF                 	db	255
  2519                           
  2520                           ;Config register CONFIG1H @ 0x300001
  2521                           ;	Oscillator Selection bits
  2522                           ;	OSC = RC, 11XX External RC oscillator, CLKO function on RA6
  2523                           ;	Fail-Safe Clock Monitor Enable bit
  2524                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2525                           ;	Internal External Oscillator Switchover bit
  2526                           ;	IESO = ON, Internal External Switchover mode enabled
  2527  300001                     	org	3145729
  2528  300001  CC                 	db	204
  2529                           
  2530                           ;Config register CONFIG2L @ 0x300002
  2531                           ;	Power-up Timer Enable bit
  2532                           ;	PWRTEN = OFF, PWRT disabled
  2533                           ;	Brown-out Reset Enable bits
  2534                           ;	BOREN = ON, Brown-out Reset enabled
  2535                           ;	Brown Out Reset Voltage bits
  2536                           ;	BORV = 0x3, unprogrammed default
  2537  300002                     	org	3145730
  2538  300002  0F                 	db	15
  2539                           
  2540                           ;Config register CONFIG2H @ 0x300003
  2541                           ;	Watchdog Timer Enable bit
  2542                           ;	WDTEN = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2543                           ;	Watchdog Timer Postscale Select bits
  2544                           ;	WDPS = 32768, 1:32768
  2545                           ;	Watchdog Timer Window Enable bit
  2546                           ;	WINEN = OFF, WDT window disabled
  2547  300003                     	org	3145731
  2548  300003  3E                 	db	62
  2549                           
  2550                           ;Config register CONFIG3L @ 0x300004
  2551                           ;	PWM output pins Reset state control
  2552                           ;	PWMPIN = OFF, PWM outputs disabled upon Reset (default)
  2553                           ;	Low-Side Transistors Polarity
  2554                           ;	LPOL = HIGH, PWM0, 2, 4 and 6 are active-high
  2555                           ;	High-Side Transistors Polarity
  2556                           ;	HPOL = HIGH, PWM1, 3, 5 and 7 are active-high
  2557                           ;	Timer1 Oscillator MUX
  2558                           ;	T1OSCMX = ON, Low-power Timer1 operation when microcontroller is in Sleep mode
  2559  300004                     	org	3145732
  2560  300004  3C                 	db	60
  2561                           
  2562                           ;Config register CONFIG3H @ 0x300005
  2563                           ;	FLTA MUX bit
  2564                           ;	FLTAMX = RC1, FLTA input is multiplexed with RC1
  2565                           ;	SSP I/O MUX bit
  2566                           ;	SSPMX = RD1, SCK/SCL clocks and SDA/SDI data are multiplexed with RD3 and RD2, respect
      +                          ively. SDO output is multiplexed with RD1.
  2567                           ;	PWM4 MUX bit
  2568                           ;	PWM4MX = RB5, PWM4 output is multiplexed with RB5
  2569                           ;	TMR0/T5CKI External clock MUX bit
  2570                           ;	EXCLKMX = RC3, TMR0/T5CKI external clock input is multiplexed with RC3
  2571                           ;	MCLR Pin Enable bit
  2572                           ;	MCLRE = ON, Enabled
  2573  300005                     	org	3145733
  2574  300005  99                 	db	153
  2575                           
  2576                           ;Config register CONFIG4L @ 0x300006
  2577                           ;	Stack Full/Underflow Reset Enable bit
  2578                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2579                           ;	Low-Voltage ICSP Enable bit
  2580                           ;	LVP = ON, Low-voltage ICSP enabled
  2581                           ;	Background Debugger Enable bit
  2582                           ;	DEBUG = 0x1, unprogrammed default
  2583  300006                     	org	3145734
  2584  300006  85                 	db	133
  2585                           
  2586                           ; Padding undefined space
  2587  300007                     	org	3145735
  2588  300007  FF                 	db	255
  2589                           
  2590                           ;Config register CONFIG5L @ 0x300008
  2591                           ;	Code Protection bit
  2592                           ;	CP0 = OFF, Block 0 (000200-000FFFh) not code-protected
  2593                           ;	Code Protection bit
  2594                           ;	CP1 = OFF, Block 1 (001000-001FFF) not code-protected
  2595                           ;	Code Protection bit
  2596                           ;	CP2 = OFF, Block 2 (002000-002FFFh) not code-protected
  2597                           ;	Code Protection bit
  2598                           ;	CP3 = OFF, Block 3 (003000-003FFFh) not code-protected
  2599  300008                     	org	3145736
  2600  300008  0F                 	db	15
  2601                           
  2602                           ;Config register CONFIG5H @ 0x300009
  2603                           ;	Boot Block Code Protection bit
  2604                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code-protected
  2605                           ;	Data EEPROM Code Protection bit
  2606                           ;	CPD = OFF, Data EEPROM not code-protected
  2607  300009                     	org	3145737
  2608  300009  C0                 	db	192
  2609                           
  2610                           ;Config register CONFIG6L @ 0x30000A
  2611                           ;	Write Protection bit
  2612                           ;	WRT0 = OFF, Block 0 (000200-000FFFh) not write-protected
  2613                           ;	Write Protection bit
  2614                           ;	WRT1 = OFF, Block 1 (001000-001FFF) not write-protected
  2615                           ;	Write Protection bit
  2616                           ;	WRT2 = OFF, Block 2 (002000-002FFFh) not write-protected
  2617                           ;	Write Protection bit
  2618                           ;	WRT3 = OFF, Block 3 (003000-003FFFh) not write-protected
  2619  30000A                     	org	3145738
  2620  30000A  0F                 	db	15
  2621                           
  2622                           ;Config register CONFIG6H @ 0x30000B
  2623                           ;	Configuration Register Write Protection bit
  2624                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2625                           ;	Boot Block Write Protection bit
  2626                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
  2627                           ;	Data EEPROM Write Protection bit
  2628                           ;	WRTD = OFF, Data EEPROM not write-protected
  2629  30000B                     	org	3145739
  2630  30000B  E0                 	db	224
  2631                           
  2632                           ;Config register CONFIG7L @ 0x30000C
  2633                           ;	Table Read Protection bit
  2634                           ;	EBTR0 = OFF, Block 0 (000200-000FFFh) not protected from table reads executed in other
      +                           blocks
  2635                           ;	Table Read Protection bit
  2636                           ;	EBTR1 = OFF, Block 1 (001000-001FFF) not protected from table reads executed in other 
      +                          blocks
  2637                           ;	Table Read Protection bit
  2638                           ;	EBTR2 = OFF, Block 2 (002000-002FFFh) not protected from table reads executed in other
      +                           blocks
  2639                           ;	Table Read Protection bit
  2640                           ;	EBTR3 = OFF, Block 3 (003000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2641  30000C                     	org	3145740
  2642  30000C  0F                 	db	15
  2643                           
  2644                           ;Config register CONFIG7H @ 0x30000D
  2645                           ;	Boot Block Table Read Protection bit
  2646                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
  2647  30000D                     	org	3145741
  2648  30000D  40                 	db	64
  2649                           tosu	equ	0xFFF
  2650                           tosh	equ	0xFFE
  2651                           tosl	equ	0xFFD
  2652                           stkptr	equ	0xFFC
  2653                           pclatu	equ	0xFFB
  2654                           pclath	equ	0xFFA
  2655                           pcl	equ	0xFF9
  2656                           tblptru	equ	0xFF8
  2657                           tblptrh	equ	0xFF7
  2658                           tblptrl	equ	0xFF6
  2659                           tablat	equ	0xFF5
  2660                           prodh	equ	0xFF4
  2661                           prodl	equ	0xFF3
  2662                           indf0	equ	0xFEF
  2663                           postinc0	equ	0xFEE
  2664                           postdec0	equ	0xFED
  2665                           preinc0	equ	0xFEC
  2666                           plusw0	equ	0xFEB
  2667                           fsr0h	equ	0xFEA
  2668                           fsr0l	equ	0xFE9
  2669                           wreg	equ	0xFE8
  2670                           indf1	equ	0xFE7
  2671                           postinc1	equ	0xFE6
  2672                           postdec1	equ	0xFE5
  2673                           preinc1	equ	0xFE4
  2674                           plusw1	equ	0xFE3
  2675                           fsr1h	equ	0xFE2
  2676                           fsr1l	equ	0xFE1
  2677                           bsr	equ	0xFE0
  2678                           indf2	equ	0xFDF
  2679                           postinc2	equ	0xFDE
  2680                           postdec2	equ	0xFDD
  2681                           preinc2	equ	0xFDC
  2682                           plusw2	equ	0xFDB
  2683                           fsr2h	equ	0xFDA
  2684                           fsr2l	equ	0xFD9
  2685                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      74
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> str(COMRAM[4]), 

    gets_UART@string	PTR unsigned char  size(2) Largest target is 4
		 -> str(COMRAM[4]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_UARTM1
    _ISR->_UARTM2
    _atoi->___wmul
    _UARTM2->_itoa
    _UARTM1->_itoa
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                    _SPI_Init_Master
                        _setupTimer0
                          _setupUART
 ---------------------------------------------------------------------------------
 (1) _setupUART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init_Master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  7     7      0    5844
                                             26 COMRAM     7     7      0
                             _UARTM1
                             _UARTM2
                           _WriteSPI
                               _atoi
                          _gets_UART
                            _rx_char
 ---------------------------------------------------------------------------------
 (3) _gets_UART                                            4     2      2     143
                                              0 COMRAM     4     2      2
                            _rx_char
 ---------------------------------------------------------------------------------
 (3) _rx_char                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2     759
                                              6 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _WriteSPI                                             3     2      1     263
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _UARTM2                                               4     4      0    2295
                                             22 COMRAM     4     4      0
                            _ReadSPI
                               _itoa
                            _tx_char
 ---------------------------------------------------------------------------------
 (3) _UARTM1                                               4     4      0    2295
                                             22 COMRAM     4     4      0
                            _ReadSPI
                               _itoa
                            _tx_char
 ---------------------------------------------------------------------------------
 (4) _tx_char                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    1926
                                             16 COMRAM     6     0      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1307
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              3     1      2     241
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Init_Master
   _setupTimer0
   _setupUART

 _ISR (ROOT)
   _UARTM1
     _ReadSPI
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _tx_char
   _UARTM2
     _ReadSPI
     _itoa
     _tx_char
   _WriteSPI
   _atoi
     ___wmul
     _isdigit
   _gets_UART
     _rx_char
   _rx_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      4A       1       78.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4A       3        0.0%
DATA                 0      0      4A      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Nov 27 02:24:37 2021

                      _CS 007C22       ___wmul@multiplicand 0024                       l171 08E4  
                     l172 08E4                       l183 0962                       l177 094A  
                     l198 0930                       _ISR 0008                       _str 0047  
                     wreg 000FE8                      ?_ISR 0022                      ISR@c 0042  
                    l1701 08D6                      l1711 08E0                      l1703 08D8  
                    l1705 08DA                      l1707 08DC                      l1709 08DE  
                    l1681 0932                      l1691 0926                      l1683 0940  
                    l1685 0948                      l1677 094C                      l1693 08C6  
                    l1687 0912                      l1679 095E                      l1695 08CA  
                    l1689 091E                      l1697 08CE                      l1699 08D2  
                    _RCIF 007CF5                      _TMR0 000FD6                      _TMR1 000FCE  
                    _TRMT 007D61                      _atoi 02E6                      _main 08C6  
                    _itoa 07E4                      fsr2h 000FDA                      indf2 000FDF  
                    fsr1l 000FE1                      fsr2l 000FD9                      btemp 004B  
                    _utoa 03FE                      prodh 000FF4                      prodl 000FF3  
                    start 02E2              ___param_bank 000000           __end_of_ReadSPI 0780  
                   ??_ISR 003C                     ?_atoi 0028                     ?_main 0022  
                   ?_itoa 0032                     ?_utoa 0029           __end_of___lwdiv 0712  
                   i2l104 064C           __end_of___lwmod 07E4                     i2l122 077E  
                   i2l106 069C                     i2l116 073C                     i2l132 0622  
                   i2l108 0668                     i2l204 0910                     i2l117 0744  
                   i2l125 05A6                     i2l142 0570                     i2l135 04F4  
                   i2l148 0892                     i2l166 02CE                     i2l192 096A  
                   i2l186 097A                     i2l195 0978                     i2l700 07E2  
                   i2l189 098A                     i2l690 0710                     i2l683 0708  
                   i2l693 07DA                     i2l883 08C4                     i2l877 03F4  
                   i2l878 03FC                     i2l895 0492                     i2l897 04BE  
                   i2l889 0826                     _RCREG 000FAE                     _SPBRG 000FAF  
                   _TRISB 000F93                     _TXREG 000FAD   __end_of_SPI_Init_Master 0932  
                   _digit 000D                     _count 0005           __end_of_isdigit 08C6  
                   atoi@a 002D                     atoi@s 0028                     tablat 000FF5  
         __end_of_rx_char 098C                     ttemp5 004C                     ttemp6 004F  
                   ttemp7 0053                     utoa@c 0031           __end_of_tx_char 097A  
                   utoa@v 002F                     status 000FD8                     wtemp8 004C  
            _stringBuffer 000E           __initialization 0828              __end_of_atoi 03FE  
            __end_of_main 08EC              __end_of_itoa 0828              __end_of_utoa 04C0  
                  ??_atoi 002A                    ??_main 0000                    ??_itoa 0038  
                  ??_utoa 002F             __activetblptr 000000                    _ADCON0 000FC2  
                  _ADCON1 000FC1          __end_of_WriteSPI 069E                    i2l1401 03FE  
                  i2l1073 0966                    i2l1411 0444                    i2l1403 0406  
                  i2l1421 0496                    i2l1413 044A                    i2l1405 0422  
                  i2l1501 069A                    i2l1431 0712                    i2l1423 04A2  
                  i2l1415 0462                    i2l1407 0426                    i2l1511 05BC  
                  i2l1503 0572                    i2l1087 097A                    i2l1441 0752  
                  i2l1433 0724                    i2l1425 04A8                    i2l1417 047E  
                  i2l1409 0438                    i2l1521 0600                    i2l1513 05C2  
                  i2l1505 0580                    i2l1089 0988                    i2l1601 00A0  
                  i2l1443 0764                    i2l1435 0726                    i2l1371 06C8  
                  i2l1363 069E                    i2l1427 04BA                    i2l1419 048E  
                  i2l1523 061C                    i2l1515 05DE                    i2l1507 0590  
                  i2l1531 04FA                    i2l1603 00B0                    i2l1611 00FE  
                  i2l1445 0766                    i2l1437 073A                    i2l1381 06FC  
                  i2l1373 06D6                    i2l1365 06A6                    i2l1461 080A  
                  i2l1453 07E4                    i2l1517 05EA                    i2l1509 05AC  
                  i2l1541 054A                    i2l1533 050A                    i2l1525 04C0  
                  i2l1613 010E                    i2l1621 0158                    i2l1605 00C0  
                  i2l1447 077A                    i2l1439 0740                    i2l1383 0702  
                  i2l1375 06DC                    i2l1367 06B8                    i2l1391 07A2  
                  i2l1455 07F2                    i2l1519 05FC                    i2l1543 054E  
                  i2l1535 0510                    i2l1527 04CE                    i2l1471 0896  
                  i2l1551 087C                    i2l1631 0194                    i2l1615 011E  
                  i2l1607 00D0                    i2l1623 0160                    i2l1449 077C  
                  i2l1377 06F2                    i2l1369 06C0                    i2l1393 07B0  
                  i2l1385 0780                    i2l1457 07FE                    i2l1545 056A  
                  i2l1537 052C                    i2l1529 04DE                    i2l1465 08EC  
                  i2l1473 089A                    i2l1561 0322                    i2l1553 02E6  
                  i2l1641 01CA                    i2l1633 01A4                    i2l1625 016E  
                  i2l1617 012E                    i2l1609 00D4                    i2l1379 06FA  
                  i2l1395 07C6                    i2l1387 0792                    i2l1459 0802  
                  i2l1539 0538                    i2l1483 0626                    i2l1467 0908  
                  i2l1475 08AA                    i2l1571 0374                    i2l1563 032E  
                  i2l1555 02EA                    i2l1547 085E                    i2l1651 0216  
                  i2l1643 01EE                    i2l1635 01A6                    i2l1627 0174  
                  i2l1619 0132                    i2l1397 07CE                    i2l1389 079A  
                  i2l1485 0636                    i2l1477 08BA                    i2l1565 0348  
                  i2l1557 02EE                    i2l1549 086A                    i2l1661 024C  
                  i2l1653 0226                    i2l1645 01F2                    i2l1637 01B6  
                  i2l1629 0184                    i2l1581 001A                    i2l1399 07D4  
                  i2l1495 0676                    i2l1487 0638                    i2l1479 08BE  
                  i2l1575 03AC                    i2l1567 0352                    i2l1559 0308  
                  i2l1671 028E                    i2l1663 0270                    i2l1655 0228  
                  i2l1639 01C6                    i2l1647 01F6                    i2l1591 0068  
                  i2l1583 0028                    i2l1497 0686                    i2l1489 064A  
                  i2l1577 03C8                    i2l1569 036C                    i2l1673 02B8  
                  i2l1665 0274                    i2l1657 0238                    i2l1649 0206  
                  i2l1593 006C                    i2l1585 002C                    i2l1499 0688  
                  i2l1579 03D8                    i2l1675 02CA                    i2l1659 0248  
                  i2l1667 0278                    i2l1595 0080                    i2l1587 0050  
                  i2l1669 028A                    i2l1597 008C                    i2l1589 0054  
                  i2l1599 0096                    _UARTM1 0572                    _UARTM2 04C0  
                  _SSPBUF 000FC9                 ??_ReadSPI 0024                    ___wmul 08EC  
               ??___lwdiv 0026                 ??___lwmod 0026                    clear_0 084E  
                  isa$std 000001                    _number 0043              __pdataCOMRAM 0043  
               ??_isdigit 0022                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                 ??_rx_char 0022          ?_SPI_Init_Master 0022  
               ??_tx_char 0022              ?_setupTimer0 0022                __accesstop 0060  
 __end_of__initialization 0854             ___rparam_used 000001            __pcstackCOMRAM 0022  
      __size_of_gets_UART 0036                   ?_UARTM1 0022                   ?_UARTM2 0022  
                 UARTM1@i 0039                   UARTM2@i 0039                   ?___wmul 0022  
               ?_WriteSPI 0022        __size_of_setupUART 0018                   i2u15_40 0978  
                 i2u15_41 0974                   i2u17_40 0988                   i2u17_41 0984  
                 i2u70_40 048E                   i2u70_41 048A                   i2u63_40 06B8  
                 i2u71_40 04BA                   i2u63_41 06B4                   i2u71_41 04B6  
                 i2u72_40 0724                   i2u64_40 06D6                   i2u80_40 0636  
                 i2u72_41 0720                   i2u64_41 06D2                   i2u80_41 0632  
                 i2u73_40 073A                   i2u65_40 06F2                   i2u81_40 064A  
                 i2u73_41 0736                   i2u65_41 06EE                   i2u81_41 0646  
                 i2u74_40 0752                   i2u66_40 0792                   i2u90_40 04F0  
                 i2u82_40 0664                   i2u74_41 074E                   i2u66_41 078E  
                 i2u90_41 04EC                   i2u82_41 0660                   i2u75_40 0764  
                 i2u67_40 07B0                   i2u91_40 056A                   i2u83_40 0676  
                 i2u75_41 0760                   i2u67_41 07AC                   i2u91_41 0566  
                 i2u83_41 0672                   i2u76_40 077A                   i2u68_40 07C6  
                 i2u84_40 0686                   i2u92_40 0892                   i2u76_41 0776  
                 i2u68_41 07C2                   i2u84_41 0682                   i2u92_41 088E  
                 i2u69_40 0438                   i2u77_40 07F2                   i2u85_40 069A  
                 i2u93_40 0308                   i2u69_41 0434                   i2u77_41 07EE  
                 i2u85_41 0696                   i2u93_41 0304                   i2u86_40 0590  
                 i2u78_40 08AA                   i2u94_40 0322                   i2u86_41 058C  
                 i2u78_41 08A6                   i2u94_41 031E                   i2u87_40 05A2  
                 i2u79_40 08BA                   i2u95_40 0348                   i2u87_41 059E  
                 i2u79_41 08B6                   i2u95_41 0344                   i2u88_40 061C  
                 i2u96_40 036C                   i2u88_41 0618                   i2u96_41 0368  
                 i2u89_40 04DE                   i2u97_40 03C8                   i2u89_41 04DA  
                 i2u97_41 03C4                   i2u98_40 03D8                   i2u98_41 03D4  
                 i2u99_40 0028                   i2u99_41 0024                   _SSPCON1 000FC6  
                 _SSPSTAT 000FC7           __size_of_UARTM1 00B2           __size_of_UARTM2 00B2  
                 _ReadSPI 0712                   __Hparam 0000                   __Lparam 0000  
       __end_of_gets_UART 0894           __size_of___wmul 0026                   ___lwdiv 069E  
                 ___lwmod 0780                   __pcinit 0828                   __ramtop 0300  
              ??_WriteSPI 0023                   __ptext0 08C6                   __ptext1 094C  
                 __ptext2 0932                   __ptext3 0912                   __ptext5 085E  
                 __ptext6 097A                   __ptext7 02E6                   __ptext8 0894  
                 __ptext9 08EC                   _incStr1 0008                   _incStr2 0007  
               _T0CONbits 000FD5              __size_of_ISR 02DA                 _T1CONbits 000FCD  
                 _isdigit 0894                   _speedM1 0003                   _speedM2 0001  
                 _rx_char 097A                   _tx_char 0964      end_of_initialization 0854  
    __size_of_setupTimer0 001A                   itoa@buf 0032                   itoa@val 0034  
       __end_of_setupUART 0964                 _RCSTAbits 000FAB                   postdec1 000FE5  
        WriteSPI@data_out 0023                   postinc0 000FEE                   postinc2 000FDE  
                 utoa@buf 0029                   utoa@val 002B                 _PORTBbits 000F81  
               _PORTCbits 000F82                 _TRISCbits 000F94                 _TRISDbits 000F95  
              gets_UART@i 0024                 _TXSTAbits 000FAC            __end_of_UARTM1 0624  
          __end_of_UARTM2 0572            __end_of___wmul 0912             __pidataCOMRAM 098C  
         gets_UART@string 0022       start_initialization 0828               __end_of_ISR 02E2  
                ??_UARTM1 0038                  ??_UARTM2 0038  __size_of_SPI_Init_Master 0020  
                ??___wmul 0026         __size_of_WriteSPI 007A               __pbssCOMRAM 0001  
           __pcstackBANK0 0000              _isdigit$1301 0023                  ?_ReadSPI 0022  
               WriteSPI@a 0022          ___lwdiv@dividend 0022              UARTM1@tempM1 003B  
            UARTM2@tempM2 003B                 __pintcode 0008                  ?___lwdiv 0022  
                ?___lwmod 0022                 _gets_UART 085E                  ?_isdigit 0022  
                ?_rx_char 0022          ___lwdiv@quotient 0026                  ?_tx_char 0022  
          ___wmul@product 0026                  _IPR1bits 000F9F                  _PIE1bits 000F9D  
                i2u100_40 0050                  i2u100_41 004C                  i2u101_40 0068  
                i2u101_41 0064                  i2u110_40 0184                  i2u102_40 0080  
                i2u110_41 0180                  i2u102_41 007C                  i2u111_40 0194  
                i2u103_40 00B0                  i2u111_41 0190                  i2u103_41 00AC  
                i2u120_40 028A                  i2u112_40 01B6                  i2u104_40 00C0  
                i2u120_41 0286                  i2u112_41 01B2                  i2u104_41 00BC  
                i2u121_40 02A0                  i2u113_40 01C6                  i2u105_40 00E6  
                i2u121_41 0298                  i2u113_41 01C2                  i2u105_41 00DE  
                i2u122_40 02CA                  i2u121_48 02A2                  i2u114_40 01DC  
                i2u106_40 010E                  i2u105_48 00E8                  i2u122_41 02C6  
                i2u114_41 01D4                  i2u106_41 010A                  i2u115_40 0206  
                i2u114_48 01DE                  i2u107_40 011E                  i2u115_41 0202  
                i2u107_41 011A                  i2u123_47 0032                  i2u116_40 0216  
                i2u108_40 0144                  i2u116_41 0212                  i2u108_41 013C  
                i2u124_47 0500                  i2u117_40 0238                  i2u109_40 016E  
                i2u108_48 0146                  i2u117_41 0234                  i2u109_41 016A  
                i2u125_47 05B2                  i2u118_40 0248                  i2u118_41 0244  
                i2u119_40 025E                  i2u119_41 0256                  i2u119_48 0260  
                _PIR1bits 000F9E                 _speedRef1 0046                 _speedRef2 0045  
               _setupUART 094C         ??_SPI_Init_Master 0000                ?_gets_UART 0022  
               _transRdy1 000A                 _transRdy2 0009         ___wmul@multiplier 0022  
                ReadSPI@a 0022             ??_setupTimer0 0000                 copy_data0 083C  
        __size_of_ReadSPI 006E                  __Hrparam 0000                  __Lrparam 0000  
              ?_setupUART 0022          __size_of___lwdiv 0074          __size_of___lwmod 0064  
                _WriteSPI 0624          __size_of_isdigit 0032           ___lwdiv@divisor 0024  
         ___lwdiv@counter 0028                  __ptext10 0624                  __ptext11 04C0  
                __ptext12 0572                  __ptext13 0964                  __ptext14 07E4  
                __ptext15 03FE                  __ptext16 0780                  __ptext17 069E  
                __ptext18 0712          __size_of_rx_char 0012          __size_of_tx_char 0016  
           __size_of_atoi 0118             __size_of_main 0026             __size_of_itoa 0044  
           __size_of_utoa 00C2       __end_of_setupTimer0 094C                  _speed4M1 000C  
                _speed4M2 000B                  isa$xinst 000000                  int$flags 004B  
                atoi@sign 002C               ??_gets_UART 0024                _INTCONbits 000FF2  
                itoa@base 0036                  isdigit@c 0024                  intlevel2 0000  
        ___lwmod@dividend 0022               ??_setupUART 0000                  tx_char@a 0022  
                utoa@base 002D           ___lwmod@divisor 0024           ___lwmod@counter 0026  
             _SSPCON1bits 000FC6               _setupTimer0 0932           _SPI_Init_Master 0912  
