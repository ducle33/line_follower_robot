

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Nov 26 05:57:44 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4431 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	idataCOMRAM
    67  000526                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _number
    71  000526  0064               	dw	100
    72                           
    73                           ;initializer for _speedRef
    74  000528  B4                 	db	180
    75  0000                     _TMR1	set	4046
    76  0000                     _TMR0	set	4054
    77  0000                     _ADCON1	set	4033
    78  0000                     _ADCON0	set	4034
    79  0000                     _SSPSTAT	set	4039
    80  0000                     _TRISDbits	set	3989
    81  0000                     _IPR1bits	set	3999
    82  0000                     _TXREG	set	4013
    83  0000                     _RCREG	set	4014
    84  0000                     _SPBRG	set	4015
    85  0000                     _RCSTAbits	set	4011
    86  0000                     _TXSTAbits	set	4012
    87  0000                     _T1CONbits	set	4045
    88  0000                     _PIE1bits	set	3997
    89  0000                     _T0CONbits	set	4053
    90  0000                     _TRISCbits	set	3988
    91  0000                     _TRISB	set	3987
    92  0000                     _PORTBbits	set	3969
    93  0000                     _INTCONbits	set	4082
    94  0000                     _SSPCON1	set	4038
    95  0000                     _SSPCON1bits	set	4038
    96  0000                     _PIR1bits	set	3998
    97  0000                     _SSPBUF	set	4041
    98  0000                     _PORTCbits	set	3970
    99  0000                     _CS	set	31778
   100  0000                     _TRMT	set	32097
   101  0000                     _RCIF	set	31989
   102                           
   103                           ; #config settings
   104                           
   105                           	psect	cinit
   106  000420                     __pcinit:
   107                           	callstack 0
   108  000420                     start_initialization:
   109                           	callstack 0
   110  000420                     __initialization:
   111                           	callstack 0
   112                           
   113                           ; Initialize objects allocated to COMRAM (3 bytes)
   114                           ; load TBLPTR registers with __pidataCOMRAM
   115  000420  0E26               	movlw	low __pidataCOMRAM
   116  000422  6EF6               	movwf	tblptrl,c
   117  000424  0E05               	movlw	high __pidataCOMRAM
   118  000426  6EF7               	movwf	tblptrh,c
   119  000428  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   120  00042A  6EF8               	movwf	tblptru,c
   121  00042C  0009               	tblrd		*+	;fetch initializer
   122  00042E  CFF5 F03D          	movff	tablat,__pdataCOMRAM
   123  000432  0009               	tblrd		*+	;fetch initializer
   124  000434  CFF5 F03E          	movff	tablat,__pdataCOMRAM+1
   125  000438  0009               	tblrd		*+	;fetch initializer
   126  00043A  CFF5 F03F          	movff	tablat,__pdataCOMRAM+2
   127                           
   128                           ; Clear objects allocated to COMRAM (31 bytes)
   129  00043E  EE00  F001         	lfsr	0,__pbssCOMRAM
   130  000442  0E1F               	movlw	31
   131  000444                     clear_0:
   132  000444  6AEE               	clrf	postinc0,c
   133  000446  06E8               	decf	wreg,f,c
   134  000448  E1FD               	bnz	clear_0
   135  00044A                     end_of_initialization:
   136                           	callstack 0
   137  00044A                     __end_of__initialization:
   138                           	callstack 0
   139  00044A  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   140  00044C  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   141  00044E  0100               	movlb	0
   142  000450  EF43  F002         	goto	_main	;jump to C main() function
   143                           
   144                           	psect	bssCOMRAM
   145  000001                     __pbssCOMRAM:
   146                           	callstack 0
   147  000001                     _speedM2:
   148                           	callstack 0
   149  000001                     	ds	2
   150  000003                     _speedM1:
   151                           	callstack 0
   152  000003                     	ds	2
   153  000005                     _str:
   154                           	callstack 0
   155  000005                     	ds	2
   156  000007                     _count2:
   157                           	callstack 0
   158  000007                     	ds	2
   159  000009                     _count:
   160                           	callstack 0
   161  000009                     	ds	2
   162  00000B                     _digit:
   163                           	callstack 0
   164  00000B                     	ds	1
   165  00000C                     _stringBuffer:
   166                           	callstack 0
   167  00000C                     	ds	20
   168                           
   169                           	psect	dataCOMRAM
   170  00003D                     __pdataCOMRAM:
   171                           	callstack 0
   172  00003D                     _number:
   173                           	callstack 0
   174  00003D                     	ds	2
   175  00003F                     _speedRef:
   176                           	callstack 0
   177  00003F                     	ds	1
   178                           
   179                           	psect	cstackCOMRAM
   180  000020                     __pcstackCOMRAM:
   181                           	callstack 0
   182  000020                     ?___lwdiv:
   183                           	callstack 0
   184  000020                     ?___lwmod:
   185                           	callstack 0
   186  000020                     WriteSPI@data_out:
   187                           	callstack 0
   188  000020                     tx_char@a:
   189                           	callstack 0
   190  000020                     ReadSPI@a:
   191                           	callstack 0
   192  000020                     ___lwdiv@dividend:
   193                           	callstack 0
   194  000020                     ___lwmod@dividend:
   195                           	callstack 0
   196                           
   197                           ; 2 bytes @ 0x0
   198  000020                     	ds	2
   199  000022                     ___lwdiv@divisor:
   200                           	callstack 0
   201  000022                     ___lwmod@divisor:
   202                           	callstack 0
   203                           
   204                           ; 2 bytes @ 0x2
   205  000022                     	ds	2
   206  000024                     ___lwmod@counter:
   207                           	callstack 0
   208  000024                     ___lwdiv@quotient:
   209                           	callstack 0
   210                           
   211                           ; 2 bytes @ 0x4
   212  000024                     	ds	2
   213  000026                     ___lwdiv@counter:
   214                           	callstack 0
   215                           
   216                           ; 1 bytes @ 0x6
   217  000026                     	ds	1
   218  000027                     utoa@buf:
   219                           	callstack 0
   220                           
   221                           ; 2 bytes @ 0x7
   222  000027                     	ds	2
   223  000029                     utoa@val:
   224                           	callstack 0
   225                           
   226                           ; 2 bytes @ 0x9
   227  000029                     	ds	2
   228  00002B                     utoa@base:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0xB
   232  00002B                     	ds	2
   233  00002D                     utoa@v:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0xD
   237  00002D                     	ds	2
   238  00002F                     utoa@c:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0xF
   242  00002F                     	ds	1
   243  000030                     itoa@buf:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x10
   247  000030                     	ds	2
   248  000032                     itoa@val:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0x12
   252  000032                     	ds	2
   253  000034                     itoa@base:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0x14
   257  000034                     	ds	2
   258  000036                     UARTM1@i:
   259                           	callstack 0
   260  000036                     UARTM2@i:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x16
   264  000036                     	ds	2
   265  000038                     UARTM1@tempM1:
   266                           	callstack 0
   267  000038                     UARTM2@tempM2:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x18
   271  000038                     	ds	1
   272  000039                     ??_ISR:
   273                           
   274                           ; 1 bytes @ 0x19
   275  000039                     	ds	4
   276  00003D                     
   277                           ; 1 bytes @ 0x1D
   278 ;;
   279 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   280 ;;
   281 ;; *************** function _main *****************
   282 ;; Defined at:
   283 ;;		line 202 in file "masterMain.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;		None
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, status,2, cstack
   292 ;; Tracked objects:
   293 ;;		On entry : 0/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   297 ;;      Params:         0       0       0       0
   298 ;;      Locals:         0       0       0       0
   299 ;;      Temps:          0       0       0       0
   300 ;;      Totals:         0       0       0       0
   301 ;;Total ram usage:        0 bytes
   302 ;; Hardware stack levels required when called: 6
   303 ;; This function calls:
   304 ;;		_SPI_Init_Master
   305 ;;		_setupTimer0
   306 ;;		_setupUART
   307 ;; This function is called by:
   308 ;;		Startup code after reset
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312                           	psect	text0
   313  000486                     __ptext0:
   314                           	callstack 0
   315  000486                     _main:
   316                           	callstack 25
   317  000486                     
   318                           ;masterMain.c: 204: INTCONbits.GIE = 1; INTCONbits.PEIE = 1; TRISB = 0;
   319  000486  8EF2               	bsf	242,7,c	;volatile
   320  000488  8CF2               	bsf	242,6,c	;volatile
   321  00048A  0E00               	movlw	0
   322  00048C  6E93               	movwf	147,c	;volatile
   323  00048E                     
   324                           ;masterMain.c: 205: setupUART();
   325  00048E  EC73  F002         	call	_setupUART	;wreg free
   326  000492                     
   327                           ;masterMain.c: 206: setupTimer0();
   328  000492  EC66  F002         	call	_setupTimer0	;wreg free
   329  000496                     
   330                           ;masterMain.c: 207: PORTBbits.RB6 = 1;
   331  000496  8C81               	bsf	129,6,c	;volatile
   332  000498                     
   333                           ;masterMain.c: 208: TRISCbits.RC2 = 0;
   334  000498  9494               	bcf	148,2,c	;volatile
   335  00049A                     
   336                           ;masterMain.c: 209: PORTCbits.RC2 = 1;
   337  00049A  8482               	bsf	130,2,c	;volatile
   338  00049C                     
   339                           ;masterMain.c: 210: TRISCbits.RC1 = 0;
   340  00049C  9294               	bcf	148,1,c	;volatile
   341  00049E                     
   342                           ;masterMain.c: 211: PORTCbits.RC1 = 1;
   343  00049E  8282               	bsf	130,1,c	;volatile
   344  0004A0                     
   345                           ;masterMain.c: 212: SPI_Init_Master();
   346  0004A0  EC56  F002         	call	_SPI_Init_Master	;wreg free
   347  0004A4                     l138:
   348  0004A4  EF52  F002         	goto	l138
   349  0004A8  EF58  F000         	goto	start
   350  0004AC                     __end_of_main:
   351                           	callstack 0
   352                           
   353 ;; *************** function _setupUART *****************
   354 ;; Defined at:
   355 ;;		line 245 in file "masterMain.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg, status,2
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   369 ;;      Params:         0       0       0       0
   370 ;;      Locals:         0       0       0       0
   371 ;;      Temps:          0       0       0       0
   372 ;;      Totals:         0       0       0       0
   373 ;;Total ram usage:        0 bytes
   374 ;; Hardware stack levels used: 1
   375 ;; Hardware stack levels required when called: 5
   376 ;; This function calls:
   377 ;;		Nothing
   378 ;; This function is called by:
   379 ;;		_main
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383                           	psect	text1
   384  0004E6                     __ptext1:
   385                           	callstack 0
   386  0004E6                     _setupUART:
   387                           	callstack 25
   388  0004E6                     
   389                           ;masterMain.c: 246: TRISCbits.RC6 = 0;
   390  0004E6  9C94               	bcf	148,6,c	;volatile
   391                           
   392                           ;masterMain.c: 247: TRISCbits.RC7 = 1;
   393  0004E8  8E94               	bsf	148,7,c	;volatile
   394                           
   395                           ;masterMain.c: 248: TXSTAbits.BRGH = 0;
   396  0004EA  94AC               	bcf	172,2,c	;volatile
   397                           
   398                           ;masterMain.c: 249: TXSTAbits.SYNC = 0;
   399  0004EC  98AC               	bcf	172,4,c	;volatile
   400                           
   401                           ;masterMain.c: 250: TXSTAbits.TXEN = 1;
   402  0004EE  8AAC               	bsf	172,5,c	;volatile
   403                           
   404                           ;masterMain.c: 251: RCSTAbits.SPEN = 1;
   405  0004F0  8EAB               	bsf	171,7,c	;volatile
   406                           
   407                           ;masterMain.c: 252: RCSTAbits.CREN = 1;
   408  0004F2  88AB               	bsf	171,4,c	;volatile
   409                           
   410                           ;masterMain.c: 253: PIE1bits.RCIE = 1;
   411  0004F4  8A9D               	bsf	157,5,c	;volatile
   412                           
   413                           ;masterMain.c: 254: PIE1bits.TXIE = 0;
   414  0004F6  989D               	bcf	157,4,c	;volatile
   415  0004F8                     
   416                           ;masterMain.c: 255: SPBRG = 31;
   417  0004F8  0E1F               	movlw	31
   418  0004FA  6EAF               	movwf	175,c	;volatile
   419  0004FC  0012               	return		;funcret
   420  0004FE                     __end_of_setupUART:
   421                           	callstack 0
   422                           
   423 ;; *************** function _setupTimer0 *****************
   424 ;; Defined at:
   425 ;;		line 219 in file "masterMain.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   439 ;;      Params:         0       0       0       0
   440 ;;      Locals:         0       0       0       0
   441 ;;      Temps:          0       0       0       0
   442 ;;      Totals:         0       0       0       0
   443 ;;Total ram usage:        0 bytes
   444 ;; Hardware stack levels used: 1
   445 ;; Hardware stack levels required when called: 5
   446 ;; This function calls:
   447 ;;		Nothing
   448 ;; This function is called by:
   449 ;;		_main
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           	psect	text2
   454  0004CC                     __ptext2:
   455                           	callstack 0
   456  0004CC                     _setupTimer0:
   457                           	callstack 25
   458  0004CC                     
   459                           ;masterMain.c: 220: INTCONbits.TMR0IE = 1;
   460  0004CC  8AF2               	bsf	242,5,c	;volatile
   461                           
   462                           ;masterMain.c: 221: T0CONbits.T016BIT = 1;
   463  0004CE  8CD5               	bsf	213,6,c	;volatile
   464                           
   465                           ;masterMain.c: 222: T0CONbits.T0CS = 0;
   466  0004D0  9AD5               	bcf	213,5,c	;volatile
   467                           
   468                           ;masterMain.c: 225: T0CONbits.PSA = 0;
   469  0004D2  96D5               	bcf	213,3,c	;volatile
   470                           
   471                           ;masterMain.c: 226: T0CONbits.T0PS2 = 1;
   472  0004D4  84D5               	bsf	213,2,c	;volatile
   473                           
   474                           ;masterMain.c: 227: T0CONbits.T0PS1 = 0;
   475  0004D6  92D5               	bcf	213,1,c	;volatile
   476                           
   477                           ;masterMain.c: 228: T0CONbits.T0PS0 = 1;
   478  0004D8  80D5               	bsf	213,0,c	;volatile
   479  0004DA                     
   480                           ;masterMain.c: 229: TMR0 = 0;
   481  0004DA  0E00               	movlw	0
   482  0004DC  6ED7               	movwf	215,c	;volatile
   483  0004DE  0E00               	movlw	0
   484  0004E0  6ED6               	movwf	214,c	;volatile
   485  0004E2                     
   486                           ;masterMain.c: 230: T0CONbits.TMR0ON = 1;
   487  0004E2  8ED5               	bsf	213,7,c	;volatile
   488  0004E4  0012               	return		;funcret
   489  0004E6                     __end_of_setupTimer0:
   490                           	callstack 0
   491                           
   492 ;; *************** function _SPI_Init_Master *****************
   493 ;; Defined at:
   494 ;;		line 268 in file "masterMain.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, status,2
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   508 ;;      Params:         0       0       0       0
   509 ;;      Locals:         0       0       0       0
   510 ;;      Temps:          0       0       0       0
   511 ;;      Totals:         0       0       0       0
   512 ;;Total ram usage:        0 bytes
   513 ;; Hardware stack levels used: 1
   514 ;; Hardware stack levels required when called: 5
   515 ;; This function calls:
   516 ;;		Nothing
   517 ;; This function is called by:
   518 ;;		_main
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text3
   523  0004AC                     __ptext3:
   524                           	callstack 0
   525  0004AC                     _SPI_Init_Master:
   526                           	callstack 25
   527  0004AC                     
   528                           ;masterMain.c: 269: PIE1bits.SSPIE = 1;
   529  0004AC  869D               	bsf	157,3,c	;volatile
   530                           
   531                           ;masterMain.c: 270: IPR1bits.SSPIP = 1;
   532  0004AE  869F               	bsf	159,3,c	;volatile
   533                           
   534                           ;masterMain.c: 273: TRISDbits.TRISD2 = 1;
   535  0004B0  8495               	bsf	149,2,c	;volatile
   536                           
   537                           ;masterMain.c: 274: TRISDbits.TRISD3 = 0;
   538  0004B2  9695               	bcf	149,3,c	;volatile
   539                           
   540                           ;masterMain.c: 275: TRISDbits.TRISD1 = 0;
   541  0004B4  9295               	bcf	149,1,c	;volatile
   542                           
   543                           ;masterMain.c: 278: CS = 1;
   544  0004B6  8484               	bsf	3972,2,c	;volatile
   545  0004B8                     
   546                           ;masterMain.c: 279: SSPSTAT=0x40;
   547  0004B8  0E40               	movlw	64
   548  0004BA  6EC7               	movwf	199,c	;volatile
   549                           
   550                           ;masterMain.c: 280: SSPCON1=0x20;
   551  0004BC  0E20               	movlw	32
   552  0004BE  6EC6               	movwf	198,c	;volatile
   553  0004C0                     
   554                           ;masterMain.c: 282: PIR1bits.SSPIF=0;
   555  0004C0  969E               	bcf	158,3,c	;volatile
   556                           
   557                           ;masterMain.c: 286: ADCON0=0;
   558  0004C2  0E00               	movlw	0
   559  0004C4  6EC2               	movwf	194,c	;volatile
   560                           
   561                           ;masterMain.c: 288: ADCON1=0x0F;
   562  0004C6  0E0F               	movlw	15
   563  0004C8  6EC1               	movwf	193,c	;volatile
   564  0004CA  0012               	return		;funcret
   565  0004CC                     __end_of_SPI_Init_Master:
   566                           	callstack 0
   567                           
   568 ;; *************** function _ISR *****************
   569 ;; Defined at:
   570 ;;		line 181 in file "masterMain.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;		None
   573 ;; Auto vars:     Size  Location     Type
   574 ;;		None
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   584 ;;      Params:         0       0       0       0
   585 ;;      Locals:         0       0       0       0
   586 ;;      Temps:          4       0       0       0
   587 ;;      Totals:         4       0       0       0
   588 ;;Total ram usage:        4 bytes
   589 ;; Hardware stack levels used: 1
   590 ;; Hardware stack levels required when called: 4
   591 ;; This function calls:
   592 ;;		_UARTM1
   593 ;;		_UARTM2
   594 ;;		_WriteSPI
   595 ;;		_rx_char
   596 ;; This function is called by:
   597 ;;		Interrupt level 2
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	intcode
   602  000008                     __pintcode:
   603                           	callstack 0
   604  000008                     _ISR:
   605                           	callstack 25
   606                           
   607                           ;incstack = 0
   608  000008  8240               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   609  00000A  CFD9 F03B          	movff	fsr2l,??_ISR+2
   610  00000E  CFDA F03C          	movff	fsr2h,??_ISR+3
   611  000012                     
   612                           ;masterMain.c: 182: if(INTCONbits.TMR0IF == 1) {
   613  000012  A4F2               	btfss	242,2,c	;volatile
   614  000014  EF0E  F000         	goto	i2u50_41
   615  000018  EF10  F000         	goto	i2u50_40
   616  00001C                     i2u50_41:
   617  00001C  EF33  F000         	goto	i2l1344
   618  000020                     i2u50_40:
   619  000020                     
   620                           ;masterMain.c: 183: count++;
   621  000020  4A09               	infsnz	_count^0,f,c
   622  000022  2A0A               	incf	(_count+1)^0,f,c
   623  000024                     
   624                           ;masterMain.c: 184: if (count == 290) {
   625  000024  0E22               	movlw	34
   626  000026  1809               	xorwf	_count^0,w,c
   627  000028  E106               	bnz	i2u51_41
   628  00002A  040A               	decf	(_count+1)^0,w,c
   629  00002C  A4D8               	btfss	status,2,c
   630  00002E  EF1B  F000         	goto	i2u51_41
   631  000032  EF1D  F000         	goto	i2u51_40
   632  000036                     i2u51_41:
   633  000036  EF22  F000         	goto	i2l1338
   634  00003A                     i2u51_40:
   635  00003A                     
   636                           ;masterMain.c: 185: WriteSPI(speedRef);
   637  00003A  503F               	movf	_speedRef^0,w,c
   638  00003C  EC2A  F002         	call	_WriteSPI
   639  000040                     
   640                           ;masterMain.c: 186: UARTM2();
   641  000040  ECBB  F000         	call	_UARTM2	;wreg free
   642  000044                     i2l1338:
   643                           
   644                           ;masterMain.c: 187: };masterMain.c: 188: if (count == 300) {
   645  000044  0E2C               	movlw	44
   646  000046  1809               	xorwf	_count^0,w,c
   647  000048  E106               	bnz	i2u52_41
   648  00004A  040A               	decf	(_count+1)^0,w,c
   649  00004C  A4D8               	btfss	status,2,c
   650  00004E  EF2B  F000         	goto	i2u52_41
   651  000052  EF2D  F000         	goto	i2u52_40
   652  000056                     i2u52_41:
   653  000056  EF33  F000         	goto	i2l1344
   654  00005A                     i2u52_40:
   655  00005A                     
   656                           ;masterMain.c: 190: UARTM1();
   657  00005A  EC03  F001         	call	_UARTM1	;wreg free
   658  00005E                     
   659                           ;masterMain.c: 191: count = 0;
   660  00005E  0E00               	movlw	0
   661  000060  6E0A               	movwf	(_count+1)^0,c
   662  000062  0E00               	movlw	0
   663  000064  6E09               	movwf	_count^0,c
   664  000066                     i2l1344:
   665                           
   666                           ;masterMain.c: 192: };masterMain.c: 194: };masterMain.c: 196: if(RCIF == 1) {
   667  000066  AA9E               	btfss	3998,5,c	;volatile
   668  000068  EF38  F000         	goto	i2u53_41
   669  00006C  EF3A  F000         	goto	i2u53_40
   670  000070                     i2u53_41:
   671  000070  EF52  F000         	goto	i2l133
   672  000074                     i2u53_40:
   673  000074                     
   674                           ;masterMain.c: 197: speedRef = rx_char();
   675  000074  EC8A  F002         	call	_rx_char	;wreg free
   676  000078  6E3F               	movwf	_speedRef^0,c
   677  00007A                     
   678                           ;masterMain.c: 198: PORTBbits.RB6 = 1 - PORTBbits.RB6;
   679  00007A  BC81               	btfsc	129,6,c	;volatile
   680  00007C  EF42  F000         	goto	i2u54_41
   681  000080  EF46  F000         	goto	i2u54_40
   682  000084                     i2u54_41:
   683  000084  6A39               	clrf	??_ISR^0,c
   684  000086  2A39               	incf	??_ISR^0,f,c
   685  000088  EF47  F000         	goto	i2u54_48
   686  00008C                     i2u54_40:
   687  00008C  6A39               	clrf	??_ISR^0,c
   688  00008E                     i2u54_48:
   689  00008E  5039               	movf	??_ISR^0,w,c
   690  000090  0801               	sublw	1
   691  000092  6E3A               	movwf	(??_ISR+1)^0,c
   692  000094  3A3A               	swapf	(??_ISR+1)^0,f,c
   693  000096  463A               	rlncf	(??_ISR+1)^0,f,c
   694  000098  463A               	rlncf	(??_ISR+1)^0,f,c
   695  00009A  5081               	movf	129,w,c	;volatile
   696  00009C  183A               	xorwf	(??_ISR+1)^0,w,c
   697  00009E  0BBF               	andlw	-65
   698  0000A0  183A               	xorwf	(??_ISR+1)^0,w,c
   699  0000A2  6E81               	movwf	129,c	;volatile
   700  0000A4                     i2l133:
   701  0000A4  C03C  FFDA         	movff	??_ISR+3,fsr2h
   702  0000A8  C03B  FFD9         	movff	??_ISR+2,fsr2l
   703  0000AC  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   704  0000AE  0011               	retfie		f
   705  0000B0                     __end_of_ISR:
   706                           	callstack 0
   707                           
   708 ;; *************** function _rx_char *****************
   709 ;; Defined at:
   710 ;;		line 258 in file "masterMain.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      unsigned char 
   717 ;; Registers used:
   718 ;;		wreg, status,2
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   724 ;;      Params:         0       0       0       0
   725 ;;      Locals:         0       0       0       0
   726 ;;      Temps:          0       0       0       0
   727 ;;      Totals:         0       0       0       0
   728 ;;Total ram usage:        0 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; This function calls:
   731 ;;		Nothing
   732 ;; This function is called by:
   733 ;;		_ISR
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	text5
   738  000514                     __ptext5:
   739                           	callstack 0
   740  000514                     _rx_char:
   741                           	callstack 28
   742  000514                     i2l153:
   743  000514  AA9E               	btfss	3998,5,c	;volatile
   744  000516  EF8F  F002         	goto	i2u23_41
   745  00051A  EF91  F002         	goto	i2u23_40
   746  00051E                     i2u23_41:
   747  00051E  EF8A  F002         	goto	i2l153
   748  000522                     i2u23_40:
   749  000522                     
   750                           ;masterMain.c: 260: return RCREG;
   751  000522  50AE               	movf	174,w,c	;volatile
   752  000524  0012               	return		;funcret
   753  000526                     __end_of_rx_char:
   754                           	callstack 0
   755                           
   756 ;; *************** function _WriteSPI *****************
   757 ;; Defined at:
   758 ;;		line 116 in file "masterMain.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;  data_out        1    wreg     unsigned char 
   761 ;; Auto vars:     Size  Location     Type
   762 ;;  data_out        1    0[COMRAM] unsigned char 
   763 ;;  TempVar         1    0        unsigned char 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      char 
   766 ;; Registers used:
   767 ;;		wreg
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   773 ;;      Params:         0       0       0       0
   774 ;;      Locals:         1       0       0       0
   775 ;;      Temps:          0       0       0       0
   776 ;;      Totals:         1       0       0       0
   777 ;;Total ram usage:        1 bytes
   778 ;; Hardware stack levels used: 1
   779 ;; This function calls:
   780 ;;		Nothing
   781 ;; This function is called by:
   782 ;;		_ISR
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	text6
   787  000454                     __ptext6:
   788                           	callstack 0
   789  000454                     _WriteSPI:
   790                           	callstack 28
   791                           
   792                           ;incstack = 0
   793                           ;WriteSPI@data_out stored from wreg
   794  000454  6E20               	movwf	WriteSPI@data_out^0,c
   795  000456                     
   796                           ;masterMain.c: 117: PORTCbits.RC2 = 0;
   797  000456  9482               	bcf	130,2,c	;volatile
   798  000458  50C9               	movf	201,w,c	;volatile
   799                           
   800                           ;masterMain.c: 120: PIR1bits.SSPIF = 0;
   801  00045A  969E               	bcf	158,3,c	;volatile
   802                           
   803                           ;masterMain.c: 121: SSPCON1bits.WCOL = 0;
   804  00045C  9EC6               	bcf	198,7,c	;volatile
   805  00045E                     
   806                           ;masterMain.c: 122: SSPBUF = data_out;
   807  00045E  C020  FFC9         	movff	WriteSPI@data_out,4041	;volatile
   808  000462                     
   809                           ;masterMain.c: 123: if (SSPCON1 & 0x80)
   810  000462  AEC6               	btfss	198,7,c	;volatile
   811  000464  EF36  F002         	goto	i2u17_41
   812  000468  EF38  F002         	goto	i2u17_40
   813  00046C                     i2u17_41:
   814  00046C  EF3A  F002         	goto	i2l96
   815  000470                     i2u17_40:
   816  000470  EF42  F002         	goto	i2l94
   817  000474                     i2l96:
   818  000474  A69E               	btfss	158,3,c	;volatile
   819  000476  EF3F  F002         	goto	i2u18_41
   820  00047A  EF41  F002         	goto	i2u18_40
   821  00047E                     i2u18_41:
   822  00047E  EF3A  F002         	goto	i2l96
   823  000482                     i2u18_40:
   824  000482                     
   825                           ;masterMain.c: 127: PORTCbits.RC2 = 1;
   826  000482  8482               	bsf	130,2,c	;volatile
   827  000484                     i2l94:
   828  000484  0012               	return		;funcret
   829  000486                     __end_of_WriteSPI:
   830                           	callstack 0
   831                           
   832 ;; *************** function _UARTM2 *****************
   833 ;; Defined at:
   834 ;;		line 164 in file "masterMain.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  i               2   22[COMRAM] int 
   839 ;;  tempM2          1   24[COMRAM] unsigned char 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   849 ;;      Params:         0       0       0       0
   850 ;;      Locals:         3       0       0       0
   851 ;;      Temps:          0       0       0       0
   852 ;;      Totals:         3       0       0       0
   853 ;;Total ram usage:        3 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; Hardware stack levels required when called: 3
   856 ;; This function calls:
   857 ;;		_ReadSPI
   858 ;;		_itoa
   859 ;;		_tx_char
   860 ;; This function is called by:
   861 ;;		_ISR
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           	psect	text7
   866  000176                     __ptext7:
   867                           	callstack 0
   868  000176                     _UARTM2:
   869                           	callstack 25
   870  000176                     
   871                           ;masterMain.c: 165: unsigned char tempM2;;masterMain.c: 166: tempM2 = ReadSPI(2);
   872  000176  0E00               	movlw	0
   873  000178  6E21               	movwf	(ReadSPI@a+1)^0,c
   874  00017A  0E02               	movlw	2
   875  00017C  6E20               	movwf	ReadSPI@a^0,c
   876  00017E  EC85  F001         	call	_ReadSPI	;wreg free
   877  000182  6E38               	movwf	UARTM2@tempM2^0,c
   878  000184                     
   879                           ;masterMain.c: 167: if ((int)tempM2==0)
   880  000184  5038               	movf	UARTM2@tempM2^0,w,c
   881  000186  A4D8               	btfss	status,2,c
   882  000188  EFC8  F000         	goto	i2u47_41
   883  00018C  EFCA  F000         	goto	i2u47_40
   884  000190                     i2u47_41:
   885  000190  EFCC  F000         	goto	i2l119
   886  000194                     i2u47_40:
   887  000194  EFCF  F000         	goto	i2l1306
   888  000198                     i2l119:
   889                           
   890                           ;masterMain.c: 169: else;masterMain.c: 170: speedM2 = (int)tempM2;
   891  000198  C038  F001         	movff	UARTM2@tempM2,_speedM2
   892  00019C  6A02               	clrf	(_speedM2+1)^0,c
   893  00019E                     i2l1306:
   894                           
   895                           ;masterMain.c: 171: tx_char(0x42);
   896  00019E  0E42               	movlw	66
   897  0001A0  EC7F  F002         	call	_tx_char
   898  0001A4                     
   899                           ;masterMain.c: 172: itoa(stringBuffer,speedM2,10);
   900  0001A4  0E0C               	movlw	low _stringBuffer
   901  0001A6  6E30               	movwf	itoa@buf^0,c
   902  0001A8  0E00               	movlw	high _stringBuffer
   903  0001AA  6E31               	movwf	(itoa@buf+1)^0,c
   904  0001AC  C001  F032         	movff	_speedM2,itoa@val
   905  0001B0  C002  F033         	movff	_speedM2+1,itoa@val+1
   906  0001B4  0E00               	movlw	0
   907  0001B6  6E35               	movwf	(itoa@base+1)^0,c
   908  0001B8  0E0A               	movlw	10
   909  0001BA  6E34               	movwf	itoa@base^0,c
   910  0001BC  ECEE  F001         	call	_itoa	;wreg free
   911  0001C0                     
   912                           ;masterMain.c: 173: int i = 0;
   913  0001C0  0E00               	movlw	0
   914  0001C2  6E37               	movwf	(UARTM2@i+1)^0,c
   915  0001C4  0E00               	movlw	0
   916  0001C6  6E36               	movwf	UARTM2@i^0,c
   917                           
   918                           ;masterMain.c: 174: while (stringBuffer[i]) {
   919  0001C8  EFF1  F000         	goto	i2l1316
   920  0001CC                     i2l1312:
   921                           
   922                           ;masterMain.c: 175: tx_char(stringBuffer[i]);
   923  0001CC  0E0C               	movlw	low _stringBuffer
   924  0001CE  2436               	addwf	UARTM2@i^0,w,c
   925  0001D0  6ED9               	movwf	fsr2l,c
   926  0001D2  0E00               	movlw	high _stringBuffer
   927  0001D4  2037               	addwfc	(UARTM2@i+1)^0,w,c
   928  0001D6  6EDA               	movwf	fsr2h,c
   929  0001D8  50DF               	movf	indf2,w,c
   930  0001DA  EC7F  F002         	call	_tx_char
   931  0001DE                     
   932                           ;masterMain.c: 176: i++;
   933  0001DE  4A36               	infsnz	UARTM2@i^0,f,c
   934  0001E0  2A37               	incf	(UARTM2@i+1)^0,f,c
   935  0001E2                     i2l1316:
   936  0001E2  0E0C               	movlw	low _stringBuffer
   937  0001E4  2436               	addwf	UARTM2@i^0,w,c
   938  0001E6  6ED9               	movwf	fsr2l,c
   939  0001E8  0E00               	movlw	high _stringBuffer
   940  0001EA  2037               	addwfc	(UARTM2@i+1)^0,w,c
   941  0001EC  6EDA               	movwf	fsr2h,c
   942  0001EE  50DF               	movf	indf2,w,c
   943  0001F0  A4D8               	btfss	status,2,c
   944  0001F2  EFFD  F000         	goto	i2u48_41
   945  0001F6  EFFF  F000         	goto	i2u48_40
   946  0001FA                     i2u48_41:
   947  0001FA  EFE6  F000         	goto	i2l1312
   948  0001FE                     i2u48_40:
   949  0001FE                     
   950                           ;masterMain.c: 177: };masterMain.c: 178: tx_char(0x0a);
   951  0001FE  0E0A               	movlw	10
   952  000200  EC7F  F002         	call	_tx_char
   953  000204  0012               	return		;funcret
   954  000206                     __end_of_UARTM2:
   955                           	callstack 0
   956                           
   957 ;; *************** function _UARTM1 *****************
   958 ;; Defined at:
   959 ;;		line 148 in file "masterMain.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  i               2   22[COMRAM] int 
   964 ;;  tempM1          1   24[COMRAM] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   974 ;;      Params:         0       0       0       0
   975 ;;      Locals:         3       0       0       0
   976 ;;      Temps:          0       0       0       0
   977 ;;      Totals:         3       0       0       0
   978 ;;Total ram usage:        3 bytes
   979 ;; Hardware stack levels used: 1
   980 ;; Hardware stack levels required when called: 3
   981 ;; This function calls:
   982 ;;		_ReadSPI
   983 ;;		_itoa
   984 ;;		_tx_char
   985 ;; This function is called by:
   986 ;;		_ISR
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text8
   991  000206                     __ptext8:
   992                           	callstack 0
   993  000206                     _UARTM1:
   994                           	callstack 25
   995  000206                     
   996                           ;masterMain.c: 149: unsigned char tempM1;;masterMain.c: 150: tempM1 = ReadSPI(1);
   997  000206  0E00               	movlw	0
   998  000208  6E21               	movwf	(ReadSPI@a+1)^0,c
   999  00020A  0E01               	movlw	1
  1000  00020C  6E20               	movwf	ReadSPI@a^0,c
  1001  00020E  EC85  F001         	call	_ReadSPI	;wreg free
  1002  000212  6E38               	movwf	UARTM1@tempM1^0,c
  1003  000214                     
  1004                           ;masterMain.c: 151: if ((int)tempM1==0)
  1005  000214  5038               	movf	UARTM1@tempM1^0,w,c
  1006  000216  A4D8               	btfss	status,2,c
  1007  000218  EF10  F001         	goto	i2u45_41
  1008  00021C  EF12  F001         	goto	i2u45_40
  1009  000220                     i2u45_41:
  1010  000220  EF14  F001         	goto	i2l111
  1011  000224                     i2u45_40:
  1012  000224  EF17  F001         	goto	i2l1286
  1013  000228                     i2l111:
  1014                           
  1015                           ;masterMain.c: 153: else;masterMain.c: 154: speedM1 = (int)tempM1;
  1016  000228  C038  F003         	movff	UARTM1@tempM1,_speedM1
  1017  00022C  6A04               	clrf	(_speedM1+1)^0,c
  1018  00022E                     i2l1286:
  1019                           
  1020                           ;masterMain.c: 155: tx_char(0x41);
  1021  00022E  0E41               	movlw	65
  1022  000230  EC7F  F002         	call	_tx_char
  1023  000234                     
  1024                           ;masterMain.c: 156: itoa(stringBuffer,speedM1,10);
  1025  000234  0E0C               	movlw	low _stringBuffer
  1026  000236  6E30               	movwf	itoa@buf^0,c
  1027  000238  0E00               	movlw	high _stringBuffer
  1028  00023A  6E31               	movwf	(itoa@buf+1)^0,c
  1029  00023C  C003  F032         	movff	_speedM1,itoa@val
  1030  000240  C004  F033         	movff	_speedM1+1,itoa@val+1
  1031  000244  0E00               	movlw	0
  1032  000246  6E35               	movwf	(itoa@base+1)^0,c
  1033  000248  0E0A               	movlw	10
  1034  00024A  6E34               	movwf	itoa@base^0,c
  1035  00024C  ECEE  F001         	call	_itoa	;wreg free
  1036  000250                     
  1037                           ;masterMain.c: 157: int i = 0;
  1038  000250  0E00               	movlw	0
  1039  000252  6E37               	movwf	(UARTM1@i+1)^0,c
  1040  000254  0E00               	movlw	0
  1041  000256  6E36               	movwf	UARTM1@i^0,c
  1042                           
  1043                           ;masterMain.c: 158: while (stringBuffer[i]) {
  1044  000258  EF39  F001         	goto	i2l1296
  1045  00025C                     i2l1292:
  1046                           
  1047                           ;masterMain.c: 159: tx_char(stringBuffer[i]);
  1048  00025C  0E0C               	movlw	low _stringBuffer
  1049  00025E  2436               	addwf	UARTM1@i^0,w,c
  1050  000260  6ED9               	movwf	fsr2l,c
  1051  000262  0E00               	movlw	high _stringBuffer
  1052  000264  2037               	addwfc	(UARTM1@i+1)^0,w,c
  1053  000266  6EDA               	movwf	fsr2h,c
  1054  000268  50DF               	movf	indf2,w,c
  1055  00026A  EC7F  F002         	call	_tx_char
  1056  00026E                     
  1057                           ;masterMain.c: 160: i++;
  1058  00026E  4A36               	infsnz	UARTM1@i^0,f,c
  1059  000270  2A37               	incf	(UARTM1@i+1)^0,f,c
  1060  000272                     i2l1296:
  1061  000272  0E0C               	movlw	low _stringBuffer
  1062  000274  2436               	addwf	UARTM1@i^0,w,c
  1063  000276  6ED9               	movwf	fsr2l,c
  1064  000278  0E00               	movlw	high _stringBuffer
  1065  00027A  2037               	addwfc	(UARTM1@i+1)^0,w,c
  1066  00027C  6EDA               	movwf	fsr2h,c
  1067  00027E  50DF               	movf	indf2,w,c
  1068  000280  A4D8               	btfss	status,2,c
  1069  000282  EF45  F001         	goto	i2u46_41
  1070  000286  EF47  F001         	goto	i2u46_40
  1071  00028A                     i2u46_41:
  1072  00028A  EF2E  F001         	goto	i2l1292
  1073  00028E                     i2u46_40:
  1074  00028E                     
  1075                           ;masterMain.c: 161: };masterMain.c: 162: tx_char(0x0a);
  1076  00028E  0E0A               	movlw	10
  1077  000290  EC7F  F002         	call	_tx_char
  1078  000294  0012               	return		;funcret
  1079  000296                     __end_of_UARTM1:
  1080                           	callstack 0
  1081                           
  1082 ;; *************** function _tx_char *****************
  1083 ;; Defined at:
  1084 ;;		line 263 in file "masterMain.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  a               1    wreg     unsigned char 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  a               1    0[COMRAM] unsigned char 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1098 ;;      Params:         0       0       0       0
  1099 ;;      Locals:         1       0       0       0
  1100 ;;      Temps:          0       0       0       0
  1101 ;;      Totals:         1       0       0       0
  1102 ;;Total ram usage:        1 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_UARTM1
  1108 ;;		_UARTM2
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text9
  1113  0004FE                     __ptext9:
  1114                           	callstack 0
  1115  0004FE                     _tx_char:
  1116                           	callstack 27
  1117                           
  1118                           ;incstack = 0
  1119                           ;tx_char@a stored from wreg
  1120  0004FE  6E20               	movwf	tx_char@a^0,c
  1121  000500                     
  1122                           ;masterMain.c: 264: TXREG=a;
  1123  000500  C020  FFAD         	movff	tx_char@a,4013	;volatile
  1124  000504                     i2l159:
  1125  000504  A2AC               	btfss	4012,1,c	;volatile
  1126  000506  EF87  F002         	goto	i2u15_41
  1127  00050A  EF89  F002         	goto	i2u15_40
  1128  00050E                     i2u15_41:
  1129  00050E  EF82  F002         	goto	i2l159
  1130  000512                     i2u15_40:
  1131  000512  0012               	return		;funcret
  1132  000514                     __end_of_tx_char:
  1133                           	callstack 0
  1134                           
  1135 ;; *************** function _itoa *****************
  1136 ;; Defined at:
  1137 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  buf             2   16[COMRAM] PTR unsigned char 
  1140 ;;		 -> stringBuffer(20), 
  1141 ;;  val             2   18[COMRAM] int 
  1142 ;;  base            2   20[COMRAM] int 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  cp              2    0        PTR unsigned char 
  1145 ;;		 -> stringBuffer(20), 
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  2   16[COMRAM] PTR unsigned char 
  1148 ;; Registers used:
  1149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1155 ;;      Params:         6       0       0       0
  1156 ;;      Locals:         0       0       0       0
  1157 ;;      Temps:          0       0       0       0
  1158 ;;      Totals:         6       0       0       0
  1159 ;;Total ram usage:        6 bytes
  1160 ;; Hardware stack levels used: 1
  1161 ;; Hardware stack levels required when called: 2
  1162 ;; This function calls:
  1163 ;;		_utoa
  1164 ;; This function is called by:
  1165 ;;		_UARTM1
  1166 ;;		_UARTM2
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text10
  1171  0003DC                     __ptext10:
  1172                           	callstack 0
  1173  0003DC                     _itoa:
  1174                           	callstack 25
  1175  0003DC  BE33               	btfsc	(itoa@val+1)^0,7,c
  1176  0003DE  EFF5  F001         	goto	i2u44_40
  1177  0003E2  EFF3  F001         	goto	i2u44_41
  1178  0003E6                     i2u44_41:
  1179  0003E6  EF01  F002         	goto	i2l1276
  1180  0003EA                     i2u44_40:
  1181  0003EA  C030  FFD9         	movff	itoa@buf,fsr2l
  1182  0003EE  C031  FFDA         	movff	itoa@buf+1,fsr2h
  1183  0003F2  0E2D               	movlw	45
  1184  0003F4  6EDF               	movwf	indf2,c
  1185  0003F6  4A30               	infsnz	itoa@buf^0,f,c
  1186  0003F8  2A31               	incf	(itoa@buf+1)^0,f,c
  1187  0003FA  6C32               	negf	itoa@val^0,c
  1188  0003FC  1E33               	comf	(itoa@val+1)^0,f,c
  1189  0003FE  B0D8               	btfsc	status,0,c
  1190  000400  2A33               	incf	(itoa@val+1)^0,f,c
  1191  000402                     i2l1276:
  1192  000402  C030  F027         	movff	itoa@buf,utoa@buf
  1193  000406  C031  F028         	movff	itoa@buf+1,utoa@buf+1
  1194  00040A  C032  F029         	movff	itoa@val,utoa@val
  1195  00040E  C033  F02A         	movff	itoa@val+1,utoa@val+1
  1196  000412  C034  F02B         	movff	itoa@base,utoa@base
  1197  000416  C035  F02C         	movff	itoa@base+1,utoa@base+1
  1198  00041A  EC5A  F000         	call	_utoa	;wreg free
  1199  00041E  0012               	return		;funcret
  1200  000420                     __end_of_itoa:
  1201                           	callstack 0
  1202                           
  1203 ;; *************** function _utoa *****************
  1204 ;; Defined at:
  1205 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;  buf             2    7[COMRAM] PTR unsigned char 
  1208 ;;		 -> stringBuffer(20), 
  1209 ;;  val             2    9[COMRAM] unsigned int 
  1210 ;;  base            2   11[COMRAM] int 
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  v               2   13[COMRAM] unsigned int 
  1213 ;;  c               1   15[COMRAM] unsigned char 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  2    7[COMRAM] PTR unsigned char 
  1216 ;; Registers used:
  1217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1223 ;;      Params:         6       0       0       0
  1224 ;;      Locals:         3       0       0       0
  1225 ;;      Temps:          0       0       0       0
  1226 ;;      Totals:         9       0       0       0
  1227 ;;Total ram usage:        9 bytes
  1228 ;; Hardware stack levels used: 1
  1229 ;; Hardware stack levels required when called: 1
  1230 ;; This function calls:
  1231 ;;		___lwdiv
  1232 ;;		___lwmod
  1233 ;; This function is called by:
  1234 ;;		_itoa
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text11
  1239  0000B4                     __ptext11:
  1240                           	callstack 0
  1241  0000B4                     _utoa:
  1242                           	callstack 25
  1243  0000B4  C029  F02D         	movff	utoa@val,utoa@v
  1244  0000B8  C02A  F02E         	movff	utoa@val+1,utoa@v+1
  1245  0000BC                     i2l1218:
  1246  0000BC  C02D  F020         	movff	utoa@v,___lwdiv@dividend
  1247  0000C0  C02E  F021         	movff	utoa@v+1,___lwdiv@dividend+1
  1248  0000C4  C02B  F022         	movff	utoa@base,___lwdiv@divisor
  1249  0000C8  C02C  F023         	movff	utoa@base+1,___lwdiv@divisor+1
  1250  0000CC  EC4B  F001         	call	___lwdiv	;wreg free
  1251  0000D0  C020  F02D         	movff	?___lwdiv,utoa@v
  1252  0000D4  C021  F02E         	movff	?___lwdiv+1,utoa@v+1
  1253  0000D8  4A27               	infsnz	utoa@buf^0,f,c
  1254  0000DA  2A28               	incf	(utoa@buf+1)^0,f,c
  1255  0000DC  502D               	movf	utoa@v^0,w,c
  1256  0000DE  102E               	iorwf	(utoa@v+1)^0,w,c
  1257  0000E0  A4D8               	btfss	status,2,c
  1258  0000E2  EF75  F000         	goto	i2u36_41
  1259  0000E6  EF77  F000         	goto	i2u36_40
  1260  0000EA                     i2u36_41:
  1261  0000EA  EF5E  F000         	goto	i2l1218
  1262  0000EE                     i2u36_40:
  1263  0000EE  C027  FFD9         	movff	utoa@buf,fsr2l
  1264  0000F2  C028  FFDA         	movff	utoa@buf+1,fsr2h
  1265  0000F6  0E00               	movlw	0
  1266  0000F8  6EDF               	movwf	indf2,c
  1267  0000FA  0627               	decf	utoa@buf^0,f,c
  1268  0000FC  A0D8               	btfss	status,0,c
  1269  0000FE  0628               	decf	(utoa@buf+1)^0,f,c
  1270  000100                     i2l1228:
  1271  000100  C029  F020         	movff	utoa@val,___lwmod@dividend
  1272  000104  C02A  F021         	movff	utoa@val+1,___lwmod@dividend+1
  1273  000108  C02B  F022         	movff	utoa@base,___lwmod@divisor
  1274  00010C  C02C  F023         	movff	utoa@base+1,___lwmod@divisor+1
  1275  000110  ECBC  F001         	call	___lwmod	;wreg free
  1276  000114  5020               	movf	?___lwmod^0,w,c
  1277  000116  6E2F               	movwf	utoa@c^0,c
  1278  000118  C029  F020         	movff	utoa@val,___lwdiv@dividend
  1279  00011C  C02A  F021         	movff	utoa@val+1,___lwdiv@dividend+1
  1280  000120  C02B  F022         	movff	utoa@base,___lwdiv@divisor
  1281  000124  C02C  F023         	movff	utoa@base+1,___lwdiv@divisor+1
  1282  000128  EC4B  F001         	call	___lwdiv	;wreg free
  1283  00012C  C020  F029         	movff	?___lwdiv,utoa@val
  1284  000130  C021  F02A         	movff	?___lwdiv+1,utoa@val+1
  1285  000134  0E09               	movlw	9
  1286  000136  642F               	cpfsgt	utoa@c^0,c
  1287  000138  EFA0  F000         	goto	i2u37_41
  1288  00013C  EFA2  F000         	goto	i2u37_40
  1289  000140                     i2u37_41:
  1290  000140  EFA4  F000         	goto	i2l842
  1291  000144                     i2u37_40:
  1292  000144  0E07               	movlw	7
  1293  000146  262F               	addwf	utoa@c^0,f,c
  1294  000148                     i2l842:
  1295  000148  0E30               	movlw	48
  1296  00014A  262F               	addwf	utoa@c^0,f,c
  1297  00014C  C027  FFD9         	movff	utoa@buf,fsr2l
  1298  000150  C028  FFDA         	movff	utoa@buf+1,fsr2h
  1299  000154  C02F  FFDF         	movff	utoa@c,indf2
  1300  000158  0627               	decf	utoa@buf^0,f,c
  1301  00015A  A0D8               	btfss	status,0,c
  1302  00015C  0628               	decf	(utoa@buf+1)^0,f,c
  1303  00015E  5029               	movf	utoa@val^0,w,c
  1304  000160  102A               	iorwf	(utoa@val+1)^0,w,c
  1305  000162  A4D8               	btfss	status,2,c
  1306  000164  EFB6  F000         	goto	i2u38_41
  1307  000168  EFB8  F000         	goto	i2u38_40
  1308  00016C                     i2u38_41:
  1309  00016C  EF80  F000         	goto	i2l1228
  1310  000170                     i2u38_40:
  1311  000170                     
  1312                           ;	Return value of _utoa is never used
  1313  000170  4A27               	infsnz	utoa@buf^0,f,c
  1314  000172  2A28               	incf	(utoa@buf+1)^0,f,c
  1315  000174  0012               	return		;funcret
  1316  000176                     __end_of_utoa:
  1317                           	callstack 0
  1318                           
  1319 ;; *************** function ___lwmod *****************
  1320 ;; Defined at:
  1321 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  dividend        2    0[COMRAM] unsigned int 
  1324 ;;  divisor         2    2[COMRAM] unsigned int 
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;  counter         1    4[COMRAM] unsigned char 
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  2    0[COMRAM] unsigned int 
  1329 ;; Registers used:
  1330 ;;		wreg, status,2, status,0
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1336 ;;      Params:         4       0       0       0
  1337 ;;      Locals:         1       0       0       0
  1338 ;;      Temps:          0       0       0       0
  1339 ;;      Totals:         5       0       0       0
  1340 ;;Total ram usage:        5 bytes
  1341 ;; Hardware stack levels used: 1
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_utoa
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text12
  1350  000378                     __ptext12:
  1351                           	callstack 0
  1352  000378                     ___lwmod:
  1353                           	callstack 25
  1354  000378  5022               	movf	___lwmod@divisor^0,w,c
  1355  00037A  1023               	iorwf	(___lwmod@divisor+1)^0,w,c
  1356  00037C  B4D8               	btfsc	status,2,c
  1357  00037E  EFC3  F001         	goto	i2u33_41
  1358  000382  EFC5  F001         	goto	i2u33_40
  1359  000386                     i2u33_41:
  1360  000386  EFE9  F001         	goto	i2l660
  1361  00038A                     i2u33_40:
  1362  00038A  0E01               	movlw	1
  1363  00038C  6E24               	movwf	___lwmod@counter^0,c
  1364  00038E  EFCD  F001         	goto	i2l1206
  1365  000392                     i2l1204:
  1366  000392  90D8               	bcf	status,0,c
  1367  000394  3622               	rlcf	___lwmod@divisor^0,f,c
  1368  000396  3623               	rlcf	(___lwmod@divisor+1)^0,f,c
  1369  000398  2A24               	incf	___lwmod@counter^0,f,c
  1370  00039A                     i2l1206:
  1371  00039A  AE23               	btfss	(___lwmod@divisor+1)^0,7,c
  1372  00039C  EFD2  F001         	goto	i2u34_41
  1373  0003A0  EFD4  F001         	goto	i2u34_40
  1374  0003A4                     i2u34_41:
  1375  0003A4  EFC9  F001         	goto	i2l1204
  1376  0003A8                     i2u34_40:
  1377  0003A8                     i2l1208:
  1378  0003A8  5022               	movf	___lwmod@divisor^0,w,c
  1379  0003AA  5C20               	subwf	___lwmod@dividend^0,w,c
  1380  0003AC  5023               	movf	(___lwmod@divisor+1)^0,w,c
  1381  0003AE  5821               	subwfb	(___lwmod@dividend+1)^0,w,c
  1382  0003B0  A0D8               	btfss	status,0,c
  1383  0003B2  EFDD  F001         	goto	i2u35_41
  1384  0003B6  EFDF  F001         	goto	i2u35_40
  1385  0003BA                     i2u35_41:
  1386  0003BA  EFE3  F001         	goto	i2l1212
  1387  0003BE                     i2u35_40:
  1388  0003BE  5022               	movf	___lwmod@divisor^0,w,c
  1389  0003C0  5E20               	subwf	___lwmod@dividend^0,f,c
  1390  0003C2  5023               	movf	(___lwmod@divisor+1)^0,w,c
  1391  0003C4  5A21               	subwfb	(___lwmod@dividend+1)^0,f,c
  1392  0003C6                     i2l1212:
  1393  0003C6  90D8               	bcf	status,0,c
  1394  0003C8  3223               	rrcf	(___lwmod@divisor+1)^0,f,c
  1395  0003CA  3222               	rrcf	___lwmod@divisor^0,f,c
  1396  0003CC  2E24               	decfsz	___lwmod@counter^0,f,c
  1397  0003CE  EFD4  F001         	goto	i2l1208
  1398  0003D2                     i2l660:
  1399  0003D2  C020  F020         	movff	___lwmod@dividend,?___lwmod
  1400  0003D6  C021  F021         	movff	___lwmod@dividend+1,?___lwmod+1
  1401  0003DA  0012               	return		;funcret
  1402  0003DC                     __end_of___lwmod:
  1403                           	callstack 0
  1404                           
  1405 ;; *************** function ___lwdiv *****************
  1406 ;; Defined at:
  1407 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  dividend        2    0[COMRAM] unsigned int 
  1410 ;;  divisor         2    2[COMRAM] unsigned int 
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  quotient        2    4[COMRAM] unsigned int 
  1413 ;;  counter         1    6[COMRAM] unsigned char 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  2    0[COMRAM] unsigned int 
  1416 ;; Registers used:
  1417 ;;		wreg, status,2, status,0
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1423 ;;      Params:         4       0       0       0
  1424 ;;      Locals:         3       0       0       0
  1425 ;;      Temps:          0       0       0       0
  1426 ;;      Totals:         7       0       0       0
  1427 ;;Total ram usage:        7 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; This function calls:
  1430 ;;		Nothing
  1431 ;; This function is called by:
  1432 ;;		_utoa
  1433 ;;		_countDigit
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text13
  1438  000296                     __ptext13:
  1439                           	callstack 0
  1440  000296                     ___lwdiv:
  1441                           	callstack 25
  1442  000296  0E00               	movlw	0
  1443  000298  6E25               	movwf	(___lwdiv@quotient+1)^0,c
  1444  00029A  0E00               	movlw	0
  1445  00029C  6E24               	movwf	___lwdiv@quotient^0,c
  1446  00029E  5022               	movf	___lwdiv@divisor^0,w,c
  1447  0002A0  1023               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1448  0002A2  B4D8               	btfsc	status,2,c
  1449  0002A4  EF56  F001         	goto	i2u30_41
  1450  0002A8  EF58  F001         	goto	i2u30_40
  1451  0002AC                     i2u30_41:
  1452  0002AC  EF80  F001         	goto	i2l650
  1453  0002B0                     i2u30_40:
  1454  0002B0  0E01               	movlw	1
  1455  0002B2  6E26               	movwf	___lwdiv@counter^0,c
  1456  0002B4  EF60  F001         	goto	i2l1186
  1457  0002B8                     i2l1184:
  1458  0002B8  90D8               	bcf	status,0,c
  1459  0002BA  3622               	rlcf	___lwdiv@divisor^0,f,c
  1460  0002BC  3623               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1461  0002BE  2A26               	incf	___lwdiv@counter^0,f,c
  1462  0002C0                     i2l1186:
  1463  0002C0  AE23               	btfss	(___lwdiv@divisor+1)^0,7,c
  1464  0002C2  EF65  F001         	goto	i2u31_41
  1465  0002C6  EF67  F001         	goto	i2u31_40
  1466  0002CA                     i2u31_41:
  1467  0002CA  EF5C  F001         	goto	i2l1184
  1468  0002CE                     i2u31_40:
  1469  0002CE                     i2l1188:
  1470  0002CE  90D8               	bcf	status,0,c
  1471  0002D0  3624               	rlcf	___lwdiv@quotient^0,f,c
  1472  0002D2  3625               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1473  0002D4  5022               	movf	___lwdiv@divisor^0,w,c
  1474  0002D6  5C20               	subwf	___lwdiv@dividend^0,w,c
  1475  0002D8  5023               	movf	(___lwdiv@divisor+1)^0,w,c
  1476  0002DA  5821               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1477  0002DC  A0D8               	btfss	status,0,c
  1478  0002DE  EF73  F001         	goto	i2u32_41
  1479  0002E2  EF75  F001         	goto	i2u32_40
  1480  0002E6                     i2u32_41:
  1481  0002E6  EF7A  F001         	goto	i2l1196
  1482  0002EA                     i2u32_40:
  1483  0002EA  5022               	movf	___lwdiv@divisor^0,w,c
  1484  0002EC  5E20               	subwf	___lwdiv@dividend^0,f,c
  1485  0002EE  5023               	movf	(___lwdiv@divisor+1)^0,w,c
  1486  0002F0  5A21               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1487  0002F2  8024               	bsf	___lwdiv@quotient^0,0,c
  1488  0002F4                     i2l1196:
  1489  0002F4  90D8               	bcf	status,0,c
  1490  0002F6  3223               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1491  0002F8  3222               	rrcf	___lwdiv@divisor^0,f,c
  1492  0002FA  2E26               	decfsz	___lwdiv@counter^0,f,c
  1493  0002FC  EF67  F001         	goto	i2l1188
  1494  000300                     i2l650:
  1495  000300  C024  F020         	movff	___lwdiv@quotient,?___lwdiv
  1496  000304  C025  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1497  000308  0012               	return		;funcret
  1498  00030A                     __end_of___lwdiv:
  1499                           	callstack 0
  1500                           
  1501 ;; *************** function _ReadSPI *****************
  1502 ;; Defined at:
  1503 ;;		line 131 in file "masterMain.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  a               2    0[COMRAM] int 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  TempVar         1    0        unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      unsigned char 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1517 ;;      Params:         2       0       0       0
  1518 ;;      Locals:         0       0       0       0
  1519 ;;      Temps:          0       0       0       0
  1520 ;;      Totals:         2       0       0       0
  1521 ;;Total ram usage:        2 bytes
  1522 ;; Hardware stack levels used: 1
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_UARTM1
  1527 ;;		_UARTM2
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text14
  1532  00030A                     __ptext14:
  1533                           	callstack 0
  1534  00030A                     _ReadSPI:
  1535                           	callstack 27
  1536  00030A                     
  1537                           ;masterMain.c: 132: if(a==1)
  1538  00030A  0420               	decf	ReadSPI@a^0,w,c
  1539  00030C  1021               	iorwf	(ReadSPI@a+1)^0,w,c
  1540  00030E  A4D8               	btfss	status,2,c
  1541  000310  EF8C  F001         	goto	i2u39_41
  1542  000314  EF8E  F001         	goto	i2u39_40
  1543  000318                     i2u39_41:
  1544  000318  EF8F  F001         	goto	i2l1250
  1545  00031C                     i2u39_40:
  1546  00031C                     
  1547                           ;masterMain.c: 133: PORTCbits.RC2 = 0;
  1548  00031C  9482               	bcf	130,2,c	;volatile
  1549  00031E                     i2l1250:
  1550                           
  1551                           ;masterMain.c: 134: if(a==2)
  1552  00031E  0E02               	movlw	2
  1553  000320  1820               	xorwf	ReadSPI@a^0,w,c
  1554  000322  1021               	iorwf	(ReadSPI@a+1)^0,w,c
  1555  000324  A4D8               	btfss	status,2,c
  1556  000326  EF97  F001         	goto	i2u40_41
  1557  00032A  EF99  F001         	goto	i2u40_40
  1558  00032E                     i2u40_41:
  1559  00032E  EF9A  F001         	goto	i2l102
  1560  000332                     i2u40_40:
  1561  000332                     
  1562                           ;masterMain.c: 135: PORTCbits.RC1 = 0;
  1563  000332  9282               	bcf	130,1,c	;volatile
  1564  000334                     i2l102:
  1565  000334  50C9               	movf	201,w,c	;volatile
  1566                           
  1567                           ;masterMain.c: 138: PIR1bits.SSPIF = 0;
  1568  000336  969E               	bcf	158,3,c	;volatile
  1569  000338                     
  1570                           ;masterMain.c: 139: SSPBUF = 0x00;
  1571  000338  0E00               	movlw	0
  1572  00033A  6EC9               	movwf	201,c	;volatile
  1573  00033C                     i2l103:
  1574  00033C  A69E               	btfss	158,3,c	;volatile
  1575  00033E  EFA3  F001         	goto	i2u41_41
  1576  000342  EFA5  F001         	goto	i2u41_40
  1577  000346                     i2u41_41:
  1578  000346  EF9E  F001         	goto	i2l103
  1579  00034A                     i2u41_40:
  1580  00034A                     
  1581                           ;masterMain.c: 141: if(a==1)
  1582  00034A  0420               	decf	ReadSPI@a^0,w,c
  1583  00034C  1021               	iorwf	(ReadSPI@a+1)^0,w,c
  1584  00034E  A4D8               	btfss	status,2,c
  1585  000350  EFAC  F001         	goto	i2u42_41
  1586  000354  EFAE  F001         	goto	i2u42_40
  1587  000358                     i2u42_41:
  1588  000358  EFAF  F001         	goto	i2l1260
  1589  00035C                     i2u42_40:
  1590  00035C                     
  1591                           ;masterMain.c: 142: PORTCbits.RC2 = 1;
  1592  00035C  8482               	bsf	130,2,c	;volatile
  1593  00035E                     i2l1260:
  1594                           
  1595                           ;masterMain.c: 143: if(a==2)
  1596  00035E  0E02               	movlw	2
  1597  000360  1820               	xorwf	ReadSPI@a^0,w,c
  1598  000362  1021               	iorwf	(ReadSPI@a+1)^0,w,c
  1599  000364  A4D8               	btfss	status,2,c
  1600  000366  EFB7  F001         	goto	i2u43_41
  1601  00036A  EFB9  F001         	goto	i2u43_40
  1602  00036E                     i2u43_41:
  1603  00036E  EFBA  F001         	goto	i2l1264
  1604  000372                     i2u43_40:
  1605  000372                     
  1606                           ;masterMain.c: 144: PORTCbits.RC1 = 1;
  1607  000372  8282               	bsf	130,1,c	;volatile
  1608  000374                     i2l1264:
  1609                           
  1610                           ;masterMain.c: 145: return (SSPBUF);
  1611  000374  50C9               	movf	201,w,c	;volatile
  1612  000376  0012               	return		;funcret
  1613  000378                     __end_of_ReadSPI:
  1614                           	callstack 0
  1615  0000                     
  1616                           	psect	rparam
  1617  0000                     
  1618                           	psect	temp
  1619  000040                     btemp:
  1620                           	callstack 0
  1621  000040                     	ds	1
  1622  0000                     int$flags	set	btemp
  1623  0000                     wtemp8	set	btemp+1
  1624  0000                     ttemp5	set	btemp+1
  1625  0000                     ttemp6	set	btemp+4
  1626  0000                     ttemp7	set	btemp+8
  1627                           
  1628                           	psect	idloc
  1629                           
  1630                           ;Config register IDLOC0 @ 0x200000
  1631                           ;	unspecified, using default values
  1632  200000                     	org	2097152
  1633  200000  FF                 	db	255
  1634                           
  1635                           ;Config register IDLOC1 @ 0x200001
  1636                           ;	unspecified, using default values
  1637  200001                     	org	2097153
  1638  200001  FF                 	db	255
  1639                           
  1640                           ;Config register IDLOC2 @ 0x200002
  1641                           ;	unspecified, using default values
  1642  200002                     	org	2097154
  1643  200002  FF                 	db	255
  1644                           
  1645                           ;Config register IDLOC3 @ 0x200003
  1646                           ;	unspecified, using default values
  1647  200003                     	org	2097155
  1648  200003  FF                 	db	255
  1649                           
  1650                           ;Config register IDLOC4 @ 0x200004
  1651                           ;	unspecified, using default values
  1652  200004                     	org	2097156
  1653  200004  FF                 	db	255
  1654                           
  1655                           ;Config register IDLOC5 @ 0x200005
  1656                           ;	unspecified, using default values
  1657  200005                     	org	2097157
  1658  200005  FF                 	db	255
  1659                           
  1660                           ;Config register IDLOC6 @ 0x200006
  1661                           ;	unspecified, using default values
  1662  200006                     	org	2097158
  1663  200006  FF                 	db	255
  1664                           
  1665                           ;Config register IDLOC7 @ 0x200007
  1666                           ;	unspecified, using default values
  1667  200007                     	org	2097159
  1668  200007  FF                 	db	255
  1669                           
  1670                           	psect	config
  1671                           
  1672                           ; Padding undefined space
  1673  300000                     	org	3145728
  1674  300000  FF                 	db	255
  1675                           
  1676                           ;Config register CONFIG1H @ 0x300001
  1677                           ;	Oscillator Selection bits
  1678                           ;	OSC = RC, 11XX External RC oscillator, CLKO function on RA6
  1679                           ;	Fail-Safe Clock Monitor Enable bit
  1680                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1681                           ;	Internal External Oscillator Switchover bit
  1682                           ;	IESO = ON, Internal External Switchover mode enabled
  1683  300001                     	org	3145729
  1684  300001  CC                 	db	204
  1685                           
  1686                           ;Config register CONFIG2L @ 0x300002
  1687                           ;	Power-up Timer Enable bit
  1688                           ;	PWRTEN = OFF, PWRT disabled
  1689                           ;	Brown-out Reset Enable bits
  1690                           ;	BOREN = ON, Brown-out Reset enabled
  1691                           ;	Brown Out Reset Voltage bits
  1692                           ;	BORV = 0x3, unprogrammed default
  1693  300002                     	org	3145730
  1694  300002  0F                 	db	15
  1695                           
  1696                           ;Config register CONFIG2H @ 0x300003
  1697                           ;	Watchdog Timer Enable bit
  1698                           ;	WDTEN = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1699                           ;	Watchdog Timer Postscale Select bits
  1700                           ;	WDPS = 32768, 1:32768
  1701                           ;	Watchdog Timer Window Enable bit
  1702                           ;	WINEN = OFF, WDT window disabled
  1703  300003                     	org	3145731
  1704  300003  3E                 	db	62
  1705                           
  1706                           ;Config register CONFIG3L @ 0x300004
  1707                           ;	PWM output pins Reset state control
  1708                           ;	PWMPIN = OFF, PWM outputs disabled upon Reset (default)
  1709                           ;	Low-Side Transistors Polarity
  1710                           ;	LPOL = HIGH, PWM0, 2, 4 and 6 are active-high
  1711                           ;	High-Side Transistors Polarity
  1712                           ;	HPOL = HIGH, PWM1, 3, 5 and 7 are active-high
  1713                           ;	Timer1 Oscillator MUX
  1714                           ;	T1OSCMX = ON, Low-power Timer1 operation when microcontroller is in Sleep mode
  1715  300004                     	org	3145732
  1716  300004  3C                 	db	60
  1717                           
  1718                           ;Config register CONFIG3H @ 0x300005
  1719                           ;	FLTA MUX bit
  1720                           ;	FLTAMX = RC1, FLTA input is multiplexed with RC1
  1721                           ;	SSP I/O MUX bit
  1722                           ;	SSPMX = RD1, SCK/SCL clocks and SDA/SDI data are multiplexed with RD3 and RD2, respect
      +                          ively. SDO output is multiplexed with RD1.
  1723                           ;	PWM4 MUX bit
  1724                           ;	PWM4MX = RB5, PWM4 output is multiplexed with RB5
  1725                           ;	TMR0/T5CKI External clock MUX bit
  1726                           ;	EXCLKMX = RC3, TMR0/T5CKI external clock input is multiplexed with RC3
  1727                           ;	MCLR Pin Enable bit
  1728                           ;	MCLRE = ON, Enabled
  1729  300005                     	org	3145733
  1730  300005  99                 	db	153
  1731                           
  1732                           ;Config register CONFIG4L @ 0x300006
  1733                           ;	Stack Full/Underflow Reset Enable bit
  1734                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1735                           ;	Low-Voltage ICSP Enable bit
  1736                           ;	LVP = ON, Low-voltage ICSP enabled
  1737                           ;	Background Debugger Enable bit
  1738                           ;	DEBUG = 0x1, unprogrammed default
  1739  300006                     	org	3145734
  1740  300006  85                 	db	133
  1741                           
  1742                           ; Padding undefined space
  1743  300007                     	org	3145735
  1744  300007  FF                 	db	255
  1745                           
  1746                           ;Config register CONFIG5L @ 0x300008
  1747                           ;	Code Protection bit
  1748                           ;	CP0 = OFF, Block 0 (000200-000FFFh) not code-protected
  1749                           ;	Code Protection bit
  1750                           ;	CP1 = OFF, Block 1 (001000-001FFF) not code-protected
  1751                           ;	Code Protection bit
  1752                           ;	CP2 = OFF, Block 2 (002000-002FFFh) not code-protected
  1753                           ;	Code Protection bit
  1754                           ;	CP3 = OFF, Block 3 (003000-003FFFh) not code-protected
  1755  300008                     	org	3145736
  1756  300008  0F                 	db	15
  1757                           
  1758                           ;Config register CONFIG5H @ 0x300009
  1759                           ;	Boot Block Code Protection bit
  1760                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code-protected
  1761                           ;	Data EEPROM Code Protection bit
  1762                           ;	CPD = OFF, Data EEPROM not code-protected
  1763  300009                     	org	3145737
  1764  300009  C0                 	db	192
  1765                           
  1766                           ;Config register CONFIG6L @ 0x30000A
  1767                           ;	Write Protection bit
  1768                           ;	WRT0 = OFF, Block 0 (000200-000FFFh) not write-protected
  1769                           ;	Write Protection bit
  1770                           ;	WRT1 = OFF, Block 1 (001000-001FFF) not write-protected
  1771                           ;	Write Protection bit
  1772                           ;	WRT2 = OFF, Block 2 (002000-002FFFh) not write-protected
  1773                           ;	Write Protection bit
  1774                           ;	WRT3 = OFF, Block 3 (003000-003FFFh) not write-protected
  1775  30000A                     	org	3145738
  1776  30000A  0F                 	db	15
  1777                           
  1778                           ;Config register CONFIG6H @ 0x30000B
  1779                           ;	Configuration Register Write Protection bit
  1780                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1781                           ;	Boot Block Write Protection bit
  1782                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
  1783                           ;	Data EEPROM Write Protection bit
  1784                           ;	WRTD = OFF, Data EEPROM not write-protected
  1785  30000B                     	org	3145739
  1786  30000B  E0                 	db	224
  1787                           
  1788                           ;Config register CONFIG7L @ 0x30000C
  1789                           ;	Table Read Protection bit
  1790                           ;	EBTR0 = OFF, Block 0 (000200-000FFFh) not protected from table reads executed in other
      +                           blocks
  1791                           ;	Table Read Protection bit
  1792                           ;	EBTR1 = OFF, Block 1 (001000-001FFF) not protected from table reads executed in other 
      +                          blocks
  1793                           ;	Table Read Protection bit
  1794                           ;	EBTR2 = OFF, Block 2 (002000-002FFFh) not protected from table reads executed in other
      +                           blocks
  1795                           ;	Table Read Protection bit
  1796                           ;	EBTR3 = OFF, Block 3 (003000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1797  30000C                     	org	3145740
  1798  30000C  0F                 	db	15
  1799                           
  1800                           ;Config register CONFIG7H @ 0x30000D
  1801                           ;	Boot Block Table Read Protection bit
  1802                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
  1803  30000D                     	org	3145741
  1804  30000D  40                 	db	64
  1805                           tosu	equ	0xFFF
  1806                           tosh	equ	0xFFE
  1807                           tosl	equ	0xFFD
  1808                           stkptr	equ	0xFFC
  1809                           pclatu	equ	0xFFB
  1810                           pclath	equ	0xFFA
  1811                           pcl	equ	0xFF9
  1812                           tblptru	equ	0xFF8
  1813                           tblptrh	equ	0xFF7
  1814                           tblptrl	equ	0xFF6
  1815                           tablat	equ	0xFF5
  1816                           prodh	equ	0xFF4
  1817                           prodl	equ	0xFF3
  1818                           indf0	equ	0xFEF
  1819                           postinc0	equ	0xFEE
  1820                           postdec0	equ	0xFED
  1821                           preinc0	equ	0xFEC
  1822                           plusw0	equ	0xFEB
  1823                           fsr0h	equ	0xFEA
  1824                           fsr0l	equ	0xFE9
  1825                           wreg	equ	0xFE8
  1826                           indf1	equ	0xFE7
  1827                           postinc1	equ	0xFE6
  1828                           postdec1	equ	0xFE5
  1829                           preinc1	equ	0xFE4
  1830                           plusw1	equ	0xFE3
  1831                           fsr1h	equ	0xFE2
  1832                           fsr1l	equ	0xFE1
  1833                           bsr	equ	0xFE0
  1834                           indf2	equ	0xFDF
  1835                           postinc2	equ	0xFDE
  1836                           postdec2	equ	0xFDD
  1837                           preinc2	equ	0xFDC
  1838                           plusw2	equ	0xFDB
  1839                           fsr2h	equ	0xFDA
  1840                           fsr2l	equ	0xFD9
  1841                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      63
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    str	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> stringBuffer(COMRAM[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_UARTM1
    _ISR->_UARTM2
    _UARTM2->_itoa
    _UARTM1->_itoa
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                    _SPI_Init_Master
                        _setupTimer0
                          _setupUART
 ---------------------------------------------------------------------------------
 (1) _setupUART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init_Master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0    4865
                                             25 COMRAM     4     4      0
                             _UARTM1
                             _UARTM2
                           _WriteSPI
                            _rx_char
 ---------------------------------------------------------------------------------
 (3) _rx_char                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WriteSPI                                             2     2      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _UARTM2                                               3     3      0    2425
                                             22 COMRAM     3     3      0
                            _ReadSPI
                               _itoa
                            _tx_char
 ---------------------------------------------------------------------------------
 (3) _UARTM1                                               3     3      0    2425
                                             22 COMRAM     3     3      0
                            _ReadSPI
                               _itoa
                            _tx_char
 ---------------------------------------------------------------------------------
 (4) _tx_char                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    2078
                                             16 COMRAM     6     0      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1459
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              3     1      2     241
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Init_Master
   _setupTimer0
   _setupUART

 _ISR (ROOT)
   _UARTM1
     _ReadSPI
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _tx_char
   _UARTM2
     _ReadSPI
     _itoa
     _tx_char
   _WriteSPI
   _rx_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1D      3F       1       67.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F       3        0.0%
DATA                 0      0      3F      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Nov 26 05:57:44 2021

                      _CS 007C22                       l150 04FC                       l144 04E4  
                     l138 04A4                       l139 04A4                       l165 04CA  
                     _ISR 0008                       _str 0005                       wreg 000FE8  
                    ?_ISR 0020                      l1100 04AC                      l1102 04B8  
                    l1104 04C0                      l1140 048E                      l1150 049C  
                    l1142 0492                      l1152 049E                      l1144 0496  
                    l1136 0486                      l1090 04E6                      l1154 04A0  
                    l1146 0498                      l1138 048A                      l1092 04F8  
                    l1148 049A                      l1094 04CC                      l1096 04DA  
                    l1098 04E2                      _RCIF 007CF5                      i2l94 0484  
                    i2l95 0482                      i2l96 0474                      _TMR0 000FD6  
                    _TMR1 000FCE                      _TRMT 007D61                      _main 0486  
                    _itoa 03DC                      fsr2h 000FDA                      indf2 000FDF  
                    fsr2l 000FD9                      btemp 0040                      _utoa 00B4  
                    start 00B0              ___param_bank 000000           __end_of_ReadSPI 0378  
                   ??_ISR 0039                     ?_main 0020                     ?_itoa 0030  
                   ?_utoa 0027           __end_of___lwdiv 030A                     i2l102 0334  
                   i2l103 033C                     i2l111 0228           __end_of___lwmod 03DC  
                   i2l108 0376                     i2l116 0294                     i2l124 0204  
                   i2l133 00A4                     i2l119 0198                     i2l153 0514  
                   i2l162 0512                     i2l156 0524                     i2l159 0504  
                   i2l650 0300                     i2l660 03D2                     i2l657 0308  
                   i2l842 0148                     i2l667 03DA                     i2l844 0174  
                   i2l836 041E                     _RCREG 000FAE                     _SPBRG 000FAF  
                   _TRISB 000F93                     _TXREG 000FAD   __end_of_SPI_Init_Master 04CC  
                   _digit 000B                     _count 0009                     tablat 000FF5  
         __end_of_rx_char 0526                     ttemp5 0041                     ttemp6 0044  
                   ttemp7 0048                     utoa@c 002F           __end_of_tx_char 0514  
                   utoa@v 002D                     status 000FD8                     wtemp8 0041  
            _stringBuffer 000C           __initialization 0420              __end_of_main 04AC  
            __end_of_itoa 0420              __end_of_utoa 0176                    ??_main 003D  
                  ??_itoa 0036                    ??_utoa 002D             __activetblptr 000000  
                  _ADCON0 000FC2                    _ADCON1 000FC1          __end_of_WriteSPI 0486  
                  i2l1020 0500                    i2l1200 0378                    i2l1210 03BE  
                  i2l1202 038A                    i2l1034 0456                    i2l1212 03C6  
                  i2l1204 0392                    i2l1220 00D8                    i2l1300 0176  
                  i2l1036 045E                    i2l1214 03CC                    i2l1206 039A  
                  i2l1230 0118                    i2l1222 00DC                    i2l1310 01C0  
                  i2l1302 0184                    i2l1038 0462                    i2l1208 03A8  
                  i2l1240 015E                    i2l1232 0134                    i2l1224 00EE  
                  i2l1216 00B4                    i2l1312 01CC                    i2l1250 031E  
                  i2l1242 0170                    i2l1234 0144                    i2l1226 00FA  
                  i2l1218 00BC                    i2l1314 01DE                    i2l1306 019E  
                  i2l1330 0020                    i2l1260 035E                    i2l1252 0332  
                  i2l1180 029E                    i2l1236 014C                    i2l1228 0100  
                  i2l1316 01E2                    i2l1308 01A4                    i2l1084 0514  
                  i2l1340 005A                    i2l1332 0024                    i2l1262 0372  
                  i2l1254 0338                    i2l1246 030A                    i2l1190 02D4  
                  i2l1182 02B0                    i2l1238 0158                    i2l1270 03EA  
                  i2l1318 01FE                    i2l1086 0522                    i2l1342 005E  
                  i2l1334 003A                    i2l1264 0374                    i2l1256 034A  
                  i2l1248 031C                    i2l1192 02EA                    i2l1184 02B8  
                  i2l1272 03F6                    i2l1280 0206                    i2l1336 0040  
                  i2l1344 0066                    i2l1328 0012                    i2l1258 035C  
                  i2l1194 02F2                    i2l1186 02C0                    i2l1178 0296  
                  i2l1274 03FA                    i2l1290 0250                    i2l1282 0214  
                  i2l1346 0074                    i2l1338 0044                    i2l1196 02F4  
                  i2l1188 02CE                    i2l1276 0402                    i2l1268 03DC  
                  i2l1292 025C                    i2l1348 007A                    i2l1198 02FA  
                  i2l1294 026E                    i2l1286 022E                    i2l1296 0272  
                  i2l1288 0234                    i2l1298 028E                    _UARTM1 0206  
                  _UARTM2 0176                    _SSPBUF 000FC9                 ??_ReadSPI 0022  
               ??___lwdiv 0024                 ??___lwmod 0024                    _count2 0007  
                  clear_0 0444                    isa$std 000001                    _number 003D  
            __pdataCOMRAM 003D                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                 ??_rx_char 0020          ?_SPI_Init_Master 0020  
               ??_tx_char 0020              ?_setupTimer0 0020                __accesstop 0060  
 __end_of__initialization 044A             ___rparam_used 000001            __pcstackCOMRAM 0020  
                 ?_UARTM1 0020                   ?_UARTM2 0020                   UARTM1@i 0036  
                 UARTM2@i 0036                 ?_WriteSPI 0020        __size_of_setupUART 0018  
                 i2u30_40 02B0                   i2u30_41 02AC                   i2u31_40 02CE  
                 i2u15_40 0512                   i2u23_40 0522                   i2u31_41 02CA  
                 i2u15_41 050E                   i2u23_41 051E                   i2u40_40 0332  
                 i2u32_40 02EA                   i2u40_41 032E                   i2u32_41 02E6  
                 i2u41_40 034A                   i2u33_40 038A                   i2u17_40 0470  
                 i2u41_41 0346                   i2u33_41 0386                   i2u17_41 046C  
                 i2u42_40 035C                   i2u34_40 03A8                   i2u18_40 0482  
                 i2u50_40 0020                   i2u42_41 0358                   i2u34_41 03A4  
                 i2u18_41 047E                   i2u50_41 001C                   i2u43_40 0372  
                 i2u35_40 03BE                   i2u51_40 003A                   i2u43_41 036E  
                 i2u35_41 03BA                   i2u51_41 0036                   i2u36_40 00EE  
                 i2u44_40 03EA                   i2u52_40 005A                   i2u36_41 00EA  
                 i2u44_41 03E6                   i2u52_41 0056                   i2u37_40 0144  
                 i2u45_40 0224                   i2u53_40 0074                   i2u37_41 0140  
                 i2u45_41 0220                   i2u53_41 0070                   i2u38_40 0170  
                 i2u46_40 028E                   i2u54_40 008C                   i2u38_41 016C  
                 i2u46_41 028A                   i2u54_41 0084                   i2u39_40 031C  
                 i2u47_40 0194                   i2u54_48 008E                   i2u39_41 0318  
                 i2u47_41 0190                   i2u48_40 01FE                   i2u48_41 01FA  
                 _SSPCON1 000FC6                   _SSPSTAT 000FC7           __size_of_UARTM1 0090  
         __size_of_UARTM2 0090                   _ReadSPI 030A                   __Hparam 0000  
                 __Lparam 0000                   ___lwdiv 0296                   ___lwmod 0378  
                 __pcinit 0420                   __ramtop 0300                ??_WriteSPI 0020  
                 __ptext0 0486                   __ptext1 04E6                   __ptext2 04CC  
                 __ptext3 04AC                   __ptext5 0514                   __ptext6 0454  
                 __ptext7 0176                   __ptext8 0206                   __ptext9 04FE  
               _T0CONbits 000FD5              __size_of_ISR 00A8                 _T1CONbits 000FCD  
                 _speedM1 0003                   _speedM2 0001                   _rx_char 0514  
                 _tx_char 04FE      end_of_initialization 044A      __size_of_setupTimer0 001A  
                 itoa@buf 0030                   itoa@val 0032         __end_of_setupUART 04FE  
               _RCSTAbits 000FAB          WriteSPI@data_out 0020                   postinc0 000FEE  
                 utoa@buf 0027                   utoa@val 0029                 _PORTBbits 000F81  
               _PORTCbits 000F82                 _TRISCbits 000F94                 _TRISDbits 000F95  
               _TXSTAbits 000FAC            __end_of_UARTM1 0296            __end_of_UARTM2 0206  
           __pidataCOMRAM 0526       start_initialization 0420               __end_of_ISR 00B0  
                ??_UARTM1 0036                  ??_UARTM2 0036  __size_of_SPI_Init_Master 0020  
       __size_of_WriteSPI 0032               __pbssCOMRAM 0001                  ?_ReadSPI 0020  
        ___lwdiv@dividend 0020              UARTM1@tempM1 0038              UARTM2@tempM2 0038  
               __pintcode 0008                  ?___lwdiv 0020                  ?___lwmod 0020  
                ?_rx_char 0020          ___lwdiv@quotient 0024                  ?_tx_char 0020  
                _IPR1bits 000F9F                  _PIE1bits 000F9D                  _PIR1bits 000F9E  
               _setupUART 04E6         ??_SPI_Init_Master 003D                  ReadSPI@a 0020  
           ??_setupTimer0 003D          __size_of_ReadSPI 006E                  __Hrparam 0000  
                __Lrparam 0000                ?_setupUART 0020          __size_of___lwdiv 0074  
        __size_of___lwmod 0064                  _WriteSPI 0454           ___lwdiv@divisor 0022  
         ___lwdiv@counter 0026                  __ptext10 03DC                  __ptext11 00B4  
                __ptext12 0378                  __ptext13 0296                  __ptext14 030A  
        __size_of_rx_char 0012          __size_of_tx_char 0016             __size_of_main 0026  
           __size_of_itoa 0044             __size_of_utoa 00C2       __end_of_setupTimer0 04E6  
                _speedRef 003F                  isa$xinst 000000                  int$flags 0040  
              _INTCONbits 000FF2                  itoa@base 0034                  intlevel2 0000  
        ___lwmod@dividend 0020               ??_setupUART 003D                  tx_char@a 0020  
                utoa@base 002B           ___lwmod@divisor 0022           ___lwmod@counter 0024  
             _SSPCON1bits 000FC6               _setupTimer0 04CC           _SPI_Init_Master 04AC  
